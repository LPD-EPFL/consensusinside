cscope 15 $HOME/BFT/src/protocols/ring -q 0000006023 0000603137
	@R_ACK.cc

1 
	~<°dlib.h
>

2 
	~<°rögs.h
>

3 
	~"th_as£π.h
"

4 
	~"R_Mesßge_ègs.h
"

5 
	~"R_ACK.h
"

6 
	~"R_Node.h
"

7 
	~"R_PröcùÆ.h
"

8 
	~"MD5.h
"

13 
	gR_ACK
::
	$R_ACK
() :

14 
	$R_Mesßge
(
R_ACK_èg
, 
R_Max_mesßge_size
)

16 
	}
}

18 
	gR_ACK
::
	$R_ACK
(
cid
, 
Seqno
& 
£qno
, 
Reque°_id
& 
r
, 
Dige°
& 
d
) :

19 
	$R_Mesßge
(
R_ACK_èg
, 
R_Max_mesßge_size
)

21 
	`ªp
().
cid
 = cid;

22 
	`ªp
().
rid
 = 
r
;

23 
	`ªp
().
£qno
 = seqno;

24 
	`ªp
().
od
 = 
d
;

25 
	`£t_size
((
R_ACK_ªp
)+
R_node
->
	`authítiˇt‹s_size
());

26 
	}
}

28 
	gR_ACK
::
	$R_ACK
(
R_ACK_ªp
 *
ªp
) :

29 
	`R_Mesßge
((
R_Mesßge_ªp
*)
ªp
)

31 
	`£t_size
((
R_ACK_ªp
)+
R_node
->
	`authítiˇt‹s_size
());

32 
	}
}

34 
	gR_ACK
::~
	$R_ACK
()

36 
	}
}

38 
ölöe
 
R_ACK
::
	$£t_dige°
(
Dige°
& 
d
)

42 
	`ªp
().
od
 = 
d
;

43 
	}
}

45 
boﬁ
 
	gR_ACK
::
	$c⁄vît
(
R_Mesßge
 *
m1
, 
R_ACK
 *&
m2
)

48 i‡(!
m1
->
	`has_èg
(
R_ACK_èg
, (
R_ACK_ªp
)))

50  
Ál£
;

53 
m2
 = 
√w
 
	`R_ACK
();

54 
	`mem˝y
(
m2
->
	`c⁄ã¡s
(), 
m1
->c⁄ã¡s(), m1->
	`size
());

55 
dñëe
 
m1
;

56 
m2
->
	`åim
();

57  
åue
;

58 
	}
}

61 
	gR_ACK
::
Iãøt‹
& 
R_ACK
::Iãøt‹::
›î©‹
++()

66 
R_ACK_ªp
 *
Ω
;

67 
	gªque°_size
 = 0;

68 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
) {

69 
ªque°_size
 = 
d©a
.
ªq
->
size
();

72 i‡(!(
	gd©a
.
	g‹eq
->
is_ack_b©ched
(Ë|| d©a.‹eq->
is_b©ched
())

73 || 
	gd©a
.
	goff£t
+
	gªque°_size
 >
d©a
.
‹eq
->
size
()

74 || 
d©a
.
‹eq
->
size
(Ë<
ALIGNED_SIZE
((
R_ACK_ªp
)+
R_node
->
authítiˇt‹s_size
())) {

76 
d©a
.
ödex
 = -1;

77 
	gd©a
.
	goff£t
 = -1;

78 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
)

79 
dñëe
 
d©a
.
ªq
;

80 
	gd©a
.
	gªq
 = 
NULL
;

81  *
	gthis
;

84 i‡(
	gd©a
.
	gödex
 == 0) {

85 *
±r
 = 
d©a
.
‹eq
->
c⁄ã¡s
()+
ALIGNED_SIZE
((
R_ACK_ªp
)+
R_node
->
authítiˇt‹s_size
());

86 
	gΩ
 = (
R_ACK_ªp
*)
±r
;

88 
	gΩ
 = (
R_ACK_ªp
*)(
d©a
.
‹eq
->
c⁄ã¡s
()+d©a.
off£t
+d©a.
ªq
->
size
());

90 
	gsize
 = 
Ω
->
size
;

92 
R_ACK
 *
	g∫
 = 
√w
 R_ACK(
Ω
);

95 i‡(
	gd©a
.
	gödex
 == 0) {

96 
d©a
.
off£t
 = 
ALIGNED_SIZE
((
R_ACK_ªp
)+
R_node
->
authítiˇt‹s_size
());

98 
	gd©a
.
	goff£t
 +
ALIGNED_SIZE
(
d©a
.
ªq
->
size
());

100 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
)

101 
dñëe
 
d©a
.
ªq
;

102 
	gd©a
.
	gªq
 = 
∫
;

103 
	gd©a
.
	gödex
++;

104  *
	gthis
;

	@R_ACK.h

1 #i‚de‡
_R_ACK_h


2 
	#_R_ACK_h
 1

	)

4 
	~"R_Mesßge.h
"

5 
	~"ty≥s.h
"

6 
	~"R_Rïly.h
"

7 
	~"AReque°.h
"

9 
˛ass
 
	gDige°
;

10 
˛ass
 
	gR_PröcùÆ
;

15 
	gR_ACK_ªp
: 
public
 
R_Mesßge_ªp
 {

16 
cid
;

20 
Reque°_id
 
	grid
;

22 
uöt32_t
 
	gty≥
;

23 
Dige°
 
	god
;

24 
Seqno
 
	g£qno
;

30 ˛as†
	cR_ACK
: 
public
 
R_Mesßge
 {

38 
public
:

39 
R_ACK
();

40 
R_ACK
(
R_ACK_ªp
 *
ªp
);

41 
R_ACK
(
cid
, 
Seqno
& 
£qno
, 
Reque°_id
& 
r
, 
Dige°
& 
d
);

44 ~
R_ACK
();

46 c⁄° 
	mbig_ªq_thªsh
 = 0;

48 
	$˛õ¡_id
() const;

51 
Reque°_id
& 
	`ªque°_id
();

54 
Seqno
 
	$£qno
(Ëc⁄° {  
	`ªp
().
£qno
; };

56 
	`£t_b©ched
();

59 
boﬁ
 
	$is_b©ched
() const;

62 
	`£t_ack_b©ched
();

65 
boﬁ
 
	$is_ack_b©ched
() const;

68 
boﬁ
 
	`c⁄vît
(
R_Mesßge
 *
m1
, 
R_ACK
 *&
m2
);

72 
Dige°
& 
	$dige°
() const {

73  
	`ªp
().
od
;

74 
	}
}

76 
£t_dige°
(
Dige°
& 
d
);

79 
	g¥iv©e
:

80 
R_ACK_ªp
 &
	$ªp
() const;

83 ˛as†
	cIãøt‹D©a
 {

84 
public
:

85 
R_ACK
 *
‹eq
;

86 
R_ACK
 *
ªq
;

87 
ödex
;

88 
off£t
;

89 
boﬁ
 
›î©‹
==(c⁄° 
Iãøt‹D©a
& 
o
) {

90  (
o
.
‹eq
 =‹eq)&&(o.
ªq
=Ùeq)&&(o.
ödex
==ödex)&&(o.
off£t
==offset); }

91 
	}
};

94 
	gpublic
:

95 ˛as†
	cIãøt‹
 {

96 
public
:

97 
Iãøt‹
(
Iãøt‹D©a
 
d
) {

98 
d©a
 = 
d
;

100 ~
Iãøt‹
() {}

101 
boﬁ
 
	g›î©‹
==(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{  (
d©a
==other.data); }

102 
boﬁ
 
	g›î©‹
!=(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{  !(
d©a
==other.data); }

103 
	gIãøt‹
& 
	g›î©‹
=(c⁄° 
Iãøt‹
& 
Ÿhî
) {

104 
d©a
 = 
Ÿhî
.data;

105  *
	gthis
;

107 
	gIãøt‹
& 
	g›î©‹
++();

109 
Iãøt‹D©a
 
	gd©a
;

111 
Iãøt‹
 
	$begö
() {

112 
Iãøt‹D©a
 
dt
;

113 
dt
.
‹eq
 = dt.
ªq
 = 
this
;

114 
dt
.
ödex
 = 0;

115 
dt
.
off£t
 = 0;

116  
	`Iãøt‹
(
dt
);

117 
	}
}

118 
Iãøt‹
 
	$íd
() {

119 
Iãøt‹D©a
 
dt
;

120 
dt
.
‹eq
 = 
this
;

121 
dt
.
ªq
 = 
NULL
;

122 
dt
.
ödex
 = -1;

123 
dt
.
off£t
 = -1;

124  
	`Iãøt‹
(
dt
);

125 
	}
}

128 
ölöe
 
	gR_ACK_ªp
& 
	gR_ACK
::
	$ªp
() const {

129 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

130  *((
R_ACK_ªp
*Ë
msg
);

131 
	}
}

133 
ölöe
 
	gR_ACK
::
	$˛õ¡_id
() const {

135  
	`ªp
().
cid
;

136 
	}
}

138 
ölöe
 
	gReque°_id
 &
	gR_ACK
::
	$ªque°_id
() {

139  
	`ªp
().
rid
;

140 
	}
}

142 
ölöe
 
	gR_ACK
::
	$£t_b©ched
() {

143 
	`ªp
().
exåa
 =Ñï().exå®| 
R_MESSAGE_BATCH
;

144 
	}
}

146 
ölöe
 
boﬁ
 
	gR_ACK
::
	$is_b©ched
() const {

147  
	`ªp
().
exåa
 & 
R_MESSAGE_BATCH
;

148 
	}
}

150 
ölöe
 
	gR_ACK
::
	$£t_ack_b©ched
() {

151 
	`ªp
().
exåa
 =Ñï().exå®| 
R_MESSAGE_ACK_BATCH
;

152 
	}
}

154 
ölöe
 
boﬁ
 
	gR_ACK
::
	$is_ack_b©ched
() const {

155  
	`ªp
().
exåa
 & 
R_MESSAGE_ACK_BATCH
;

156 
	}
}

	@R_Checkpoint.cc

1 
	~<°dlib.h
>

2 
	~<°rögs.h
>

3 
	~"th_as£π.h
"

4 
	~"R_Mesßge_ègs.h
"

5 
	~"R_Checkpoöt.h
"

6 
	~"R_Node.h
"

7 
	~"R_PröcùÆ.h
"

8 
	~"MD5.h
"

10 
	gR_Checkpoöt
::
	$R_Checkpoöt
() :

11 
	$R_Mesßge
(
R_Checkpoöt_èg
, 
R_Max_mesßge_size
)

13 
	`ªp
().
id
 = 
R_node
->
	`id
();

15 
	`£t_size
((
R_Checkpoöt_ªp
));

16 
	}
}

18 
	gR_Checkpoöt
::~
	$R_Checkpoöt
()

20 
	}
}

22 
R_Checkpoöt
::
	$ª_authítiˇã
(
R_PröcùÆ
 *
p
, 
boﬁ
 
°abÀ
)

24 i‡(
	`ªp
().
exåa
 !1 && 
°abÀ
) {

25 
	`ªp
().
exåa
 = 1;

26 
R_node
->
	`gí_sig«tuª
(
	`c⁄ã¡s
(), (
R_Checkpoöt_ªp
),

27 
	`c⁄ã¡s
()+(
R_Checkpoöt_ªp
));

29 
	}
}

31 
boﬁ
 
	gR_Checkpoöt
::
	$vîify
()

34 i‡(!
R_node
->
	`is_ª∂iˇ
(
	`id
())Ë 
Ál£
;

37 i‡(
	`size
()-()(
R_Checkpoöt_ªp
Ë< 
R_node
->
	`sig_size
(
	`id
()))

38  
Ál£
;

40  
R_node
->
	`i_to_p
(
	`id
())->
	`vîify_sig«tuª
(
	`c⁄ã¡s
(), (
R_Checkpoöt_ªp
),

41 
	`c⁄ã¡s
()+(
R_Checkpoöt_ªp
));

42 
	}
}

44 
boﬁ
 
	gR_Checkpoöt
::
	$c⁄vît
(
R_Mesßge
 *
m1
, 
R_Checkpoöt
 *&
m2
)

47 i‡(!
m1
->
	`has_èg
(
R_Checkpoöt_èg
, (
R_Checkpoöt_ªp
)))

49  
Ál£
;

52 
m2
 = 
√w
 
	`R_Checkpoöt
();

53 
	`mem˝y
(
m2
->
	`c⁄ã¡s
(), 
m1
->c⁄ã¡s(), m1->
	`size
());

57 
m2
->
	`åim
();

58  
åue
;

59 
	}
}

	@R_Checkpoint.h

1 #i‚de‡
_R_Checkpoöt_h


2 
	#_R_Checkpoöt_h
 1

	)

4 
	~"R_Mesßge.h
"

5 
	~"ty≥s.h
"

6 
	~"R_Rïly.h
"

8 
˛ass
 
	gDige°
;

9 
˛ass
 
	gR_PröcùÆ
;

14 
	gR_Checkpoöt_ªp
: 
public
 
R_Mesßge_ªp
 {

15 
id
;

16 
Seqno
 
	g£qid
;

17 
Dige°
 
	gdige°
;

23 ˛as†
	cR_Checkpoöt
: 
public
 
R_Mesßge
 {

31 
public
:

32 
R_Checkpoöt
();

36 
	mvútuÆ
 ~
R_Checkpoöt
();

38 c⁄° 
	mbig_ªq_thªsh
 = 0;

40 
	mDige°
 &
	$dige°
(Ëc⁄° {  
	`ªp
().
dige°
; }

43 
	`£t_dige°
(
Dige°
 
dige°
);

46 
	$id
(Ëc⁄° {  
	`ªp
().
id
; 
	}
}

49 
boﬁ
 
	$°abÀ
() const;

53 
	`ª_authítiˇã
(
R_PröcùÆ
 *
p
, 
boﬁ
 
°abÀ
);

59 
boﬁ
 
	`vîify
();

61 
boﬁ
 
	$m©ch
(c⁄° 
R_Checkpoöt
 *
c
) const;

64 
Seqno
& 
	$gë_£qno
() const;

67 
	`£t_£qno
(
Seqno
 
chkid
);

70 
boﬁ
 
	`c⁄vît
(
R_Mesßge
 *
m1
, 
R_Checkpoöt
 *&
m2
);

78 
¥iv©e
:

79 
R_Checkpoöt_ªp
 &
	$ªp
() const;

81 
	}
};

83 
ölöe
 
	gR_Checkpoöt_ªp
& 
	gR_Checkpoöt
::
	$ªp
() const {

84 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

85  *((
R_Checkpoöt_ªp
*Ë
msg
);

86 
	}
}

88 
ölöe
 
	gR_Checkpoöt
::
	$£t_dige°
(
Dige°
 
dige°
) {

89 
	`ªp
().
dige°
 = digest;

90 
	}
}

92 
ölöe
 
	gR_Checkpoöt
::
	$£t_£qno
(
Seqno
 
chkid
) {

93 
	`ªp
().
£qid
 = 
chkid
;

94 
	}
}

96 
ölöe
 
	gSeqno
 &
	gR_Checkpoöt
::
	$gë_£qno
() const {

97  
	`ªp
().
£qid
;

98 
	}
}

100 
ölöe
 
boﬁ
 
	gR_Checkpoöt
::
	$m©ch
(c⁄° 
R_Checkpoöt
 *
c
) const

102 
	`th_as£π
(
	`gë_£qno
(Ë=
c
->get_seqno(), "Invalidárgument");

103  
	`dige°
(Ë=
c
->digest();

104 
	}
}

	@R_Client.cc

1 
	~<°rög.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<uni°d.h
>

6 
	~<sys/time.h
>

7 
	~<sys/sockë.h
>

8 
	~<√töë/ö.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√tdb.h
>

11 
	~<√töë/t˝.h
>

13 
	~"th_as£π.h
"

14 
	~"R_Clõ¡.h
"

15 
	~"R_Mesßge.h
"

16 
	~"R_Rïly.h
"

17 
	~"R_Reque°.h
"

21 *
	$ª∂õs_h™dÀr_hñ≥r
(*
o
)

23 **
o2
 = (**)
o
;

24 
R_Clõ¡
 &
r
 = (R_Clõ¡&)(*
o2
);

25 
r
.
	`ª∂õs_h™dÀr
();

27 
	}
}

29 
	gR_Clõ¡
::
	$R_Clõ¡
(
FILE
 *
c⁄fig_fûe
, * 
ho°_«me
, 
p‹t
) :

30 
	$R_Node
(
c⁄fig_fûe
, 
NULL
, 
ho°_«me
, 
p‹t
)

33 i‡(
	`is_ª∂iˇ
(
	`id
()))

35 
	`th_Áû
("R_Node isáÑeplica");

37 
R_node
=
this
;

38 
node
=
this
;

42 
out_rid
 = 
	`√w_rid
();

43 
out_ªq
 = 0;

44 
nb_ª˚ived_ªque°s
 = 0;

47 
	`Ârötf
(
°dîr
, "R_Clõ¡[%d]:ÅryögÅÿc⁄√˘Åÿ%lx:%dá†hód\n", 
	`id
(), 
¥öcùÆs
[(id()%
num_ª∂iˇs
)]->
TCP_addr_f‹_˛õ¡s
.
sö_addr
.
s_addr
,ÖröcùÆs[(id()%num_ª∂iˇs)]->TCP_addr_f‹_˛õ¡s.
sö_p‹t
);

48 
sockë_to_my_¥im¨y
 = 
	`¸óãClõ¡Sockë
(
¥öcùÆs
[((
	`id
()+0)%
num_ª∂iˇs
)]->
TCP_addr_f‹_˛õ¡s
);

49 
cid
 = 
	`id
();

50 
	`£ndto
(
sockë_to_my_¥im¨y
, &
cid
, (cid), 0, 0, 0);

61 #i‚de‡
REPLY_BY_PRIMARY


63 
	`Ârötf
(
°dîr
, "R_Clõ¡[%d]:ÅryögÅÿc⁄√˘Åÿ%lx:%dá†èû\n", 
	`id
(), 
¥öcùÆs
[((id()+
num_ª∂iˇs
-1)%num_ª∂iˇs)]->
TCP_addr_f‹_˛õ¡s
.
sö_addr
.
s_addr
,ÖröcùÆs[((id()+num_ª∂iˇs-1)%num_ª∂iˇs)]->TCP_addr_f‹_˛õ¡s.
sö_p‹t
);

64 
sockë_to_my_œ°


65 
	`¸óãClõ¡Sockë
(
¥öcùÆs
[((
	`id
()+
num_ª∂iˇs
-1)%num_ª∂iˇs)]->
TCP_addr_f‹_˛õ¡s
);

66 
	`£ndto
(
sockë_to_my_œ°
, &
cid
, (cid), 0, 0, 0);

76 i‡(
	`±hªad_¸óã
(&
ª∂õs_h™dÀr_thªad
, 0, &
ª∂õs_h™dÀr_hñ≥r
,

77 (*)
this
) != 0)

79 
	`Ârötf
(
°dîr
, "FailedÅo createÅheÅhread forÑeceiving messages fromÖredecessor inÅheÑing\n");

80 
	`exô
(1);

82 
	}
}

84 
	gR_Clõ¡
::~
	$R_Clõ¡
()

86 
	}
}

88 
R_Clõ¡
::
	$ª∂õs_h™dÀr
()

90 
fd_£t
 
socks
;

91 
ªadsocks
;

92 
timevÆ
 
timeout
;

93 #ifde‡
REPLY_BY_PRIMARY


94 
sockë_to_a_ª∂iˇ
 = 
sockë_to_my_¥im¨y
;

96 
sockë_to_a_ª∂iˇ
 = 
sockë_to_my_œ°
;

101 
R_Mesßge
* 
m
 = 
R_node
->
	`ªcv
(
sockë_to_a_ª∂iˇ
);

102 i‡(
m
 =
NULL
) {

103 
	`FD_ZERO
(&
socks
);

104 
	`FD_SET
(
sockë_to_a_ª∂iˇ
, &
socks
);

105 
timeout
.
tv_£c
 = 1;

106 
timeout
.
tv_u£c
 = 0;

107 
ªadsocks
 = 
	`£À˘
(
sockë_to_a_ª∂iˇ
+1, &
socks
, (
fd_£t
*)0, (fd_£t*)0, &
timeout
);

108 i‡(
ªadsocks
 < 0)

110 
	`Ârötf
(
°dîr
, "select inÑequests_from_predecessor_handler");

111 
	`exô
(1);

116 i‡(
m
->
	`èg
()==
R_Rïly_èg
)

119 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

121 
öcomög_queue
.
	`≠≥nd
(
m
);

122 
	`±hªad_c⁄d_sig«l
(&
nŸ_em±y_öcomög_queue_c⁄d
);

124 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

127 
dñëe
 
m
;

131 
	}
}

133 
boﬁ
 
	gR_Clõ¡
::
	$£nd_ªque°
(
R_Reque°
 *
ªq
, 
size
, 
boﬁ
 
ro
)

135 i‡(
ro
)

137 
	`Ârötf
(
°dîr
, "Read-onlyÑequestsáre currentlyÇot handled\n");

138  
Ál£
;

141 i‡(
out_ªq
 == 0)

145 #ifde‡
TRACES


146 
	`Ârötf
(
°dîr
, "Clõ¡::£nd_ªque° (sizê%d)\n", 
ªq
->
	`size
());

149 #ifde‡
TRACES


150 
	`Ârötf
(

151 
°dîr
,

153 
out_rid
, 
ªq
->
	`ªque°_id
(),Ñeq->
	`size
());

154 
	`Ârötf
(
°dîr
,

156 
out_rid
, 
ªq
->
	`ªque°_id
());

159 
out_ªq
 = 
ªq
;

160 
ªq
->
	`ªque°_id
(Ë
	`gë_rid
();

161 
Àn
 = 
ªq
->
	`size
();

162 
îr
 = 
	`£nd_Æl
(
sockë_to_my_¥im¨y
, (*Ë
ªq
->
	`c⁄ã¡s
(), &
Àn
);

163  
îr
 != -1;

167  
Ál£
;

169 
	}
}

171 
R_Rïly
 *
	gR_Clõ¡
::
	$ªcv_ª∂y
()

173 i‡(
out_ªq
 == 0)

176 
	`Ârötf
(
°dîr
, "Client::recv_reply:Ço outgoingÑequest\n");

186 
R_Mesßge
 *
m
;

188 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

190 
öcomög_queue
.
	`size
() == 0)

193 
	`±hªad_c⁄d_waô
(&
nŸ_em±y_öcomög_queue_c⁄d
,

194 &
öcomög_queue_muãx
);

196 
m
 = 
öcomög_queue
.
	`ªmove
();

198 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

200 
R_Rïly
* 
ªp
;

201 i‡(!
R_Rïly
::
	`c⁄vît
(
m
, 
ªp
))

203 
dñëe
 
m
;

207 i‡(
ªp
->
	`ªque°_id
(Ë!
out_rid
)

209 #ifde‡
TRACES


210 
	`Ârötf
(
°dîr
, "Clõ¡::ªcv_ª∂y:Ñid i†%Œu dif„ª¡ from ouàrid %Œu \n",
ªp
->
	`ªque°_id
(), 
out_rid
);

212 
dñëe
 
ªp
;

215 #ifde‡
USE_MACS


216 i‡(!
ªp
->
	`vîify
())

218 
	`Ârötf
(
°dîr
, "Client::recv_reply: verifyÑeturns FALSE\n");

219 
	`exô
(1);

222 
nb_ª˚ived_ªque°s
++;

224 
out_rid
 = 
	`√w_rid
();

225 
out_ªq
 = 0;

226  
ªp
;

228 
	}
}

	@R_Client.h

1 #i‚de‡
_R_Clõ¡_h


2 
	#_R_Clõ¡_h
 1

	)

4 
	~<±hªad.h
>

6 
	~<°dio.h
>

7 
	~"ty≥s.h
"

8 
	~"R_Node.h
"

9 
	~"R_Reque°.h
"

13 
	~"TCP_√tw‹k.h
"

16 
˛ass
 
R_Rïly
;

17 
˛ass
 
	gR_Reque°
;

19 ˛as†
	cR_Clõ¡
 : 
public
 
R_Node


21 
public
:

22 
R_Clõ¡
(
FILE
 *
c⁄fig_fûe
, *
ho°_«me
, 
p‹t
=0);

29 
	mvútuÆ
 ~
R_Clõ¡
();

32 
boﬁ
 
£nd_ªque°
(
R_Reque°
 *
ªq
, 
size
, boﬁ 
ro
);

37 
R_Rïly
 *
ªcv_ª∂y
();

42 
Reque°_id
 
	$gë_rid
() const;

47 
nb_ª˚ived_ªque°s
;

48 
R_Node
 *
node
;

49 
timedout
;

52 
±hªad_t
 
ª˚ive_ª•_thªad_id
;

53 
±hªad_t
 
ª∂õs_h™dÀr_thªad
;

54 
	`ª∂õs_h™dÀr
();

56 
sockë_to_my_¥im¨y
;

57 
sockë_to_my_œ°
;

61 
¥Ÿe˘ed
:

62 
Reque°_id
 
out_rid
;

63 
R_Reque°
 *
out_ªq
;

64 
¥iv©e
:

67 
ölöe
 
Reque°_id
 
R_Clõ¡
::
	$gë_rid
() const

69  
out_rid
;

70 
	}
}

	@R_Cryptography.h

1 #i‚de‡
_R_Cry±ogøphy_h


2 
	#_R_Cry±ogøphy_h
 1

	)

4 
	~"ty≥s.h
"

8 c⁄° 
	gR_UMAC_size
 = 8;

9 c⁄° 
	gR_UN⁄˚_size
 = ();

10 c⁄° 
	gR_MAR_size
 = 
R_UMAC_size
 + 
R_UN⁄˚_size
;

12 c⁄° 
	gR_N⁄˚_size
 = 16;

13 c⁄° 
	gR_N⁄˚_size_u
 = 
R_N⁄˚_size
/();

14 c⁄° 
	gR_Key_size
 = 16;

15 c⁄° 
	gR_Key_size_u
 = 
R_Key_size
/();

	@R_Deliver.cc

1 
	~<°dlib.h
>

2 
	~<°rögs.h
>

3 
	~"th_as£π.h
"

4 
	~"R_Mesßge_ègs.h
"

5 
	~"R_Dñivî.h
"

6 
	~"R_Node.h
"

7 
	~"R_PröcùÆ.h
"

8 
	~"MD5.h
"

10 
	gR_Dñivî
::
	$R_Dñivî
() :

11 
	$R_Mesßge
(
R_Dñivî_èg
, 
R_Max_mesßge_size
)

13 
	}
}

15 
	gR_Dñivî
::
	$R_Dñivî
(
cid
, 
Seqno
& 
£qno
, 
Reque°_id
& 
r
, 
Dige°
& 
d
) :

16 
	$R_Mesßge
(
R_Dñivî_èg
, 
R_Max_mesßge_size
)

18 
	`ªp
().
cid
 = cid;

19 
	`ªp
().
rid
 = 
r
;

20 
	`ªp
().
£qno
 = seqno;

21 
	`ªp
().
od
 = 
d
;

22 
	`£t_size
((
R_Dñivî_ªp
)+
R_node
->
	`authítiˇt‹s_size
());

23 
	}
}

25 
	gR_Dñivî
::~
	$R_Dñivî
()

27 
	}
}

29 
ölöe
 
R_Dñivî
::
	$£t_dige°
(
Dige°
& 
d
)

33 
	`ªp
().
od
 = 
d
;

34 
	}
}

36 
boﬁ
 
	gR_Dñivî
::
	$c⁄vît
(
R_Mesßge
 *
m1
, 
R_Dñivî
 *&
m2
)

39 i‡(!
m1
->
	`has_èg
(
R_Dñivî_èg
, (
R_Dñivî_ªp
)))

41  
Ál£
;

44 
m2
 = 
√w
 
	`R_Dñivî
();

45 
	`mem˝y
(
m2
->
	`c⁄ã¡s
(), 
m1
->c⁄ã¡s(), m1->
	`size
());

46 
dñëe
 
m1
;

47 
m2
->
	`åim
();

48  
åue
;

49 
	}
}

	@R_Deliver.h

1 #i‚de‡
_R_Dñivî_h


2 
	#_R_Dñivî_h
 1

	)

4 
	~"R_Mesßge.h
"

5 
	~"ty≥s.h
"

6 
	~"R_Rïly.h
"

7 
	~"AReque°.h
"

9 
˛ass
 
	gDige°
;

10 
˛ass
 
	gR_PröcùÆ
;

15 
	gR_Dñivî_ªp
: 
public
 
R_Mesßge_ªp
 {

16 
cid
;

20 
Reque°_id
 
	grid
;

22 
	gty≥
;

23 
Dige°
 
	god
;

24 
Seqno
 
	g£qno
;

30 ˛as†
	cR_Dñivî
: 
public
 
R_Mesßge
 {

38 
public
:

39 
R_Dñivî
();

40 
R_Dñivî
(
cid
, 
Seqno
& 
£qno
, 
Reque°_id
& 
r
, 
Dige°
& 
d
);

43 ~
R_Dñivî
();

45 c⁄° 
	mbig_ªq_thªsh
 = 0;

47 
	$˛õ¡_id
() const;

50 
Reque°_id
& 
	`ªque°_id
();

53 
Seqno
 
	$£qno
(Ëc⁄° {  
	`ªp
().
£qno
; };

55 
boﬁ
 
	`c⁄vît
(
R_Mesßge
 *
m1
, 
R_Dñivî
 *&
m2
);

59 
Dige°
& 
	$dige°
() const {

60  
	`ªp
().
od
;

61 
	}
}

63 
£t_dige°
(
Dige°
& 
d
);

66 
	g¥iv©e
:

67 
R_Dñivî_ªp
 &
	$ªp
() const;

69 
	}
};

71 
ölöe
 
	gR_Dñivî_ªp
& 
	gR_Dñivî
::
	$ªp
() const {

72 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

73  *((
R_Dñivî_ªp
*Ë
msg
);

74 
	}
}

76 
ölöe
 
	gR_Dñivî
::
	$˛õ¡_id
() const {

78  
	`ªp
().
cid
;

79 
	}
}

81 
ölöe
 
	gReque°_id
 &
	gR_Dñivî
::
	$ªque°_id
() {

82  
	`ªp
().
rid
;

83 
	}
}

	@R_Mes_queue.cc

1 
	~"R_Mesßge.h
"

2 
	~"R_Mes_queue.h
"

4 
	gR_Mes_queue
::
	$R_Mes_queue
() :

5 
	`hód
(0), 
	`èû
(0), 
	`√Àms
(0), 
	$nbyãs
(0)

7 
	}
}

9 
boﬁ
 
	gR_Mes_queue
::
	$≠≥nd
(
R_Mesßge
 *
m
)

11 
PR_Node
 *
˙
 = 
√w
 
	`PR_Node
(
m
);

13 
nbyãs
 +
m
->
	`size
();

14 
√Àms
++;

16 i‡(
hód
 == 0)

18 
hód
 = 
èû
 = 
˙
;

19 
˙
->
¥ev
 = cn->
√xt
 = 0;

23 
èû
->
√xt
 = 
˙
;

24 
˙
->
¥ev
 = 
èû
;

25 
˙
->
√xt
 = 0;

26 
èû
 = 
˙
;

28  
åue
;

29 
	}
}

31 
R_Mesßge
 *
	gR_Mes_queue
::
	$ªmove
()

33 i‡(
hód
 == 0)

36 
R_Mesßge
 *
ªt
 = 
hód
->
m
;

37 
	`th_as£π
(
ªt
 != 0, "Invalid state");

39 
PR_Node
* 
ﬁd_hód
 = 
hód
;

40 
hód
 = hód->
√xt
;

41 
dñëe
 
ﬁd_hód
;

43 i‡(
hód
 != 0)

44 
hód
->
¥ev
 = 0;

46 
èû
 = 0;

48 
√Àms
--;

49 
nbyãs
 -
ªt
->
	`size
();

51  
ªt
;

52 
	}
}

	@R_Mes_queue.h

1 #i‚de‡
_R_Mes_queue_h


2 
	#_R_Mes_queue_h


	)

4 
	~"ty≥s.h
"

6 
˛ass
 
	gR_Mesßge
;

8 ˛as†
	cR_Mes_queue


13 
	mpublic
:

14 
R_Mes_queue
();

17 
boﬁ
 
≠≥nd
(
R_Mesßge
 *
r
);

24 
R_Mesßge
 *
ªmove
();

28 
R_Mesßge
* 
	$fú°
() const;

32 
	$size
() const;

35 
	$num_byãs
() const;

38 
¥iv©e
:

39 
	sPR_Node


41 
R_Mesßge
* 
m
;

42 
PR_Node
* 
√xt
;

43 
PR_Node
* 
¥ev
;

45 
	`PR_Node
(
R_Mesßge
 *
msg
)

47 
m
 = 
msg
;

49 ~
	`PR_Node
()

55 
PR_Node
* 
hód
;

56 
PR_Node
* 
èû
;

58 
√Àms
;

59 
nbyãs
;

61 
	}
};

63 
ölöe
 
	gR_Mes_queue
::
	$size
() const

65  
√Àms
;

66 
	}
}

68 
ölöe
 
	gR_Mes_queue
::
	$num_byãs
() const

70  
nbyãs
;

71 
	}
}

73 
ölöe
 
R_Mesßge
 *
	gR_Mes_queue
::
	$fú°
() const

75 i‡(
hód
)

78  
hód
->
m
;

81 
	}
}

	@R_Message.cc

1 
	~<°dlib.h
>

2 
	~"th_as£π.h
"

3 
	~"R_Mesßge.h
"

5 
	gR_Mesßge
::
	$R_Mesßge
(
sz
) :

6 
	`msg
(0), 
	`max_size
(
	$ALIGNED_SIZE
(
sz
))

8 i‡(
sz
 != 0)

11 
msg
 = (
R_Mesßge_ªp
*Ë
	`mÆloc
(
max_size
);

12 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

13 
msg
->
èg
 = -1;

14 
msg
->
size
 = 0;

15 
msg
->
exåa
 = 0;

17 
	}
}

19 
	gR_Mesßge
::
	$R_Mesßge
(
t
, 
sz
)

21 
max_size
 = 
	`ALIGNED_SIZE
(
sz
);

22 
msg
 = (
R_Mesßge_ªp
*Ë
	`mÆloc
(
max_size
);

23 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

24 
msg
->
èg
 = 
t
;

25 
msg
->
size
 = 
max_size
;

26 
msg
->
exåa
 = 0;

27 
	}
}

29 
	gR_Mesßge
::
	$R_Mesßge
(
R_Mesßge_ªp
 *
c⁄t
)

31 
	`th_as£π
(
	`ALIGNED
(
c⁄t
), "ImproperlyálignedÖointer");

32 
msg
 = 
c⁄t
;

37 
max_size
 = -1;

39 
	}
}

41 
	gR_Mesßge
::~
	$R_Mesßge
()

43 i‡(
max_size
 > 0Ë
	`‰ì
(
msg
);

46 
	}
}

48 
	gR_Mesßge
::
	$åim
()

50 
nsz
 = 
	`ALIGNED_SIZE
(
msg
->
size
);

51 *
≈å
;

52 i‡(
max_size
 > 0&& (
≈å
=
	`ªÆloc
((*)
msg
, 
nsz
)Ë!
NULL
)

54 
max_size
 = 
nsz
;

55 
msg
 = (
R_Mesßge_ªp
*)
≈å
;

57 
	}
}

59 
	gR_Mesßge
::
	$£t_size
(
size
)

61 
	`th_as£π
(
msg
 && 
	`ALIGNED
(msg), "Invalid state");

62 
	`th_as£π
(
max_size
 < 0|| 
	`ALIGNED_SIZE
(
size
) <= max_size, "Invalid state");

63 
Æig√d

	`ALIGNED_SIZE
(
size
);

64 
i
=
size
; i < 
Æig√d
; i++)

66 ((*)
msg
)[
i
] = 0;

68 
msg
->
size
 = 
Æig√d
;

69 
	}
}

	@R_Message.h

1 #i‚de‡
_R_Mesßge_h


2 
	#_R_Mesßge_h
 1

	)

4 
	~<°ddef.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~"th_as£π.h
"

8 
	~"ty≥s.h
"

9 
	~"R_Mesßge_ègs.h
"

10 
	~"Tø˚s.h
"

12 c⁄° 
	gR_MESSAGE_NORMAL
 = 0;

13 c⁄° 
	gR_MESSAGE_BATCH
 = 4;

14 c⁄° 
	gR_MESSAGE_PIGGYBACKED
 = 8;

15 c⁄° 
	gR_MESSAGE_ACK_BATCH
 = 16;

17 
	#ALIGNMENT
 8

	)

21 
	#ALIGNED
(
±r
Ë((()’å))%
ALIGNMENT
 =0)

	)

26 
	#ALIGNED_SIZE
(
sz
Ë((
	`ALIGNED
(sz)Ë? (szË: (sz)-(sz)%
ALIGNMENT
+ALIGNMENT)

	)

29 c⁄° 
	gR_Max_mesßge_size
 = 16000;

34 
	sR_Mesßge_ªp


36 
	mèg
;

37 
	mexåa
;

38 
	msize
;

39 
uöt32_t
 
	munu£d
;

44 ˛as†
	cR_Mesßge


49 
	mpublic
:

50 
R_Mesßge
(
sz
=0);

55 ~
R_Mesßge
();

58 
åim
();

61 * 
c⁄ã¡s
();

64 
	$size
() const;

67 
	$èg
() const;

70 
boﬁ
 
	$has_èg
(
t
, 
sz
) const;

76 *
›î©‹
 
	`√w
(
size_t
 
s
);

77 
›î©‹
 
	`dñëe
(*
x
, 
size_t
 
s
);

79 
	$msize
() const;

83 
	`£t_size
(
size
);

89 
¥Ÿe˘ed
:

90 
	`R_Mesßge
(
t
, 
sz
);

94 
	`R_Mesßge
(
R_Mesßge_ªp
 *
c⁄ã¡s
);

101 
R_Mesßge_ªp
 *
msg
;

102 
max_size
;

107 
¥iv©e
:

112 
ölöe
 
R_Mesßge
::
	$size
() const

114  
msg
->
size
;

115 
	}
}

117 
ölöe
 
	gR_Mesßge
::
	$èg
() const

119  
msg
->
èg
;

120 
	}
}

122 
ölöe
 
boﬁ
 
	gR_Mesßge
::
	$has_èg
(
t
, 
sz
) const

124 i‡(
max_size
 >0&& 
msg
->
size
 > max_size)

126  
Ál£
;

129 i‡(!
msg
 || msg->
èg
 !
t
 || msg->
size
 < 
sz
 || !
	`ALIGNED
(msg->size))

131  
Ál£
;

133  
åue
;

134 
	}
}

136 
ölöe
 * 
	gR_Mesßge
::
›î©‹
 
	$√w
(
size_t
 
s
)

138 *
ªt
 = (*)
	`mÆloc
(
	`ALIGNED_SIZE
(
s
));

139 
	`th_as£π
(
ªt
 != 0, "Ran out of memory\n");

140  
ªt
;

141 
	}
}

143 
ölöe
 
	gR_Mesßge
::
›î©‹
 
	$dñëe
(*
x
, 
size_t
 
s
)

145 i‡(
x
 != 0)

147 
	`‰ì
((*)
x
);

149 
	}
}

151 
ölöe
 
	gR_Mesßge
::
	$msize
() const

153  (
max_size
 >0Ë? max_sizê: 
msg
->
size
;

154 
	}
}

156 
ölöe
 *
	gR_Mesßge
::
	$c⁄ã¡s
()

158  (*)
msg
;

159 
	}
}

	@R_Message_tags.h

1 #i‚de‡
_R_Mesßge_ègs_h


2 
	#_R_Mesßge_ègs_h
 1

	)

8 c⁄° 
	gR_Reque°_èg
=1;

9 c⁄° 
	gR_Rïly_èg
=2;

10 c⁄° 
	gR_Checkpoöt_èg
=3;

11 c⁄° 
	gR_ACK_èg
=4;

12 c⁄° 
	gR_Dñivî_èg
=5;

	@R_Node.cc

1 
	~<°rög.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/sockë.h
>

6 
	~<sys/∑øm.h
>

7 
	~<√töë/ö.h
>

8 
	~<¨∑/öë.h
>

9 
	~<√tdb.h
>

10 
	~<uni°d.h
>

12 
	~"¸y±.h
"

13 
	~"øbö.h
"

15 
	~"th_as£π.h
"

16 
	~"∑ømëîs.h
"

17 
	~"R_Mesßge.h
"

18 
	~"R_Reque°.h
"

19 
	~"R_PröcùÆ.h
"

20 
	~"R_Node.h
"

21 
	~"±hªad.h
"

23 
	#max
(
a
,
b
Ë◊>=b?a:b)

	)

24 
	#mö
(
a
,
b
Ë◊<=b?a:b)

	)

27 
R_Node
 *
	gR_node
 = 0;

28 
R_PröcùÆ
 *
	gR_my_¥öcùÆ
 = 0;

30 
	gR_Node
::
	$R_Node
(
FILE
 *
c⁄fig_fûe
, FILE *
c⁄fig_¥iv
, *
ho°_«me
, 
ªq_p‹t
) :

31 
	$öcomög_queue
()

33 
R_node
 = 
this
;

36 
	`fsˇnf
(
c⁄fig_fûe
, "%d\n", &
max_Áu…y
);

37 
num_ª∂iˇs
 = 3 * 
max_Áu…y
 + 1;

38 i‡(
num_ª∂iˇs
 > 
Max_num_ª∂iˇs
)

40 
	`th_Áû
("InvalidÇumber ofÑeplicas");

44 
addr_buff
[257];

46 i‡(
	`fsˇnf
(
c⁄fig_fûe
, "%d\n", &
num_¥öcùÆs
) != 1) {

47 
	`th_Áû
("CouldÇotÑeadÇumber ofÖrincipals");

49 i‡(
num_ª∂iˇs
 > 
num_¥öcùÆs
)

51 
	`th_Áû
("Invalidárgument");

55 
p‹t
;

56 
	`fsˇnf
(
c⁄fig_fûe
, "%256†%hd\n", 
addr_buff
, &
p‹t
);

57 
Addr
 
a
;

58 
	`bzîo
((*)&
a
, (a));

59 
a
.
sö_Ámûy
 = 
AF_INET
;

60 
a
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr_buff
);

61 
a
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

62 
group
 = 
√w
 
	`R_PröcùÆ
(
num_¥öcùÆs
 + 1,Çum_¥öcùÆs, 
a
,á, 
NULL
);

65 i‡(
c⁄fig_¥iv
 !
NULL
) {

67 
pk1
[1024], 
pk2
[1024];

68 
	`fsˇnf
(
c⁄fig_¥iv
, "%†%s\n", 
pk1
, 
pk2
);

69 
bigöt
 
	`n1
(
pk1
, 16);

70 
bigöt
 
	`n2
(
pk2
, 16);

71 i‡(
n1
 >
n2
)

72 
	`th_Áû
("InvalidÖrivate file: firstÇumber >= secondÇumber");

74 
¥iv_key
 = 
√w
 
	`øbö_¥iv
(
n1
, 
n2
);

76 
	`Ârötf
(
°dîr
, "R_Node: WillÇot initÖriv_key\n");

77 
¥iv_key
 = 
NULL
;

88 
	`Ârötf
(
°dîr
, "R_Node: ho°«mê%s\n", 
ho°_«me
);

89 
ho°ít
 *
hít
 = 
	`gëho°by«me
(
ho°_«me
);

90 i‡(
hít
 == 0)

92 
	`th_Áû
("CouldÇot get hostent");

94 
ö_addr
 
my_addªss
 = *((ö_addr*)
hít
->
h_addr_li°
[0]);

95 
node_id
 = -1;

97 
¥öcùÆs
 = (
R_PröcùÆ
**)
	`mÆloc
(
num_¥öcùÆs
*(R_Principal*));

99 
Addr
 
TR_TCP_a
;

100 
	`bzîo
((*)&
TR_TCP_a
, (TR_TCP_a));

101 
TR_TCP_a
.
sö_Ámûy
 = 
AF_INET
;

102 
Addr
 
TR_TCP_a_f‹_˛õ¡s
;

103 
	`bzîo
((*)&
TR_TCP_a_f‹_˛õ¡s
, (TR_TCP_a_for_clients));

104 
TR_TCP_a_f‹_˛õ¡s
.
sö_Ámûy
 = 
AF_INET
;

105 
TR_TCP_p‹t
;

106 
TR_TCP_p‹t_f‹_˛õ¡s
;

108 
fc⁄f_pos
 = 
	`·ñl
(
c⁄fig_fûe
);

109 
i
=0; i < 
num_¥öcùÆs
; i++)

111 
hn
[
MAXHOSTNAMELEN
+1];

112 
	`fsˇnf
(
c⁄fig_fûe
, "%256†%32†%hd %hd \n", 
hn
, 
addr_buff
,

113 &
TR_TCP_p‹t
, &
TR_TCP_p‹t_f‹_˛õ¡s
);

114 
TR_TCP_a
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr_buff
);

115 
TR_TCP_a
.
sö_p‹t
 = 
	`ht⁄s
(
TR_TCP_p‹t
);

116 
TR_TCP_a_f‹_˛õ¡s
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr_buff
);

117 
TR_TCP_a_f‹_˛õ¡s
.
sö_p‹t
 = 
	`ht⁄s
(
TR_TCP_p‹t_f‹_˛õ¡s
);

119 i‡(
my_addªss
.
s_addr
 =
TR_TCP_a
.
sö_addr
.s_add∏&& 
node_id
 == -1

120 && (
ªq_p‹t
 =0 ||Ñeq_p‹à=
TR_TCP_p‹t
))

122 
node_id
 = 
i
;

123 
	`Ârötf
(
°dîr
, "Wêhavê∑r£dÉ¡ry %†™dássig√dÇode_id = %d\n", 
hn
, 
node_id
);

126 
	`f£ek
(
c⁄fig_fûe
, 
fc⁄f_pos
, 
SEEK_SET
);

127 
i
=0; i < 
num_¥öcùÆs
; i++)

129 
hn
[
MAXHOSTNAMELEN
+1];

130 
	`fsˇnf
(
c⁄fig_fûe
, "%256†%32†%hd %hd \n", 
hn
, 
addr_buff
,

131 &
TR_TCP_p‹t
, &
TR_TCP_p‹t_f‹_˛õ¡s
);

132 
TR_TCP_a
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr_buff
);

133 
TR_TCP_a
.
sö_p‹t
 = 
	`ht⁄s
(
TR_TCP_p‹t
);

134 
TR_TCP_a_f‹_˛õ¡s
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr_buff
);

135 
TR_TCP_a_f‹_˛õ¡s
.
sö_p‹t
 = 
	`ht⁄s
(
TR_TCP_p‹t_f‹_˛õ¡s
);

137 
¥öcùÆs
[
i
] = 
√w
 
	`R_PröcùÆ
(i, 
num_¥öcùÆs
, 
TR_TCP_a
, 
TR_TCP_a_f‹_˛õ¡s
);

138 i‡(
node_id
 =
i
)

140 
R_my_¥öcùÆ
 = 
¥öcùÆs
[
i
];

144 i‡(
node_id
 < 0)

146 
	`th_Áû
("R_Node: couldÇot find myÖrincipal");

149 
	`¶ìp
(2);

152 
	`√w_t°amp
();

153 
	`±hªad_muãx_öô
(&
öcomög_queue_muãx
, 
NULL
);

154 
	`±hªad_c⁄d_öô
(&
nŸ_em±y_öcomög_queue_c⁄d
, 
NULL
) ;

156 
	}
}

158 
	gR_Node
::~
	$R_Node
()

160 
i
=0; i < 
num_¥öcùÆs
; i++)

162 
dñëe
 
¥öcùÆs
[
i
];

165 
	`‰ì
(
¥öcùÆs
);

166 
	}
}

168 
	gR_Node
::
	$£nd
(
R_Mesßge
 *
m
, 
sockë
)

170 
size
 = 
m
->
	`size
();

171 
	`£nd_Æl
(
sockë
, 
m
->
	`c⁄ã¡s
(), &
size
);

172 
	}
}

174 
R_Mesßge
* 
	gR_Node
::
	$ªcv
(
sockë
, *
°©us
)

176 
R_Mesßge
* 
m
 = 
√w
 
	`R_Mesßge
(
R_Max_mesßge_size
);

178 
îr
 = 
	`ªcv_Æl_blockög
(
sockë
, (*)
m
->
	`c⁄ã¡s
(), (
R_Mesßge_ªp
), 0);

180 i‡(
îr
 == -1) {

181 
dñëe
 
m
;

182 i‡(
°©us
 !
NULL
)

183 *
°©us
 = 
îr
;

184  
NULL
;

186 i‡(
îr
 == 0) {

188 
dñëe
 
m
;

189 i‡(
°©us
 !
NULL
)

190 *
°©us
 = 
îr
;

191  
NULL
;

193 
∑ylﬂd_size
 = 
m
->
	`size
(Ë- (
R_Mesßge_ªp
);

194 i‡(
∑ylﬂd_size
 < 0) {

195 
	`Ârötf
(
°dîr
, "R_Node[%d]: weúdÖackëÑe˚ived wôh sizê< R_Mesßge_ªp\n", 
	`id
());

196 
dñëe
 
m
;

197 i‡(
°©us
 !
NULL
)

198 *
°©us
 = 
îr
;

199  
NULL
;

202 
îr
 = 
	`ªcv_Æl_blockög
(
sockë
, 
m
->
	`c⁄ã¡s
(Ë+ (
R_Mesßge_ªp
),

203 
∑ylﬂd_size
, 0);

204 i‡(
îr
 == -1) {

205 
dñëe
 
m
;

206 i‡(
°©us
 !
NULL
)

207 *
°©us
 = 
îr
;

208  
NULL
;

210 i‡(
°©us
 !
NULL
)

211 *
°©us
 = 
îr
;

212  
m
;

213 
	}
}

215 
	gR_Node
::
	$gí_auth
(*
s
, 
l
, *
de°
, 
R_Rïly_ªp
 *
º
,

216 
¥öcùÆ_id
, 
íåy_ª∂iˇ
, 
cid
, 
ôî©i⁄
, 
skù
) const

218 
un⁄˚
;

219 i‡(
skù
 == 0) {

220 
un⁄˚
 = 
R_PröcùÆ
::
	`√w_umac_n⁄˚
();

222 
	`mem˝y
(
de°
, (*)&
un⁄˚
, 
R_UN⁄˚_size
);

224 
	`mem˝y
((*)&
un⁄˚
, 
de°
, 
R_UN⁄˚_size
);

226 
de°
 +
R_UN⁄˚_size
;

229 
boﬁ
 
fú°
 = 
ôî©i⁄
 == 1;

230 
boﬁ
 
£c⁄d
 = 
ôî©i⁄
 == 2;

231 
boﬁ
 
thúd
 = 
ôî©i⁄
 == 3;

232 #i‚de‡
REPLY_BY_PRIMARY


233 
edi°™˚
 = 
	`di°™˚
(
¥öcùÆ_id
, (
íåy_ª∂iˇ
-1+
num_ª∂iˇs
)%num_replicas);

235 
edi°™˚
 = 
	`di°™˚
(
¥öcùÆ_id
, (
íåy_ª∂iˇ
-1+
num_ª∂iˇs
)%num_replicas);

236 i‡(
edi°™˚
 =0 && 
£c⁄d
)

237 
edi°™˚
 = 
num_ª∂iˇs
;

239 i‡(
fú°
)

240 
edi°™˚
 = 
	`f
()+1;

241 i‡(
¥öcùÆ_id
 < 0)

242 
edi°™˚
 = 
num_ª∂iˇs
;

243 
nb_MACs_f‹_ª∂iˇs

	`mö
((
	`f
()+1), 
edi°™˚
);

245 
°¨t
 = (
¥öcùÆ_id
 + 1)%
num_ª∂iˇs
;

246 i‡(
¥öcùÆ_id
 < 0)

247 
°¨t
 = 
íåy_ª∂iˇ
;

248 
j
 = 
skù
; j < 
nb_MACs_f‹_ª∂iˇs
; j++)

250 
R_my_¥öcùÆ
->
	`gí_mac
(
s
, 
l
, 
de°
, (
°¨t
 + 
j
)%
num_ª∂iˇs
,

251 (*)&
un⁄˚
);

252 
de°
 +
R_UMAC_size
;

255 i‡(
nb_MACs_f‹_ª∂iˇs
 < 
	`f
(Ë+ 1 && 
º
 !
NULL
)

258 *
d
 = (*)(&
º
->
dige°
);

259 
R_my_¥öcùÆ
->
	`gí_mac
(
d
, (
Dige°
), 
de°
, 
cid
,

260 (*)&
un⁄˚
);

261 #ifde‡
TRACES


262 
	`Ârötf
(
°dîr
, "R_Node[%d]: gíî©ög MAC f‹ clõ¡ %d, un⁄˚ %Œd\n", 
	`id
(), 
cid
, 
un⁄˚
);

265 
	}
}

267 
	gR_Node
::
	$authítiˇt‹s_size
() const

269  
R_UN⁄˚_size
 * (
	`f
()+1)

270 + 
R_UMAC_size
 * ((
	`f
()+1)*(f()+2))/2 + (f()+1)*(
Seqno
);

271 
	}
}

273 
	gR_Node
::
	$authítiˇt‹s_size_a·î_vîifiˇti⁄
() const

275  
R_UN⁄˚_size
 * (
	`f
())

276 + 
R_UMAC_size
 * ((
	`f
())*(f()+1))/2 + (f()+1)*(
Seqno
);

277 
	}
}

279 
boﬁ
 
	gR_Node
::
	$vîify_auth
(
n_id
, 
íåy_ª∂iˇ
, 
cid
, *
s
, 
l
, *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
)

284 
boﬁ
 
fú°
 = (
ôî©i⁄
 == 1);

285 
boﬁ
 
£c⁄d
 = (
ôî©i⁄
 == 2);

286 
boﬁ
 
thúd
 = (
ôî©i⁄
 == 3);

287 
un⁄˚
 = 0;

288 *
öôül_de°
 = 
de°
;

290 
edi°™˚
 = 
	`di°™˚
(
íåy_ª∂iˇ
, 
n_id
) + 1;

291 i‡(!
fú°
 || 
n_id
 >
	`n
())

292 
edi°™˚
 = 
	`f
()+1;

293 
i

	`mö
(
	`f
(Ë+ 1, 
edi°™˚
);

294 
ªmaöög_size
;

295 
£qn›os
 = 0;

296 i‡(
n_id
 < 
R_node
->
	`n
() &&Ç_id >= 0)

299 
ªmaöög_size
 = 
R_UMAC_size
 * ((
	`f
() + 1) * (f() + 2)) / 2

300 + 
R_UN⁄˚_size
 * (
	`f
() + 1);

304 
ªmaöög_size
 = (
	`f
(Ë+ 1Ë* (
R_UN⁄˚_size
 + 
R_UMAC_size
);

306 
i
> 0)

308 
p_id
;

309 i‡(
fú°
 && 
n_id
 >0 &&Ç_id < 
	`n
(Ë&& 
	`di°™˚
(
íåy_ª∂iˇ
,n_id)<
i
)

310 
p_id
 = 
cid
;

311 i‡(
n_id
 >=0 &&Ç_id < 
	`n
()) {

312 
p_id
 = (
n_id
-
i
+
num_ª∂iˇs
)%num_replicas;

314 
p_id
 = (
íåy_ª∂iˇ
-
i
+
num_ª∂iˇs
)%num_replicas;

317 
Seqno
 
os
;

318 i‡(
r
 !
NULL
) {

319 
Seqno
 
s
 = 
r
->
	`gë_°‹ed_£qno
(
£qn›os
);

320 
r
->
	`sw≠_£qno
(
s
, &
os
);

321 i‡(!
fú°
 && 
	`di°™˚
(
p_id
,
íåy_ª∂iˇ
)>=
	`f
()+1 && di°™˚”¡ry_ª∂iˇ, 
n_id
)<f()+1)

322 
r
->
	`£t_ty≥
(
Ál£
);

323 i‡(
thúd
)

324 
r
->
	`£t_ty≥
(
åue
);

327 
	`mem˝y
((*)&
un⁄˚
, 
de°
, 
R_UN⁄˚_size
);

328 i‡(!
¥öcùÆs
[
p_id
]->
	`vîify_mac
(
s
, 
l
, 
de°
 + 
R_UN⁄˚_size
,

329 (*)&
un⁄˚
))

331 
	`Ârötf
(
°dîr
, "R_Node[%d]: u«bÀÅÿvîify ma¯‰omÇodê%d, un⁄˚ %Œd (i=%d)\n", 
	`id
(), 
p_id
, 
un⁄˚
, 
i
);

332  
Ál£
;

335 
fdi°™˚
 = 2;

336 i‡(
n_id
 >
R_node
->
	`n
() ||Ç_id < 0)

337 
fdi°™˚
 = 1;

339 
nb_MACs_‰om_p

	`mö
((
	`f
(Ë+ 2 - 
i
), 
fdi°™˚
);

340 i‡(
nb_MACs_‰om_p
 == 1)

342 
ªmaöög_size
 -(
R_UN⁄˚_size
 + 
R_UMAC_size
);

343 
	`memmove
(
de°
, de° + 
R_UN⁄˚_size
 + 
R_UMAC_size
, 
ªmaöög_size
);

346 
	`memmove
(
de°
 + 
R_UN⁄˚_size
, de° + R_UN⁄˚_sizê+ 
R_UMAC_size
,

347 
ªmaöög_size
 - (
R_UN⁄˚_size
 + 
R_UMAC_size
));

348 
ªmaöög_size
 -(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1)

349 * 
R_UMAC_size
);

350 
de°
 +(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1Ë* 
R_UMAC_size
);

352 i‡(
r
 !
NULL
) {

353 
r
->
	`sw≠_£qno
(
os
, 
NULL
);

354 i‡(
nb_MACs_‰om_p
 == 1)

355 
r
->
	`rﬁl_°‹ed_£qno
();

357 
£qn›os
++;

358 i‡(!
fú°
 && 
	`di°™˚
(
p_id
,
íåy_ª∂iˇ
)>=
	`f
()+1 && di°™˚”¡ry_ª∂iˇ, 
n_id
)<f()+1)

359 
r
->
	`£t_ty≥
(
åue
);

362 
i
--;

364 *
authítiˇti⁄_off£t
 = 
de°
 - 
öôül_de°
;

365  
åue
;

366 
	}
}

370 
boﬁ
 
	gR_Node
::
	$vîify_˛õ¡_auth
(
n_id
, 
íåy_ª∂iˇ
, 
cid
, *
s
, 
l
, *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
)

375 
boﬁ
 
fú°
 = (
ôî©i⁄
 == 1);

376 
boﬁ
 
£c⁄d
 = (
ôî©i⁄
 == 2);

377 
boﬁ
 
thúd
 = (
ôî©i⁄
 == 3);

378 
un⁄˚
 = 0;

379 *
öôül_de°
 = 
de°
;

381 
edi°™˚
 = 
	`di°™˚
(
íåy_ª∂iˇ
, 
n_id
) + 1;

382 i‡(!
fú°
 || 
n_id
 >
	`n
())

383 
edi°™˚
 = 
	`f
()+1;

384 i‡(!
fú°
 || 
edi°™˚
 > 
	`f
()+1)

386 *
authítiˇti⁄_off£t
 = 0;

387  
åue
;

390 
i

	`mö
(
	`f
(Ë+ 1, 
edi°™˚
);

392 
ªmaöög_size
;

393 
£qn›os
 = 0;

396 
ªmaöög_size
 = 
R_UMAC_size
 * ((
	`f
(Ë+ 1Ë* (f(Ë+ 2)Ë/ 2 + 
R_UN⁄˚_size
 * (f() + 1);

398 
p_id
 = 
cid
;

400 
Seqno
 
os
;

401 i‡(
r
 !
NULL
) {

402 
Seqno
 
s
 = 
r
->
	`gë_°‹ed_£qno
(
£qn›os
);

403 
r
->
	`sw≠_£qno
(
s
, &
os
);

406 
	`mem˝y
((*)&
un⁄˚
, 
de°
, 
R_UN⁄˚_size
);

407 i‡(!
¥öcùÆs
[
p_id
]->
	`vîify_mac
(
s
, 
l
, 
de°
 + 
R_UN⁄˚_size
,

408 (*)&
un⁄˚
))

410 
	`Ârötf
(
°dîr
, "R_Node[%d]: u«bÀÅÿvîify ma¯‰omÇodê%d, un⁄˚ %Œd (i=%d)\n", 
	`id
(), 
p_id
, 
un⁄˚
, 
i
);

411  
Ál£
;

413 
fdi°™˚
 = 2;

414 
nb_MACs_‰om_p

	`mö
((
	`f
(Ë+ 2 - 
i
), 
fdi°™˚
);

415 i‡(
nb_MACs_‰om_p
 == 1)

417 
ªmaöög_size
 -(
R_UN⁄˚_size
 + 
R_UMAC_size
);

418 
	`memmove
(
de°
, de° + 
R_UN⁄˚_size
 + 
R_UMAC_size
, 
ªmaöög_size
);

421 
	`memmove
(
de°
 + 
R_UN⁄˚_size
, de° + R_UN⁄˚_sizê+ 
R_UMAC_size
,

422 
ªmaöög_size
 - (
R_UN⁄˚_size
 + 
R_UMAC_size
));

423 
ªmaöög_size
 -(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1)

424 * 
R_UMAC_size
);

425 
de°
 +(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1Ë* 
R_UMAC_size
);

427 i‡(
r
 !
NULL
) {

428 
r
->
	`sw≠_£qno
(
os
, 
NULL
);

429 i‡(
nb_MACs_‰om_p
 == 1)

430 
r
->
	`rﬁl_°‹ed_£qno
();

432 
£qn›os
++;

435 *
authítiˇti⁄_off£t
 = 
de°
 - 
öôül_de°
;

436  
åue
;

437 
	}
}

443 
boﬁ
 
	gR_Node
::
	$vîify_b©ched_auth
(
n_id
, 
íåy_ª∂iˇ
, 
cid
, *
s
, 
l
, *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
, 
skù
)

449 
boﬁ
 
fú°
 = (
ôî©i⁄
 == 1);

450 
boﬁ
 
£c⁄d
 = (
ôî©i⁄
 == 2);

451 
boﬁ
 
thúd
 = (
ôî©i⁄
 == 3);

452 
un⁄˚
 = 0;

454 
de°
 +*
authítiˇti⁄_off£t
;

455 *
öôül_de°
 = 
de°
;

457 
edi°™˚
 = 
	`di°™˚
(
íåy_ª∂iˇ
, 
n_id
) + 1;

458 i‡(!
fú°
 || 
n_id
 >
	`n
())

459 
edi°™˚
 = 
	`f
()+1;

460 
i

	`mö
(
	`f
(Ë+ 1, 
edi°™˚
);

461 
i
 -
skù
;

462 
ªmaöög_size
;

463 
£qn›os
 = 0;

464 i‡(
n_id
 < 
R_node
->
	`n
() &&Ç_id >= 0)

467 
ªmaöög_size
 = 
R_UMAC_size
 * ((
	`f
() + 1) * (f() + 2)) / 2

468 + 
R_UN⁄˚_size
 * (
	`f
() + 1);

472 
ªmaöög_size
 = (
	`f
(Ë+ 1Ë* (
R_UN⁄˚_size
 + 
R_UMAC_size
);

474 
i
> 0)

476 
p_id
;

477 i‡(
fú°
 && 
n_id
 >0 &&Ç_id < 
	`n
(Ë&& 
	`di°™˚
(
íåy_ª∂iˇ
,n_id)<
i
)

478 
p_id
 = 
cid
;

479 i‡(
n_id
 >=0 &&Ç_id < 
	`n
()) {

480 
p_id
 = (
n_id
-
i
+
num_ª∂iˇs
)%num_replicas;

482 
p_id
 = (
íåy_ª∂iˇ
-
i
+
num_ª∂iˇs
)%num_replicas;

485 
Seqno
 
os
;

486 i‡(
r
 !
NULL
) {

487 
Seqno
 
£q
 = 
r
->
	`gë_°‹ed_£qno
(
£qn›os
);

488 
	`mem˝y
(
s
+(
uöt32_t
), (*)&
£q
, (
Seqno
));

489 i‡(!
fú°
 && 
	`di°™˚
(
p_id
,
íåy_ª∂iˇ
)>=
	`f
()+1 && di°™˚”¡ry_ª∂iˇ, 
n_id
)<f()+1)

490 
	`bzîo
(
s
, (
uöt32_t
));

491 i‡(
thúd
)

492 *((
uöt32_t
*)
s
) = 0xdeadbeef;

495 
	`mem˝y
((*)&
un⁄˚
, 
de°
, 
R_UN⁄˚_size
);

496 i‡(!
¥öcùÆs
[
p_id
]->
	`vîify_mac
(
s
, 
l
, 
de°
 + 
R_UN⁄˚_size
,

497 (*)&
un⁄˚
))

499 
	`Ârötf
(
°dîr
, "R_Node[%d]: u«bÀÅÿvîify ma¯‰omÇodê%d, un⁄˚ %Œd (i=%d)\n", 
	`id
(), 
p_id
, 
un⁄˚
, 
i
);

500  
Ál£
;

502 
fdi°™˚
 = 2;

503 i‡(
n_id
 >
R_node
->
	`n
() ||Ç_id < 0)

504 
fdi°™˚
 = 1;

505 
nb_MACs_‰om_p

	`mö
((
	`f
(Ë+ 2 - 
i
), 
fdi°™˚
);

506 i‡(
nb_MACs_‰om_p
 == 1)

508 
ªmaöög_size
 -(
R_UN⁄˚_size
 + 
R_UMAC_size
);

509 
	`memmove
(
de°
, de° + 
R_UN⁄˚_size
 + 
R_UMAC_size
, 
ªmaöög_size
);

512 
	`memmove
(
de°
 + 
R_UN⁄˚_size
, de° + R_UN⁄˚_sizê+ 
R_UMAC_size
,

513 
ªmaöög_size
 - (
R_UN⁄˚_size
 + 
R_UMAC_size
));

514 
ªmaöög_size
 -(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1)

515 * 
R_UMAC_size
);

516 
de°
 +(
R_UN⁄˚_size
 + (
nb_MACs_‰om_p
 - 1Ë* 
R_UMAC_size
);

518 i‡(
r
 !
NULL
) {

519 i‡(
nb_MACs_‰om_p
 == 1)

520 
r
->
	`rﬁl_°‹ed_£qno
();

522 
£qn›os
++;

523 i‡(!
fú°
 && 
	`di°™˚
(
p_id
,
íåy_ª∂iˇ
)>=
	`f
()+1 && di°™˚”¡ry_ª∂iˇ, 
n_id
)<f()+1)

524 *((
uöt32_t
*)
s
) = 0xdeadbeef;

527 
i
--;

529 *
authítiˇti⁄_off£t
 = 
de°
 - 
öôül_de°
;

530  
åue
;

531 
	}
}

533 
	gR_Node
::
	$gí_sig«tuª
(c⁄° *
§c
, 
§c_Àn
, *
sig
)

535 
bigöt
 
bsig
 = 
¥iv_key
->
	`sign
(
	`°r
(
§c
, 
§c_Àn
));

536 
size
 = 
	`mpz_øwsize
(&
bsig
);

537 i‡(
size
 + (Ë> 
	`sig_size
())

538 
	`th_Áû
("Signature isÅoo big");

540 
	`mem˝y
(
sig
, (*Ë&
size
, ());

541 
sig
 += ();

543 
	`mpz_gë_øw
(
sig
, 
size
, &
bsig
);

544 
	}
}

546 
	gR_Node
::
	$de¸y±
(*
§c
, 
§c_Àn
, *
d°
,

547 
d°_Àn
)

549 i‡(
§c_Àn
 < 2* ())

552 
bigöt
 
b
;

553 
csize
, 
psize
;

554 
	`mem˝y
((*)&
psize
, 
§c
, ());

555 
§c
 += ();

556 
	`mem˝y
((*)&
csize
, 
§c
, ());

557 
§c
 += ();

559 i‡(
d°_Àn
 < 
psize
 || 
§c_Àn
 < 
csize
)

562 
	`mpz_£t_øw
(&
b
, 
§c
, 
csize
);

564 
°r
 
±ext
 = 
¥iv_key
->
	`de¸y±
(
b
, 
psize
);

565 
	`mem˝y
(
d°
, 
±ext
.
	`c°r
(),Öãxt.
	`Àn
());

567  
psize
;

568 
	}
}

570 
Reque°_id
 
	gR_Node
::
	$√w_rid
()

572 i‡(()
cur_rid
 == ()0xffffffff)

574 
	`√w_t°amp
();

576  ++
cur_rid
;

577 
	}
}

579 
	gR_Node
::
	$√w_t°amp
()

581 
timevÆ
 
t
;

582 
	`gëtimeofday
(&
t
, 0);

583 
	`th_as£π
((
t
.
tv_£c
) <= (), "tv_sec isÅoo big");

584 
L⁄g
 
t°amp
 = 
t
.
tv_£c
;

585 
öt_bôs
 = ()*8;

586 
cur_rid
 = 
t°amp
 << 
öt_bôs
;

587 
	}
}

	@R_Node.h

1 #i‚de‡
_R_Node_h


2 
	#_R_Node_h
 1

	)

4 
	~<°dio.h
>

5 
	~"ty≥s.h
"

6 
	~"R_PröcùÆ.h
"

7 
	~"th_as£π.h
"

8 
	~"R_Rïly.h
"

9 
	~"R_Mes_queue.h
"

13 
	~"TCP_√tw‹k.h
"

16 
˛ass
 
R_Mesßge
;

17 
˛ass
 
	gR_Reque°
;

18 
˛ass
 
	gøbö_¥iv
;

19 
˛ass
 
	gNew_key
;

20 
˛ass
 
	gITimî
;

22 
©imî_h™dÀr
();

24 ˛as†
	cR_Node


26 
	mpublic
:

28 
R_Node
(
FILE
 *
c⁄fig_fûe
, FILE *
c⁄fig_¥iv
, *
ho°_«me
, 
p‹t
=0);

35 
	mvútuÆ
 ~
R_Node
();

38 
	$n
() const;

39 
	$f
() const;

41 
	$id
() const;

44 
	$di°™˚
(
s
, 
d
) const;

46 
R_PröcùÆ
 *
	$i_to_p
(
id
) const;

50 
boﬁ
 
	$is_ª∂iˇ
(
id
) const;

53 
	`£nd
(
R_Mesßge
 *
m
, 
i
);

59 
R_Mesßge
* 
	`ªcv
(
sockë
, *
°©us
 = 
NULL
);

66 
R_Mes_queue
 
öcomög_queue
;

67 
±hªad_muãx_t
 
öcomög_queue_muãx
;

68 
±hªad_c⁄d_t
 
nŸ_em±y_öcomög_queue_c⁄d
;

70 
Reque°_id
 
	`√w_rid
();

80 
	`sig_size
(
id
=-1) const;

84 
	`auth_size
(
id
=-1) const;

85 
	$authítiˇt‹s_size
() const;

86 
	$authítiˇt‹s_size_a·î_vîifiˇti⁄
() const;

88 
	$gí_auth
(*
§c
, 
§c_Àn
, *
de°
, 
R_Rïly_ªp
 *
º
,

89 
¥öcùÆ_id
, 
íåy_ª∂iˇ
, 
cid
, 
ôî©i⁄
, 
skù
 = 0) const;

91 
boﬁ
 
	`vîify_auth
(
n_id
, 
íåy_ª∂iˇ
, 
i
, *
§c
, 
§c_Àn
,

92 *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
);

95 
boﬁ
 
	`vîify_˛õ¡_auth
(
n_id
, 
íåy_ª∂iˇ
, 
cid
, *
s
, 
l
, *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
);

96 
boﬁ
 
	`vîify_b©ched_auth
(
n_id
, 
íåy_ª∂iˇ
, 
cid
, *
s
, 
l
, *
de°
, *
authítiˇti⁄_off£t
, 
R_Reque°
 *
r
, 
ôî©i⁄
, 
skù
);

98 
	`gí_sig«tuª
(c⁄° *
§c
, 
§c_Àn
, *
sig
);

103 
	`de¸y±
(*
§c
, 
§c_Àn
, *
d°
,

104 
d°_Àn
);

109 
¥Ÿe˘ed
:

110 
node_id
;

111 
max_Áu…y
;

112 
num_ª∂iˇs
;

114 
øbö_¥iv
 *
¥iv_key
;

117 
R_PröcùÆ
 **
¥öcùÆs
;

118 
R_PröcùÆ
 *
group
;

119 
num_¥öcùÆs
;

122 
Reque°_id
 
cur_rid
;

123 
	`√w_t°amp
();

128 
ölöe
 
R_Node
::
	$auth_size
(
id
) const

130  
R_UMAC_size
 * ((
	`f
(Ë+ 1Ë* (f(Ë+ 2)Ë/ 2 + 
R_UN⁄˚_size


131 * (
	`f
() + 1);

132 
	}
}

134 
ölöe
 
	gR_Node
::
	$n
() const

136  
num_ª∂iˇs
;

137 
	}
}

139 
ölöe
 
	gR_Node
::
	$f
() const

141  
max_Áu…y
;

142 
	}
}

144 
ölöe
 
	gR_Node
::
	$id
() const

146  
node_id
;

147 
	}
}

149 
ölöe
 
	gR_Node
::
	$di°™˚
(
s
, 
d
) const

151  (
d
-
s
+
num_ª∂iˇs
)%num_replicas;

152 
	}
}

154 
ölöe
 
R_PröcùÆ
* 
	gR_Node
::
	$i_to_p
(
id
) const

156 i‡(
id
 < 0|| id >
num_¥öcùÆs
)

160  
¥öcùÆs
[
id
];

161 
	}
}

163 
ölöe
 
boﬁ
 
	gR_Node
::
	$is_ª∂iˇ
(
id
) const

165  
id
 >0&& id < 
num_ª∂iˇs
;

166 
	}
}

169 
R_Node
 *
R_node
;

170 
R_PröcùÆ
 *
R_my_¥öcùÆ
;

172 
ölöe
 
	gR_Node
::
	$sig_size
(
id
) const

174 i‡(
id
 < 0)

175 
id
 = 
node_id
;

176 
	`th_as£π
(
id
 < 
num_¥öcùÆs
, "Invalidárgument");

177  
¥öcùÆs
[
id
]->
	`sig_size
();

178 
	}
}

	@R_Principal.cc

1 
	~<°dlib.h
>

2 
	~<°rögs.h
>

3 
	~"R_PröcùÆ.h
"

4 
	~"R_Node.h
"

5 
	~"R_Rïly.h
"

7 
	~"¸y±.h
"

8 
	~"øbö.h
"

10 
	gR_PröcùÆ
::
umac_n⁄˚
 = 0;

12 
	gR_PröcùÆ
::
	$R_PröcùÆ
(
i
, 
≈
, 
Addr
 
TCP_a
, Add∏
TCP_a_f‹_˛õ¡s
, *
p
)

15 
TCP_addr
 = 
TCP_a
;

16 
TCP_addr_f‹_˛õ¡s
 = 
TCP_a_f‹_˛õ¡s
;

18 
id
 = 
i
;

19 
œ°_„tch
 = 0;

21 i‡(
id
 =
R_node
->
	`id
())

23 
˘xs
 = (
umac_˘x_t
*)
	`mÆloc
(
≈
*(umac_ctx_t*));

25 
umac_˘x_t
 *
˘xs_t
 = 
˘xs
;

27 
ödex
=0; index < 
≈
; index++)

29 
ãmp
 = 
i
*1000 + 
ödex
;

31 
k
[
R_Key_size_u
];

32 
j
 = 0; j<
R_Key_size_u
; j++)

34 
k
[
j
] = 
ãmp
 + j;

36 *
˘xs_t
 = 
	`umac_√w
((*)
k
);

37 
˘xs_t
++;

40 
˘xs
 = (
umac_˘x_t
*)
	`mÆloc
((umac_ctx_t*));

41 
umac_˘x_t
 *
˘xs_t
 = 
˘xs
;

42 
ãmp
 = 
i
*1000 + 
R_node
->
	`id
();

43 
k
[
R_Key_size_u
];

44 
j
 = 0; j<
R_Key_size_u
; j++)

46 
k
[
j
] = 
ãmp
 + j;

48 *
˘xs_t
 = 
	`umac_√w
((*)
k
);

51 i‡(
p
 == 0) {

52 
pkey
 = 0;

53 
ssize
 = 0;

55 
bigöt
 
	`b
(
p
,16);

56 
ssize
 = (
	`mpz_sizeöba£2
(&
b
) >> 3) + 1 + ();

57 
pkey
 = 
√w
 
	`øbö_pub
(
b
);

59 
num_¥öcùÆs
 = 
≈
;

60 
	}
}

62 
	gR_PröcùÆ
::~
	$R_PröcùÆ
()

64 i‡(
id
 =
R_node
->
	`id
()) {

65 
ödex
=0; index < 
num_¥öcùÆs
; index++)

66 i‡(
˘xs
[
ödex
] !
NULL
)

67 
	`‰ì
(
˘xs
[
ödex
]);

69 
	`‰ì
(
˘xs
[0]);

71 
	`‰ì
(
˘xs
);

72 
	}
}

74 
boﬁ
 
	gR_PröcùÆ
::
	$vîify_mac
(c⁄° *
§c
, 
§c_Àn
,

75 c⁄° *
mac
, c⁄° *
un⁄˚
)

77 
node_ödex
 = 
R_node
->
	`id
();

78 i‡(
id
 !
R_node
->
	`id
())

79 
node_ödex
 = 0;

81 
umac_˘x_t
 
˘x
 = 
˘xs
[
node_ödex
];

83 i‡(
˘x
 == 0)

85 
	`Ârötf
(
°dîr
,

87  
Ál£
;

90 
èg
[20];

91 
	`umac
(
˘x
, (*)
§c
, 
§c_Àn
, 
èg
, (*)
un⁄˚
);

92 
	`umac_ª£t
(
˘x
);

94 
boﬁ
 
toRë
 = !
	`memcmp
(
èg
, 
mac
, 
R_UMAC_size
);

96  
toRë
;

97 
	}
}

99 
	gR_PröcùÆ
::
	$gí_mac
(c⁄° *
§c
, 
§c_Àn
, *
d°
,

100 
de°_pid
, c⁄° *
un⁄˚
)

102 
umac_˘x_t
 
˘x
 = 
˘xs
[
de°_pid
];

103 
	`umac
(
˘x
, (*)
§c
, 
§c_Àn
, 
d°
, (*)
un⁄˚
);

104 
	`umac_ª£t
(
˘x
);

105 
	}
}

107 
boﬁ
 
	gR_PröcùÆ
::
	$vîify_sig«tuª
(c⁄° *
§c
, 
§c_Àn
,

108 c⁄° *
sig
, 
boﬁ
 
Ælow_£lf
) {

110 i‡((
id
 =
R_node
->
	`id
()Ë&& !
Ælow_£lf
Ë 
Ál£
;

112 
bigöt
 
bsig
;

113 
s_size
;

114 
	`mem˝y
((*)&
s_size
, 
sig
, ());

115 
sig
 += ();

116 i‡(
s_size
+()(Ë> 
	`sig_size
()) {

117  
Ál£
;

120 
	`mpz_£t_øw
(&
bsig
, 
sig
, 
s_size
);

121 
boﬁ
 
ªt
 = 
pkey
->
	`vîify
(
	`°r
(
§c
, 
§c_Àn
), 
bsig
);

123  
ªt
;

124 
	}
}

127 
	gR_PröcùÆ
::
	$í¸y±
(c⁄° *
§c
, 
§c_Àn
, *
d°
,

128 
d°_Àn
) {

131 
bigöt
 
˘ext
 = 
pkey
->
	`í¸y±
(
	`°r
(
§c
, 
§c_Àn
));

132 
size
 = 
	`mpz_øwsize
(&
˘ext
);

133 i‡(
d°_Àn
 < 
size
+2*())

136 
	`mem˝y
(
d°
, (*)&
§c_Àn
, ());

137 
d°
 += ();

138 
	`mem˝y
(
d°
, (*)&
size
, ());

139 
d°
 += ();

141 
	`mpz_gë_øw
(
d°
, 
size
, &
˘ext
);

142  
size
+2*();

143 
	}
}

	@R_Principal.h

1 #i‚de‡
_R_PröcùÆ_h


2 
	#_R_PröcùÆ_h
 1

	)

4 
	~<°rög.h
>

5 
	~<sys/time.h
>

6 
	~"ty≥s.h
"

7 
	~"R_Cry±ogøphy.h
"

9 
	~"Tø˚s.h
"

12 
	~"umac.h
"

15 
˛ass
 
øbö_pub
;

17 ˛as†
	cR_PröcùÆ
 {

18 
	mpublic
:

19 
R_PröcùÆ
(
i
, 
num_¥öcùÆs
, 
Addr
 
TCP_a
, Add∏
TCP_a_f‹_˛õ¡s
, *
p
=
NULL
);

22 
	mvútuÆ
 ~
R_PröcùÆ
();

25 
	$pid
() const;

31 
boﬁ
 
	`vîify_mac
(c⁄° *
§c
, 
§c_Àn
, c⁄° *
mac
,

32 c⁄° *
un⁄˚
);

36 
	`gí_mac
(c⁄° *
§c
, 
§c_Àn
, *
d°
, 
de°_pid
,

37 c⁄° *
un⁄˚
);

43 
ölöe
 
	$√w_umac_n⁄˚
() {

44  ++
umac_n⁄˚
;

47 
Addr
 
TCP_addr
;

48 
Addr
 
TCP_addr_f‹_˛õ¡s
;

50 
	$sig_size
() const;

53 
boﬁ
 
	`vîify_sig«tuª
(c⁄° *
§c
, 
§c_Àn
, c⁄° *
sig
,

54 
boﬁ
 
Ælow_£lf
=
Ál£
);

61 
	`í¸y±
(c⁄° *
§c
, 
§c_Àn
, *
d°
, 
d°_Àn
);

67 
¥iv©e
:

68 
id
;

69 
øbö_pub
 *
pkey
;

70 
ssize
;

72 
Reque°_id
 
œ°_„tch
;

75 
umac_˘x_t
* 
˘xs
;

77 
umac_n⁄˚
;

78 
num_¥öcùÆs
;

79 
	}
};

81 
ölöe
 
	gR_PröcùÆ
::
	$pid
() const {

82  
id
;

83 
	}
}

85 
ölöe
 
	gR_PröcùÆ
::
	$sig_size
(Ëc⁄° {  
ssize
; 
	}
}

	@R_Rep_info.cc

1 
	~<°dlib.h
>

2 
	~<°rög.h
>

4 
	~"R_Rï_öfo.h
"

5 
	~"R_Rïliˇ.h
"

6 
	~"R_Rïly.h
"

8 
	gR_Rï_öfo
::
	$R_Rï_öfo
(
n
)

10 
	`th_as£π
(
n
 != 0, "Invalidárgument");

12 
≈s
 = 
n
;

13 
mem
 = (*Ë
	`vÆloc
(
	`size
());

15 
ﬁd_≈s
 = *((
L⁄g
*Ë
mem
);

16 i‡(
ﬁd_≈s
 != 0)

19 i‡(
≈s
 !
ﬁd_≈s
)

21 
	`th_Áû
("ChangingÇumber ofÖrincipals. Not implemented yet");

27 
	`bzîo
(
mem
, (
≈s
 + 1Ë* 
Max_ªp_size
);

28 
i
 = 0; i < 
≈s
; i++)

31 
R_Rïly_ªp
* 
º
 = (R_Rïly_ªp*Ë(
mem
 + (
i
 + 1Ë* 
Max_ªp_size
);

32 
º
->
èg
 = 
R_Rïly_èg
;

33 
º
->
ª∂y_size
 = -1;

34 
º
->
rid
 = 0;

36 *((
L⁄g
*Ë
mem
Ë
≈s
;

39 
ªps
 = (
R_Rïly
**Ë
	`mÆloc
(
≈s
 * (R_Reply*));

40 
i
 = 0; i < 
≈s
; i++)

42 
R_Rïly_ªp
 *
º
 = (R_Rïly_ªp*Ë(
mem
 + (
i
 + 1Ë* 
Max_ªp_size
);

43 
	`th_as£π
(
º
->
èg
 =
R_Rïly_èg
, "Corrupt memory");

44 
ªps
[
i
] = 
√w
 
	`R_Rïly
(
º
);

46 
	}
}

48 
	gR_Rï_öfo
::~
	$R_Rï_öfo
()

50 
i
 = 0; i < 
≈s
; i++)

52 
dñëe
 
ªps
[
i
];

54 
dñëe
 
ªps
;

55 
	}
}

58 
	gR_Rï_öfo
::
	$√w_ª∂y
(
pid
, &
sz
)

60 
R_Rïly
* 
r
 = 
ªps
[
pid
];

62 
r
->
	`ªp
().
ª∂y_size
 = -1;

63 
sz
 = 
Max_ªp_size
 - (
R_Rïly_ªp
Ë- (
R_node
->
	`f
(Ë+ 1Ë* (
R_UMAC_size


64 + 
R_UN⁄˚_size
);

65  
r
->
	`c⁄ã¡s
(Ë+ (
R_Rïly_ªp
);

66 
	}
}

68 
R_Rïly_ªp
 *

69 
	gR_Rï_öfo
::
	$íd_ª∂y
(
pid
, 
íåy_ª∂iˇ
, 
Reque°_id
 
rid
, 
Seqno
 
£qno
, 
sz
)

71 
R_Rïly
* 
r
 = 
ªps
[
pid
];

72 
	`th_as£π
(
r
->
	`ªp
().
ª∂y_size
 == -1, "Invalid state");

74 
R_Rïly_ªp
& 
º
 = 
r
->
	`ªp
();

75 
º
.
ª∂iˇ
 = 
íåy_ª∂iˇ
;

77 
º
.
rid
 =Ñid;

78 
º
.
ª∂y_size
 = 
sz
;

79 
º
.
dige°
 = 
	`Dige°
(
r
->
	`c⁄ã¡s
(Ë+ (
R_Rïly_ªp
), 
sz
);

81 
ﬁd_size
 = (
R_Rïly_ªp
Ë+ 
º
.
ª∂y_size
;

82 
r
->
	`£t_size
(
ﬁd_size
 + (
R_node
->
	`f
(Ë+ 1Ë* (
R_UMAC_size
 + 
R_UN⁄˚_size
));

84  (
R_Rïly_ªp
 *Ë
r
->
	`c⁄ã¡s
();

85 
	}
}

88 
	gR_Rï_öfo
::
	$£nd_ª∂y
(
pid
, 
sockë
, *
MACs
)

90 
R_Rïly
 *
r
 = 
ªps
[
pid
];

91 
R_Rïly_ªp
& 
º
 = 
r
->
	`ªp
();

92 
ﬁd_size
 = (
R_Rïly_ªp
Ë+ 
º
.
ª∂y_size
;

94 
	`th_as£π
(
º
.
ª∂y_size
 != -1, "Invalid state");

95 
	`th_as£π
(
º
.
exåa
 == 0, "Invalid state");

97 #i‡
USE_MACS


98 
	`mem˝y
(
r
->
	`c⁄ã¡s
(Ë+ 
ﬁd_size
, 
MACs
, (
R_node
->
	`f
(Ë+ 1Ë* (
R_UN⁄˚_size


99 + 
R_UMAC_size
));

102 
R_node
->
	`£nd
(
r
, 
sockë
);

104 
	}
}

	@R_Rep_info.h

1 #i‚de‡
_R_Rï_öfo_h


2 
	#_R_Rï_öfo_h
 1

	)

4 
	~<sys/time.h
>

5 
	~"ty≥s.h
"

6 
	~"Dige°.h
"

7 
	~"R_Rïly.h
"

9 
˛ass
 
	gR_Req_queue
;

11 ˛as†
	cR_Rï_öfo


16 
	mpublic
:

17 
R_Rï_öfo
(
≈s
);

21 ~
R_Rï_öfo
();

24 
	$size
() const;

29 
Reque°_id


30 
	`ªq_id
(
pid
);

35 
Dige°
 &

36 
	`dige°
(
pid
);

41 
R_Rïly
*

42 
	`ª∂y
(
pid
);

48 
	`√w_ª∂y
(
pid
, &
size
);

54 
R_Rïly_ªp
 *

55 
	`íd_ª∂y
(
pid
, 
íåy_ª∂iˇ
, 
Reque°_id
 
rid
, 
Seqno
 
£qno
, 
size
);

58 
	`£nd_ª∂y
(
pid
, 
sockë
, *
MACs
);

59 
¥iv©e
:

60 
≈s
;

61 *
mem
;

62 
R_Rïly
** 
ªps
;

63 c⁄° 
Max_ªp_size
 = 8192;

66 
ölöe
 

67 
R_Rï_öfo
::
	$size
() const

69  (
≈s
 + 1Ë* 
Max_ªp_size
;

70 
	}
}

72 
ölöe
 
Reque°_id


73 
	gR_Rï_öfo
::
	$ªq_id
(
pid
)

75  
ªps
[
pid
]->
	`ªque°_id
();

76 
	}
}

78 
ölöe
 
	gDige°
&

79 
	gR_Rï_öfo
::
	$dige°
(
pid
)

81  
ªps
[
pid
]->
	`dige°
();

82 
	}
}

84 
ölöe
 
R_Rïly
*

85 
	gR_Rï_öfo
::
	$ª∂y
(
pid
)

87  
ªps
[
pid
];

88 
	}
}

	@R_Replica.cc

1 
	~<°rög.h
>

2 
	~<°dio.h
>

3 
	~<limôs.h
>

4 
	~<°dlib.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/time.h
>

7 
	~<sys/sockë.h
>

8 
	~<√töë/ö.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√tdb.h
>

11 
	~<uni°d.h
>

12 
	~<√töë/t˝.h
>

14 
	~<queue
>

16 
	~"th_as£π.h
"

17 
	~"R_Mesßge_ègs.h
"

18 
	~"R_Reque°.h
"

19 
	~"R_ACK.h
"

20 
	~"R_Checkpoöt.h
"

21 
	~"R_Rïly.h
"

22 
	~"R_PröcùÆ.h
"

23 
	~"R_Rïliˇ.h
"

24 
	~"ty≥s.h
"

25 
	~"MD5.h
"

27 
	#ROUND1
 1

	)

28 
	#ROUND2
 2

	)

29 
	#ROUND3
 3

	)

31 #ifde‡
REPLY_BY_PRIMARY


32 
	~"R_Dñivî.h
"

38 
R_Rïliˇ
 *
	gR_ª∂iˇ
;

40 
	#RANSWER
 (
num_ª∂iˇs
 - 1)

	)

44 *
	$ªque°s_‰om_¥ede˚ss‹_h™dÀr_hñ≥r
(*
o
)

46 **
o2
 = (**)
o
;

47 
R_Rïliˇ
 &
r
 = (R_Rïliˇ&)(*
o2
);

48 
r
.
	`ªque°s_‰om_¥ede˚ss‹_h™dÀr
();

50 
	}
}

54 *
	$R_˛õ¡_ªque°s_h™dÀr_hñ≥r
(*
o
)

56 **
o2
 = (**)
o
;

57 
R_Rïliˇ
 &
r
 = (R_Rïliˇ&)(*
o2
);

58 
r
.
	`c_˛õ¡_ªque°s_h™dÀr
();

60 
	}
}

62 
ölöe
 *
	$R_mesßge_queue_h™dÀr_hñ≥r
(*
o
)

64 **
o2
 = (**)
o
;

65 
R_Rïliˇ
 &
r
 = (R_Rïliˇ&Ë(*
o2
);

69 
r
.
	`do_ªcv_‰om_queue
();

71 
	}
}

73 
	gR_Rïliˇ
::
	$R_Rïliˇ
(
FILE
 *
c⁄fig_fûe
, FILE *
c⁄fig_¥iv
, * 
ho°_«me
, 
p‹t
) :

74 
	`R_Node
(
c⁄fig_fûe
, 
c⁄fig_¥iv
, 
ho°_«me
, 
p‹t
), 
	`£qno
(0), 
	`œ°_execuãd
(0), 
	`ª∂õs
(
num_¥öcùÆs
),

75 
	`öcomög_queue_˛õ¡s
(),

76 
	`c⁄√˘m≠
(50),

77 
	`ve˘‹_˛ock
((
Seqno
)0, 
num_ª∂iˇs
),

78 
	$ªque°s
()

81 i‡(!
	`is_ª∂iˇ
(
	`id
()))

83 
	`th_Áû
("Node isÇotáÑeplica");

88 
vt
, 
°
, 
π
;

89 
	`fsˇnf
(
c⁄fig_fûe
, "%d\n", &
vt
);

90 
	`fsˇnf
(
c⁄fig_fûe
, "%d\n", &
°
);

91 
	`fsˇnf
(
c⁄fig_fûe
, "%d\n", &
π
);

94 
	`§™d48
(
	`gëpid
());

96 
exec_comm™d
 = 0;

98 
c⁄√˘m≠
.
	`£t_em±y_key
(-1);

99 
c⁄√˘m≠
.
	`£t_dñëed_key
(-3);

100 
öcomög_queue_sig«Àr
[0] = 0;

101 
öcomög_queue_sig«Àr
[1] = 0;

104 
ö_sockë

	`¸óãSîvîSockë
(
	`¡ohs
(
¥öcùÆs
[
node_id
]->
TCP_addr
.
sö_p‹t
));

107 i‡(
	`±hªad_¸óã
(&
ªque°s_‰om_¥ede˚ss‹_h™dÀr_thªad
, 0,

108 &
ªque°s_‰om_¥ede˚ss‹_h™dÀr_hñ≥r
, (*)
this
) != 0)

110 
	`Ârötf
(
°dîr
, "FailedÅo createÅheÅhread forÑeceiving messages fromÖredecessor inÅheÑing\n");

111 
	`exô
(1);

115 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: TryögÅÿgë out_sockë\n", 
node_id
);

116 
out_sockë
 = 
	`¸óãClõ¡Sockë
(
¥öcùÆs
[(
node_id
 + 1Ë% 
num_ª∂iˇs
]->
TCP_addr
);

118 
	`Ârötf
(
°dîr
,"Creating client socket\n");

119 
ö_sockë_f‹_˛õ¡s

	`¸óãN⁄BlockögSîvîSockë
(
	`¡ohs
(
¥öcùÆs
[
node_id
]->
TCP_addr_f‹_˛õ¡s
.
sö_p‹t
));

120 i‡(
	`±hªad_¸óã
(&
R_˛õ¡_ªque°s_h™dÀr_thªad
, 
NULL
,

121 &
R_˛õ¡_ªque°s_h™dÀr_hñ≥r
, (*)
this
)!= 0)

123 
	`Ârötf
(
°dîr
, "FailedÅo createÅheÅhread forÑeceiving clientÑequests\n");

124 
	`exô
(1);

126 
	}
}

128 
	gR_Rïliˇ
::~
	$R_Rïliˇ
()

130 
	}
}

132 
R_Rïliˇ
::
	$do_ªcv_‰om_queue
()

134 
R_Mesßge
 *
m
;

135 
£À˘‹
 = 0;

138 
m
 = 
NULL
;

139 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

141 
öcomög_queue
.
	`size
(Ë+ 
öcomög_queue_˛õ¡s
.size() == 0)

143 
	`±hªad_c⁄d_waô
(&
nŸ_em±y_öcomög_queue_c⁄d
, &
öcomög_queue_muãx
);

146 
ssize_t
 
qs
;

147 i‡(
£À˘‹
 == 0) {

148 
qs
 = 
öcomög_queue
.
	`size
();

150 
qs
 = 
öcomög_queue_˛õ¡s
.
	`size
();

152 i‡(!
öcomög_queue_sig«Àr
[
£À˘‹
] && 
qs
 == 0)

153 
£À˘‹
 = 1-selector;

156 i‡(
£À˘‹
 == 0) {

157 
m
 = 
öcomög_queue
.
	`ªmove
();

159 
m
 = 
öcomög_queue_˛õ¡s
.
	`ªmove
();

161 
öcomög_queue_sig«Àr
[
£À˘‹
] = 0;

162 
£À˘‹
 = 1-selector;

164 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

165 i‡(
m
 !
NULL
)

166 
	`h™dÀ
(
m
);

168 
	}
}

170 
	gR_Rïliˇ
::
ªgi°î_exec
((*
e
)(
Byz_ªq
 *, 
Byz_ªp
 *, 
Byz_buf„r
 *, , 
boﬁ
))

172 
exec_comm™d
 = 
e
;

173 
	}
}

175 
	gR_Rïliˇ
::
	$ªque°s_‰om_¥ede˚ss‹_h™dÀr
()

177 
sockë
 = -1;

179 
	`li°í
(
ö_sockë
, 1);

180 
sockë
 = 
	`ac˚±
(
ö_sockë
, 
NULL
, NULL);

181 i‡(
sockë
 < 0)

183 
	`≥º‹
("Cannotáccept connection \n");

184 
	`exô
(-1);

187 
fd_£t
 
socks
;

188 
ªadsocks
;

189 
timevÆ
 
timeout
;

194 
R_Mesßge
* 
m
 = 
R_Node
::
	`ªcv
(
sockë
);

195 i‡(
m
 =
NULL
) {

196 
	`FD_ZERO
(&
socks
);

197 
	`FD_SET
(
sockë
, &
socks
);

198 
timeout
.
tv_£c
 = 1;

199 
timeout
.
tv_u£c
 = 0;

200 
ªadsocks
 = 
	`£À˘
(
sockë
+1, &
socks
, (
fd_£t
*)0, (fd_£t*)0, &
timeout
);

201 i‡(
ªadsocks
 < 0)

203 
	`≥º‹
("select inÑequests_from_predecessor_handler");

204 
	`exô
(1);

208 #ifde‡
TRACES


209 
	`Ârötf
(
°dîr
, "Received message\n");

212 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

214 
öcomög_queue
.
	`≠≥nd
(
m
);

215 
öcomög_queue_sig«Àr
[0] = 1;

216 
	`±hªad_c⁄d_sig«l
(&
nŸ_em±y_öcomög_queue_c⁄d
);

218 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

220 
	}
}

222 
	gR_Rïliˇ
::
	$h™dÀ
(
R_Mesßge
 *
m
)

225 
m
->
	`èg
())

227 
R_Reque°_èg
:

228 
gí_h™dÀ
<
R_Reque°
>(
m
);

231 
R_ACK_èg
:

232 
gí_h™dÀ
<
R_ACK
>(
m
);

235 #ifde‡
REPLY_BY_PRIMARY


236 
R_Dñivî_èg
:

237 
gí_h™dÀ
<
R_Dñivî
>(
m
);

241 
R_Checkpoöt_èg
:

242 
gí_h™dÀ
<
R_Checkpoöt
>(
m
);

247 
dñëe
 
m
;

249 
	}
}

251 
	gR_Rïliˇ
::
	$h™dÀ
(
R_Reque°
 *
ªq
)

253 
boﬁ
 
ro
 = 
ªq
->
	`is_ªad_⁄ly
();

254 
cid
 = 
ªq
->
	`˛õ¡_id
();

256 #ifde‡
TRACES


257 
	`Ârötf
(
°dîr
, "*********** R_Rïliˇ %d: Re˚ivögÑeque°Åÿh™dÀ, from %d\n", 
	`id
(), 
cid
);

260 i‡(
ro
)

262 
	`Ârötf
(
°dîr
, "R_Rïliˇ %d: Ród-⁄lyÑeque°†¨êcuºíéyÇŸ h™dÀd\n", 
	`id
());

263 
dñëe
 
ªq
;

264 
	`exô
(1);

267 
authítiˇti⁄_off£t
;

268 #ifde‡
USE_MACS


269 i‡(!
ªq
->
	`vîify
(&
authítiˇti⁄_off£t
, 
ROUND1
))

271 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: vîifyÑëu∫ed FALSE\n", 
	`id
());

272 
dñëe
 
ªq
;

276 #ifde‡
TRACES


277 
	`Ârötf
(
°dîr
, "*********** R_Rïliˇ %d: mesßgêvîifõd\n", 
	`id
());

280 i‡(0 =
	`id
()) {

282 
£qno
++;

283 
ªq
->
	`£t_£qno
(
£qno
);

286 
Executi⁄
 
exr
 = 
executi⁄_waô
;

287 i‡(
ªq
->
	`is_£quí˚d
()) {

288 
R_Reque°
::
Iãøt‹
 
rô
 = 
ªq
->
	`begö
();

289 
rô
 !
ªq
->
	`íd
()) {

291 i‡(
rô
.
d©a
.
ªq
 =rô.d©a.
‹eq
)

292 
exr
 = 
	`execuã_ªque°
(
rô
.
d©a
.
ªq
);

294 
	`execuã_ªque°_maö
(
rô
.
d©a
.
ªq
);

295 ++
rô
;

301 i‡(
ªq
->
	`ª∂iˇ_id
(Ë=
	`id
()) {

302 
max_cou¡
 = 10;

303 
cur_size
 = 
ªq
->
	`size
();

304 
‹ig_ªq_size
 = 
ªq
->
	`size
();

305 
°d
::
queue
<
R_Reque°
 *> 
tob©ch
;

306 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

307 
öcomög_queue_˛õ¡s
.
	`size
(Ë> 0 && 
max_cou¡
 > 0)

310 i‡(
öcomög_queue_˛õ¡s
.
	`fú°
()->
	`èg
(Ë!
R_Reque°_èg
)

312 i‡(
öcomög_queue_˛õ¡s
.
	`fú°
()->
	`size
(Ë+ 
cur_size
 >
R_Max_mesßge_size
)

314 
R_Mesßge
 *
m
 = 
öcomög_queue_˛õ¡s
.
	`ªmove
();

315 
R_Reque°
 *
bªq
;

316 i‡(!
R_Reque°
::
	`c⁄vît
(
m
, 
bªq
))

318 
dñëe
 
m
;

322 
cur_size
 +
bªq
->
	`size
();

323 
max_cou¡
--;

324 
tob©ch
.
	`push
(
bªq
);

326 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

327 i‡(
cur_size
 !
ªq
->
	`size
()) {

328 
R_Reque°
 *
ƒeq
 = 
√w
 
	`R_Reque°
(
cur_size
);

329 
	`mem˝y
(
ƒeq
->
	`c⁄ã¡s
(), 
ªq
->c⁄ã¡s(),Ñeq->
	`size
());

330 
dñëe
 
ªq
;

331 
ªq
 = 
ƒeq
;

333 
tob©ch
.
	`size
() > 0)

335 
R_Reque°
 *
bªq
;

336 
bªq
 = 
tob©ch
.
	`‰⁄t
();

339 
auth_off
;

340 i‡(!
bªq
->
	`vîify
(&
auth_off
, 
ROUND1
))

342 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: vîify o‡ªque° f‹ b©chögÑëu∫ed fÆ£\n", 
	`id
());

343 
dñëe
 
bªq
;

346 
bªq
->
	`£t_£qno
(
ªq
->
	`£qno
());

347 i‡(
exr
 =
executi⁄_ok
) {

348 
	`execuã_ªque°_maö
(
bªq
);

350 
	`mem˝y
((*)(
ªq
->
	`c⁄ã¡s
()+
‹ig_ªq_size
), 
bªq
->c⁄ã¡s(), bªq->
	`size
());

351 
‹ig_ªq_size
 +
	`ALIGNED_SIZE
(
bªq
->
	`size
());

352 
ªq
->
	`£t_b©ched
();

353 
dñëe
 
bªq
;

354 
tob©ch
.
	`p›
();

356 
ªq
->
	`£t_size
(
‹ig_ªq_size
);

360 
R_Mesßge_Sèã
 
≥ndög_ªq
;

361 
≥ndög_ªq
.
ªq
 =Ñeq;

362 
≥ndög_ªq
.
°©e
 = (
ªq
->
	`is_£quí˚d
(Ë&& 
exr
 !
executi⁄_waô
)?
°©e_exec_nŸ_acked
:
°©e_≥ndög
;

363 
≥ndög_ªq
.
authítiˇti⁄_off£t
 =áuthentication_offset;

364 
R_Mesßge_Id
 
	`rmid
(
cid
, 
ªq
->
	`ªque°_id
());

365 
ªque°s
[
rmid
] = 
≥ndög_ªq
;

367 i‡(
	`di°™˚
(
ªq
->
	`ª∂iˇ_id
(), 
	`id
()Ë=
RANSWER
) {

368 
R_ACK
 
	`ack
(
cid
, 
ªq
->
	`£qno
(),Ñeq->
	`ªque°_id
(),Ñeq->
	`dige°
());

369 
ªq
->
	`£t_ty≥
(
åue
);

370 #ifde‡
USE_MACS


371 
ªq
->
	`authítiˇã
(
	`id
(), 
authítiˇti⁄_off£t
, 
NULL
, 
ROUND1
);

372 
ªq
->
	`c›y_authítiˇt‹s
(
ack
.
	`c⁄ã¡s
()+(
R_ACK_ªp
));

375 i‡(
ªq
->
	`is_b©ched
())

377 
‹ig_ªq_size
 = 
ack
.
	`size
();

378 
R_Reque°
::
Iãøt‹
 
rô
 = 
ªq
->
	`begö
();

379 
rô
 !
ªq
->
	`íd
()) {

380 i‡(
rô
.
d©a
.
ªq
 !rô.d©a.
‹eq
)

382 
R_ACK
 *
èck
 = 
√w
 
	`R_ACK
(
rô
.
d©a
.
ªq
->
	`˛õ¡_id
(),Ñô.d©a.ªq->
	`£qno
(),Ñô.d©a.ªq->
	`ªque°_id
(),Ñô.d©a.ªq->
	`dige°
());

383 
	`mem˝y
((*)
ack
.
	`c⁄ã¡s
()+
‹ig_ªq_size
, 
èck
->c⁄ã¡s(),Åack->
	`size
());

384 
‹ig_ªq_size
 +
	`ALIGNED_SIZE
(
èck
->
	`size
());

385 
dñëe
 
èck
;

387 ++
rô
;

389 
ack
.
	`£t_size
(
‹ig_ªq_size
);

390 
ack
.
	`£t_b©ched
();

393 
Àn
 = 
ack
.
	`size
();

394 
	`£nd_Æl
(
out_sockë
, 
ack
.
	`c⁄ã¡s
(), &
Àn
);

395 #ifde‡
TRACES


396 
	`Ârötf
(
°dîr
, "R_Rïliˇ %d: Sídög ACK o‡sizê%d\n", 
	`id
(), 
Àn
);

400 #ifde‡
USE_MACS


401 
ªq
->
	`authítiˇã
(
	`id
(), 
authítiˇti⁄_off£t
, 
NULL
, 
ROUND1
);

403 
Àn
 = 
ªq
->
	`size
();

404 
	`£nd_Æl
(
out_sockë
, 
ªq
->
	`c⁄ã¡s
(), &
Àn
);

410 
	}
}

412 
Executi⁄
 
	gR_Rïliˇ
::
	$execuã_ªque°
(
R_Reque°
 *
ªq
)

415 i‡(
ªq
->
	`£qno
(Ë<
œ°_execuãd
)

416  
executi⁄_ﬁd
;

418 i‡(
ªq
->
	`£qno
(Ë!
œ°_execuãd
 + 1)

419  
executi⁄_waô
;

421 
	`execuã_ªque°_maö
(
ªq
);

423 
œ°_execuãd
 = 
ªq
->
	`£qno
();

424  
executi⁄_ok
;

425 
	}
}

427 
	gR_Rïliˇ
::
	$execuã_ªque°_maö
(
R_Reque°
 *
ªq
)

429 
cid
 = 
ªq
->
	`˛õ¡_id
();

431 
Byz_ªq
 
öb
;

432 
Byz_ªp
 
outb
;

433 
öb
.
c⁄ã¡s
 = 
ªq
->
	`comm™d
(öb.
size
);

434 
outb
.
c⁄ã¡s
 = 
ª∂õs
.
	`√w_ª∂y
(
cid
, outb.
size
);

437 
	`exec_comm™d
(&
öb
, &
outb
, 
NULL
, 
cid
, 
Ál£
);

439 #ifde‡
TRACES


440 
	`Ârötf
(
°dîr
, "*********** R_Rïliˇ %d: commm™dÉxecuãd\n", 
	`id
());

442 i‡(
outb
.
size
 % 
ALIGNMENT_BYTES
)

444 
i
=0; i < 
ALIGNMENT_BYTES
 - (
outb
.
size
 % ALIGNMENT_BYTES); i++)

446 
outb
.
c⁄ã¡s
[outb.
size
+
i
] = 0;

451 
R_Rïly_ªp
 *
º
 = 
ª∂õs
.
	`íd_ª∂y
(
cid
, 
ªq
->
	`ª∂iˇ_id
(),Ñeq->
	`ªque°_id
(),Ñeq->
	`£qno
(), 
outb
.
size
);

452 
	}
}

455 
	gR_Rïliˇ
::
	$£nd_ª∂y_to_˛õ¡
(
R_Reque°
 *
ªq
)

457 
cid
 = 
ªq
->
	`˛õ¡_id
();

459 #ifde‡
TRACES


460 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: wû»ª∂yÅÿ%d o¿sockë %d f‹ seqnÿ%Œd\n", 
	`id
(), 
cid
, 
c⁄√˘m≠
[cid], 
ªq
->
	`£qno
());

462 
ª∂õs
.
	`£nd_ª∂y
(
cid
, 
c⁄√˘m≠
[cid], 
ªq
->
	`MACs
());

463 
	}
}

465 
	gR_Rïliˇ
::
	$h™dÀ
(
R_ACK
 *
ack
)

467 
cid
 = 
ack
->
	`˛õ¡_id
();

468 
Dige°
 
dig
;

470 #ifde‡
TRACES


471 
	`Ârötf
(
°dîr
, "*********** R_Rïliˇ %d: Re˚ivög ACK(%dËtÿh™dÀ\n", 
	`id
(), 
cid
);

474 
R_Mesßge_Id
 
	`rmid
(
cid
, 
ack
->
	`ªque°_id
());

476 
R_Mesßge_M≠
::
ôî©‹
 
ô
;

477 
ô
 = 
ªque°s
.
	`föd
(
rmid
);

478 i‡(
ô
 =
ªque°s
.
	`íd
()) {

479 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]:Ñeque°ÇŸ found f‹ <%d,%Œd>\n", 
	`id
(), 
cid
, 
ack
->
	`ªque°_id
());

480 
dñëe
 
ack
;

484 
R_Reque°
 *
¨eq
 = 
NULL
;

485 
R_Mesßge_Sèã
& 
rms
 = 
ô
->
£c⁄d
;

486 
¨eq
 = 
rms
.
ªq
;

488 #ifde‡
USE_MACS


489 
¨eq
->
	`ª∂a˚_authítiˇt‹s
(
ack
->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

491 
¨eq
->
	`£t_ty≥
(
åue
);

492 
¨eq
->
	`£t_£qno
(
ack
->
	`£qno
());

494 #ifde‡
USE_MACS


495 
authítiˇti⁄_off£t
;

496 i‡(!
¨eq
->
	`vîify
(&
authítiˇti⁄_off£t
, 
ROUND2
)) {

497 
	`Ârötf
(
°dîr
, "R_Rïliˇ %d: vîify o‡ACKÑëu∫ed FALSE\n", 
	`id
());

498 
dñëe
 
ack
;

499 
dñëe
 
¨eq
;

500 
ªque°s
.
	`îa£
(
ô
);

503 
rms
.
authítiˇti⁄_off£t
 =áuthentication_offset;

506 i‡(
rms
.
°©e
 =
°©e_≥ndög
) {

507 
Executi⁄
 
exr
;

508 
R_Reque°
::
Iãøt‹
 
rô
 = 
rms
.
ªq
->
	`begö
();

509 
rô
 !
rms
.
ªq
->
	`íd
()) {

511 i‡(
rô
.
d©a
.
ªq
 =rô.d©a.
‹eq
)

512 
exr
 = 
	`execuã_ªque°
(
rô
.
d©a
.
ªq
);

514 
rô
.
d©a
.
ªq
->
	`£t_ty≥
(
åue
);

515 
rô
.
d©a
.
ªq
->
	`£t_£qno
(
¨eq
->
	`£qno
());

516 
	`execuã_ªque°_maö
(
rô
.
d©a
.
ªq
);

518 ++
rô
;

520 i‡(
exr
 =
executi⁄_waô
) {

521 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: Thîêi†®¥obÀm,Ñeque° couldÇŸ bêexecuãd (œ°_execuãd = %Œd, seqnÿ%Œd)\n", 
	`id
(), 
œ°_execuãd
, 
ack
->
	`£qno
());

522 
	`exô
(1);

525 
rms
.
°©e
 = 
°©e_acked
;

527 
R_Rïly
* 
ªp
 = 
ª∂õs
.
	`ª∂y
(
rms
.
ªq
->
	`˛õ¡_id
());

528 
R_Rïly_ªp
* 
º
 = (R_Rïly_ªp*)(
ªp
?ªp->
	`c⁄ã¡s
():
NULL
);

530 i‡(
rms
.
°©e
 =
°©e_acked
 && 
	`di°™˚
‘ms.
ªq
->
	`ª∂iˇ_id
(), 
	`id
()Ë=
RANSWER
) {

531 #ifde‡
REPLY_BY_PRIMARY


532 
R_Dñivî
 
	`rd
(
cid
, 
rms
.
ªq
->
	`£qno
(),Ñms.ªq->
	`ªque°_id
(),Ñms.ªq->
	`dige°
());

533 #ifde‡
USE_MACS


534 
rms
.
ªq
->
	`authítiˇã
(
	`id
(),Ñms.
authítiˇti⁄_off£t
, 
º
, 
ROUND3
);

535 
rms
.
ªq
->
	`c›y_authítiˇt‹s
(
rd
.
	`c⁄ã¡s
()+(
R_Dñivî_ªp
));

537 
Àn
 = 
rd
.
	`size
();

538 
	`£nd_Æl
(
out_sockë
, 
rd
.
	`c⁄ã¡s
(), &
Àn
);

540 #ifde‡
USE_MACS


541 i‡(!
rms
.
ªq
->
	`is_b©ched
())

543 
rms
.
ªq
->
	`authítiˇã
(
	`id
(),Ñms.
authítiˇti⁄_off£t
, 
º
, 
ROUND2
);

544 
rms
.
ªq
->
	`c›y_authítiˇt‹s
(
ack
->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

547 
R_ACK
::
Iãøt‹
 
aô
 = 
ack
->
	`begö
();

548 
R_Reque°
::
Iãøt‹
 
rô
 = 
rms
.
ªq
->
	`begö
();

549 
aô
 !
ack
->
	`íd
()) {

551 #ifde‡
USE_MACS


552 i‡(
rms
.
ªq
->
	`is_b©ched
()) {

553 
R_Rïly
 *
ªp
 = 
ª∂õs
.
	`ª∂y
(
rô
.
d©a
.
ªq
->
	`˛õ¡_id
());

554 
R_Rïly_ªp
 *
º
 = (R_Rïly_ªp*)(
ªp
?ªp->
	`c⁄ã¡s
():
NULL
);

555 i‡(
rô
.
d©a
.
ªq
 !rô.d©a.
‹eq
)

556 
rô
.
d©a
.
ªq
->
	`ª∂a˚_authítiˇt‹s
(
aô
.d©a.ªq->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

557 
√w_off£t
;

558 
rô
.
d©a
.
ªq
->
	`authítiˇã_f‹_˛õ¡
(
	`id
(), 0, &
√w_off£t
, 
º
, 
ROUND2
);

559 i‡(
rô
.
d©a
.
ªq
 =rô.d©a.
‹eq
)

560 
rô
.
d©a
.
ªq
->
	`∑tch_authítiˇt‹s_f‹_˛õ¡
(
aô
.d©a.ªq->
	`c⁄ã¡s
()+(
R_ACK_ªp
), 
√w_off£t
);

562 
rô
.
d©a
.
ªq
->
	`c›y_authítiˇt‹s
(
aô
.d©a.ªq->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

565 
	`£nd_ª∂y_to_˛õ¡
(
rô
.
d©a
.
ªq
);

566 ++
aô
;

567 ++
rô
;

570 
rms
.
°©e
 = 
°©e_°abÀ
;

571 #ifde‡
REPLY_BY_PRIMARY


572 } i‡(
rms
.
°©e
 =
°©e_acked
 &&Ñms.
ªq
->
	`ª∂iˇ_id
(Ë=
	`id
()) {

573 
rms
.
°©e
 = 
°©e_waô_dñivî
;

575 } i‡(
rms
.
°©e
 =
°©e_acked
) {

576 
rms
.
°©e
 = 
°©e_°abÀ
;

579 
ª∂iˇ_id
 = 
¨eq
->
	`ª∂iˇ_id
();

580 
rms_authítiˇti⁄_off£t
 = 
rms
.
authítiˇti⁄_off£t
;

582 i‡(
	`id
(Ë!(
ª∂iˇ_id
 + 
	`n
() - 1)%n()) {

583 #ifde‡
USE_MACS


584 
R_Rïly
* 
ªp
 = 
ª∂õs
.
	`ª∂y
(
cid
);

585 
R_Rïly_ªp
* 
º
 = (R_Rïly_ªp*)(
ªp
?ªp->
	`c⁄ã¡s
():
NULL
);

586 
¨eq
->
	`authítiˇã
(
	`id
(), 
rms_authítiˇti⁄_off£t
, 
º
, 
ROUND2
);

587 
¨eq
->
	`c›y_authítiˇt‹s
(
ack
->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

589 i‡(
rms
.
ªq
->
	`is_b©ched
())

592 
R_ACK
::
Iãøt‹
 
aô
 = 
ack
->
	`begö
();

593 
R_Reque°
::
Iãøt‹
 
rô
 = 
rms
.
ªq
->
	`begö
();

594 
aô
 !
ack
->
	`íd
()) {

596 
R_Rïly
 *
ªp
 = 
ª∂õs
.
	`ª∂y
(
rô
.
d©a
.
ªq
->
	`˛õ¡_id
());

597 
R_Rïly_ªp
 *
º
 = (R_Rïly_ªp*)(
ªp
?ªp->
	`c⁄ã¡s
():
NULL
);

598 
√w_off£t
 = 0;

599 i‡(
rô
.
d©a
.
ªq
 !rô.d©a.
‹eq
 || 
√w_off£t
 < 0)

601 
rô
.
d©a
.
ªq
->
	`ª∂a˚_authítiˇt‹s
(
aô
.d©a.ªq->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

602 
rô
.
d©a
.
ªq
->
	`authítiˇã_f‹_˛õ¡
(
	`id
(), 0, &
√w_off£t
, 
º
, 
ROUND2
);

603 
rô
.
d©a
.
ªq
->
	`c›y_authítiˇt‹s
(
aô
.d©a.ªq->
	`c⁄ã¡s
()+(
R_ACK_ªp
));

605 
Áke_off£t
 = 0;

606 i‡(
	`di°™˚
(
	`id
(), 
rô
.
d©a
.
‹eq
->
	`ª∂iˇ_id
()Ë=
	`f
()+1)

607 
Áke_off£t
 = (
R_UMAC_size
 + 
R_UN⁄˚_size
);

608 
rô
.
d©a
.
ªq
->
	`authítiˇã_f‹_˛õ¡
(
	`id
(), 
Áke_off£t
, &
√w_off£t
, 
º
, 
ROUND2
);

614 ++
aô
;

615 ++
rô
;

620 
Àn
 = 
ack
->
	`size
();

621 
îr
 = 
	`£nd_Æl
(
out_sockë
, 
ack
->
	`c⁄ã¡s
(), &
Àn
);

623 #ifde‡
REPLY_BY_PRIMARY


624 i‡(
	`id
(Ë=
¨eq
->
	`ª∂iˇ_id
())

626 
to£nd
[
cid
] = 
¨eq
;

631 i‡(
rms
.
°©e
 =
°©e_°abÀ
)

633 i‡(
rms
.
ªq
)

634 
dñëe
 
rms
.
ªq
;

635 
ªque°s
.
	`îa£
(
ô
);

638 
dñëe
 
ack
;

640 
	}
}

642 #ifde‡
REPLY_BY_PRIMARY


648 
	gR_Rïliˇ
::
	$h™dÀ
(
R_Dñivî
 *
rd
)

650 
cid
 = 
rd
->
	`˛õ¡_id
();

651 #ifde‡
TRACES


652 
	`Ârötf
(
°dîr
, "*********** R_Rïliˇ %d: Re˚ivög Dñivî(%dËtÿh™dÀ\n", 
	`id
(), 
cid
);

655 i‡(
to£nd
.
	`föd
(
cid
Ë!to£nd.
	`íd
()) {

657 
R_Reque°
* 
¨eq
 = 
to£nd
[
cid
];

658 
to£nd
[
cid
] = 
NULL
;

659 
to£nd
.
	`îa£
(
cid
);

660 i‡(
¨eq
 =
NULL
) {

661 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]:ÖrobÀm wôháªq, iài†NULL\n", 
	`id
());

662 
dñëe
 
rd
;

665 
R_Mesßge_Id
 
	`rmid
(
cid
, 
¨eq
->
	`ªque°_id
());

666 
R_Mesßge_M≠
::
ôî©‹
 
ô
;

667 
ô
 = 
ªque°s
.
	`föd
(
rmid
);

668 i‡(
ô
 =
ªque°s
.
	`íd
()) {

669 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: couldÇŸ födÑeque° <%d,%Œd> i¿m≠\n", 
	`id
(), 
cid
, 
¨eq
->
	`ªque°_id
());

670 
	`exô
(1);

673 
R_Mesßge_Sèã
& 
rms
 = 
ô
->
£c⁄d
;

675 #ifde‡
USE_MACS


676 
¨eq
->
	`ª∂a˚_authítiˇt‹s
(
rd
->
	`c⁄ã¡s
()+(
R_Dñivî_ªp
));

678 
R_Rïly
* 
ªp
 = 
ª∂õs
.
	`ª∂y
(
¨eq
->
	`˛õ¡_id
());

679 
R_Rïly_ªp
* 
º
 = (R_Rïly_ªp*)(
ªp
?ªp->
	`c⁄ã¡s
():
NULL
);

682 
R_Reque°
::
Iãøt‹
 
rô
 = 
rms
.
ªq
->
	`begö
();

683 
rô
 !
rms
.
ªq
->
	`íd
()) {

685 
	`£nd_ª∂y_to_˛õ¡
(
rô
.
d©a
.
ªq
);

686 ++
rô
;

690 
dñëe
 
¨eq
;

691 
rms
.
°©e
 = 
°©e_°abÀ
;

692 
ªque°s
.
	`îa£
(
ô
);

694 
	`Ârötf
(
°dîr
, "R_Rïliˇ[%d]: TÿdñivîÑeque° i†nŸÅhîe!\n", 
	`id
());

696 
dñëe
 
rd
;

697 
	}
}

700 
	gR_Rïliˇ
::
	$h™dÀ
(
R_Checkpoöt
 *
c
)

702 
	}
}

704 
R_Rïliˇ
::
	$c_˛õ¡_ªque°s_h™dÀr
()

706 
timevÆ
 
timeout
;

707 
ªadsocks
;

708 
fd_£t
 
socks
;

710 
	`Ârötf
(
°dîr
,"Iam here\n");

711 
	`li°í
(
ö_sockë_f‹_˛õ¡s
, 
MAX_CONNECTIONS
);

713 
highsock
 = 
ö_sockë_f‹_˛õ¡s
;

714 
c⁄√˘m≠
.
	`˛ór
();

718 
	`FD_ZERO
(&
socks
);

719 
	`FD_SET
(
ö_sockë_f‹_˛õ¡s
, &
socks
);

723 
googÀ
::
dí£_hash_m≠
<,>::
ôî©‹
 
ô
;

724 
ô
 = 
c⁄√˘m≠
.
	`begö
(); ià!c⁄√˘m≠.
	`íd
(); it++) {

725 
	`FD_SET
(
ô
->
£c⁄d
, &
socks
);

726 i‡(
ô
->
£c⁄d
 > 
highsock
)

727 
highsock
 = 
ô
->
£c⁄d
;

730 
timeout
.
tv_£c
 = 1;

731 
timeout
.
tv_u£c
 = 0;

732 
ªadsocks
 = 
	`£À˘
(
highsock
 + 1, &
socks
, (
fd_£t
 *) 0, (fd_set *) 0,

733 &
timeout
);

734 i‡(
ªadsocks
 < 0)

736 
	`Ârötf
(
°dîr
, "selectÑeturned <0");

737 
	`exô
(1);

739 i‡(
ªadsocks
 == 0)

742 
	`fÊush
(
°dout
);;

745 i‡(
	`FD_ISSET
(
ö_sockë_f‹_˛õ¡s
, &
socks
))

747 
	`h™dÀ_√w_c⁄√˘i⁄
();

752 
ô
 = 
c⁄√˘m≠
.
	`begö
(); ià!c⁄√˘m≠.
	`íd
(); it++) {

753 i‡(
	`FD_ISSET
(
ô
->
£c⁄d
, &
socks
))

755 
îr
;

756 
R_Mesßge
* 
m
 = 
R_Node
::
	`ªcv
(
ô
->
£c⁄d
, &
îr
);

757 i‡(
m
 =
NULL
) {

759 i‡(
îr
 == 0)

760 
c⁄√˘m≠
.
	`îa£
(
ô
);

763 
	`±hªad_muãx_lock
(&
öcomög_queue_muãx
);

766 
öcomög_queue_˛õ¡s
.
	`≠≥nd
(
m
);

767 
öcomög_queue_sig«Àr
[1] = 1;

768 
	`±hªad_c⁄d_sig«l
(&
nŸ_em±y_öcomög_queue_c⁄d
);

770 
	`±hªad_muãx_u∆ock
(&
öcomög_queue_muãx
);

775 
	`±hªad_exô
(
NULL
);

776 
	}
}

778 
	gR_Rïliˇ
::
	$h™dÀ_√w_c⁄√˘i⁄
()

780 
c⁄√˘i⁄
;

784 
c⁄√˘i⁄
 = 
	`ac˚±
(
ö_sockë_f‹_˛õ¡s
, 
NULL
, NULL);

785 i‡(
c⁄√˘i⁄
 < 0)

787 
	`≥º‹
("accept");

788 
	`exô
(
EXIT_FAILURE
);

790 
˛õ¡_id
;

791 
ªs
 = 
	`ªcv‰om
(
c⁄√˘i⁄
, &
˛õ¡_id
, (), 0, 0, 0);

792 
	`£ä⁄blockög
(
c⁄√˘i⁄
);

793 i‡(
c⁄√˘m≠
.
	`size
(Ë< 
MAX_CONNECTIONS
) {

794 
	`Ârötf
(
°dîr
, "\nR_Rïliˇ[%d]: C⁄√˘i⁄ác˚±ed: FD=%d; clõ¡_id=%d\n", 
	`id
(), 
c⁄√˘i⁄
, 
˛õ¡_id
);

795 
c⁄√˘m≠
[
˛õ¡_id
] = 
c⁄√˘i⁄
;

799 
	`Ârötf
(
°dîr
, "\nNoÑoomÜeft forÇew client.\n");

800 
	`˛o£
(
c⁄√˘i⁄
);

801 
	}
}

	@R_Replica.h

1 #i‚de‡
_R_Rïliˇ_h


2 
	#_R_Rïliˇ_h
 1

	)

4 
	~<±hªad.h
>

6 
	~<googÀ/•¨£_hash_m≠
>

7 
	~<googÀ/dí£_hash_m≠
>

9 
usög
 
	ggoogÀ
::
dí£_hash_m≠
;

11 
	~<m≠
>

12 
	~<li°
>

14 
	~"R_Cry±ogøphy.h
"

15 
	~"ty≥s.h
"

16 
	~"R_Rï_öfo.h
"

17 
	~"Dige°.h
"

18 
	~"R_Node.h
"

19 
	~"libbyz.h
"

20 
	~"Së.h
"

21 
	~"Aºay.h
"

22 
	~"R_Checkpoöt.h
"

24 
	~"Su≥rFa°Hash.h
"

26 
˛ass
 
	gR_Reque°
;

27 
˛ass
 
	gR_ACK
;

28 #ifde‡
REPLY_BY_PRIMARY


29 
˛ass
 
	gR_Dñivî
;

32 
	#MAX_CONNECTIONS
 200

	)

33 
	#ALIGNMENT_BYTES
 2

	)

35 
	eR_Sèã
 { 
	m°©e_≥ndög
 = 0, 
	m°©e_exec_nŸ_acked
 = 1, 
	m°©e_acked
 = 2, 
	m°©e_waô_dñivî
 = 4, 
	m°©e_°abÀ
 = 8 };

36 
	eExecuti⁄
 { 
	mexecuti⁄_ok
 = 0, 
	mexecuti⁄_waô
 = 1, 
	mexecuti⁄_ﬁd
 = 2 };

39 
R_Reque°
 *
	mªq
;

40 
R_Sèã
 
	m°©e
;

41 
	mauthítiˇti⁄_off£t
;

42 } 
	tR_Mesßge_Sèã
;

44 
	g°d
::
	t∑ú
<, 
	tReque°_id
> 
	tR_Mesßge_Id
;

45 
	g°d
::
	tli°
<
	tR_Mesßge_Sèã
> 
	tR_Mesßge_Li°
;

47 
	g°d
::
	tm≠
<
	tR_Mesßge_Id
, 
	tR_Mesßge_Sèã
> 
	tR_Mesßge_M≠
;

49 ˛as†
	cR_Rïliˇ
 : 
public
 
R_Node


51 
public
:

53 
R_Rïliˇ
(
FILE
 *
c⁄fig_fûe
, FILE *
c⁄fig_¥iv
, * 
ho°_«me
,
p‹t
=0);

62 
	mvútuÆ
 ~
R_Rïliˇ
();

72 
ªgi°î_exec
((*
e
)(
Byz_ªq
 *, 
Byz_ªp
 *, 
Byz_buf„r
 *, , 
boﬁ
));

75 
Executi⁄
 
	`execuã_ªque°
(
R_Reque°
 *
ªq
);

76 
	`execuã_ªque°_maö
(
R_Reque°
 *
ªq
);

77 
	`£nd_ª∂y_to_˛õ¡
(
R_Reque°
 *
ªq
);

79 
	`do_ªcv_‰om_queue
();

84 
	`ªque°_queue_h™dÀr
();

85 
	`ªque°s_‰om_¥ede˚ss‹_h™dÀr
();

86 
	`c_˛õ¡_ªque°s_h™dÀr
();

88 
ãm∂©e
 <
˛ass
 
T
> 
ölöe
 
	$gí_h™dÀ
(
R_Mesßge
 *
m
)

90 
T
 *
n
;

91 i‡(
T
::
	`c⁄vît
(
m
, 
n
))

93 
	`h™dÀ
(
n
);

96 
dñëe
 
m
;

100 
¥iv©e
:

102 
	`h™dÀ
(
R_Mesßge
* 
m
);

103 
	`h™dÀ
(
R_Reque°
* 
m
);

104 
	`h™dÀ
(
R_ACK
 * 
m
);

105 
	`h™dÀ
(
R_Checkpoöt
* 
m
);

106 #ifde‡
REPLY_BY_PRIMARY


107 
	`h™dÀ
(
R_Dñivî
* 
m
);

110 
	`h™dÀ_√w_c⁄√˘i⁄
();

112 
Seqno
 
£qno
;

114 
Seqno
 
œ°_execuãd
;

117 
R_Rï_öfo
 
ª∂õs
;

119 
ö_sockë
;

120 
ö_sockë_f‹_˛õ¡s
;

121 
out_sockë
;

122 
Æl_ª∂iˇs_sockë
;

125 
±hªad_t
 
ªque°_queue_h™dÀr_thªad
;

126 
±hªad_t
 
ªque°s_‰om_¥ede˚ss‹_h™dÀr_thªad
;

127 
±hªad_t
 
R_˛õ¡_ªque°s_h™dÀr_thªad
;

130 
R_Mes_queue
 
öcomög_queue_˛õ¡s
;

131 
öcomög_queue_sig«Àr
[2];

134 
googÀ
::
dí£_hash_m≠
<,> 
c⁄√˘m≠
;

136 #ifde‡
REPLY_BY_PRIMARY


137 
°d
::
m≠
<,
R_Reque°
*> 
to£nd
;

141 (*
exec_comm™d
)(
Byz_ªq
 *, 
Byz_ªp
 *, 
Byz_buf„r
 *, , 
boﬁ
);

144 
Aºay
<
Seqno
> 
ve˘‹_˛ock
;

146 
R_Mesßge_M≠
 
ªque°s
;

147 
	}
};

150 
R_Rïliˇ
 *
R_ª∂iˇ
;

	@R_Reply.cc

1 
	~<°rögs.h
>

2 
	~"th_as£π.h
"

3 
	~"R_Mesßge_ègs.h
"

4 
	~"R_Rïly.h
"

5 
	~"R_Node.h
"

6 
	~"R_PröcùÆ.h
"

8 
	gR_Rïly
::
	$R_Rïly
() :

9 
	$R_Mesßge
(
R_Rïly_èg
, 
R_Max_mesßge_size
)

11 
	}
}

13 
	gR_Rïly
::
	$R_Rïly
(
R_Rïly_ªp
 *
r
) :

14 
	$R_Mesßge
(
r
)

16 
	}
}

18 
R_Rïly
::~
	$R_Rïly
()

20 
	}
}

22 *
R_Rïly
::
	$°‹e_ª∂y
(&
max_Àn
)

24 
max_Àn
 = 
	`msize
()-(
R_Rïly_ªp
)- (
R_node
->
	`f
(Ë+ 1Ë* (
R_UN⁄˚_size


25 + 
R_UMAC_size
);

27  
	`c⁄ã¡s
()+(
R_Rïly_ªp
);

28 
	}
}

30 
boﬁ
 
	gR_Rïly
::
	$vîify
()

33 
ªp_size
 = 
	`ªp
().
ª∂y_size
;

34 i‡(
	`size
()-()(
R_Rïly_ªp
)-
ªp_size
 < (
R_node
->
	`f
() + 1)

35 * (
R_UN⁄˚_size
 + 
R_UMAC_size
))

37  
Ál£
;

41 
Dige°
 
	`d
(
	`c⁄ã¡s
()+(
R_Rïly_ªp
), 
ªp_size
);

42 i‡(
d
 !
	`ªp
().
dige°
)

44 
	`Ârötf
(
°dîr
, "R_Reply::verify: Digest doesÇot match\n");

45  
Ál£
;

49 
size_wo_MAC
 = (
R_Rïly_ªp
Ë+ 
ªp_size
;

51 
unu£d
;

52 
boﬁ
 
ªt
 = 
R_node
->
	`vîify_auth
(R_node->
	`n
(), 
	`ªp
().
ª∂iˇ
, R_node->
	`id
(),

53 (*)&(
	`ªp
().
dige°
), (
Dige°
), 
	`c⁄ã¡s
()+
size_wo_MAC
, &
unu£d
, 
NULL
, 3);

55  
ªt
;

56 
	}
}

58 
boﬁ
 
	gR_Rïly
::
	$c⁄vît
(
R_Mesßge
 *
m1
, 
R_Rïly
 *&
m2
)

60 i‡(!
m1
->
	`has_èg
(
R_Rïly_èg
, (
R_Rïly_ªp
)))

62  
Ál£
;

67 
m2
=
√w
 
	`R_Rïly
();

68 
	`mem˝y
(
m2
->
	`c⁄ã¡s
(), 
m1
->c⁄ã¡s(), m1->
	`size
());

70 
dñëe
 
m1
;

71 
m2
->
	`åim
();

72  
åue
;

73 
	}
}

	@R_Reply.h

1 #i‚de‡
_R_Rïly_h


2 
	#_R_Rïly_h
 1

	)

4 
	~"ty≥s.h
"

5 
	~"R_Mesßge.h
"

6 
	~"Dige°.h
"

8 
˛ass
 
	gR_PröcùÆ
;

9 
˛ass
 
	gR_Rï_öfo
;

14 
	gR_Rïly_ªp
 : 
public
 
R_Mesßge_ªp


16 
Reque°_id
 
rid
;

17 
Dige°
 
	gdige°
;

18 
	gª∂y_size
;

19 
	gª∂iˇ
;

27 ˛as†
	cR_Rïly
 : 
public
 
R_Mesßge


32 
public
:

33 
R_Rïly
();

35 
R_Rïly
(
R_Rïly_ªp
 *
r
);

37 
	mvútuÆ
 ~
R_Rïly
();

39 *
°‹e_ª∂y
(&
max_Àn
);

45 
Reque°_id
 
	$ªque°_id
() const;

48 
Dige°
 &
	$dige°
() const;

51 *
	`ª∂y
(&
Àn
);

55 & 
	`ª∂y_size
();

58 
boﬁ
 
	`vîify
();

61 
boﬁ
 
	`m©ch
(
R_Rïly
 *
r
);

64 
boﬁ
 
	`c⁄vît
(
R_Mesßge
 *
m1
, 
R_Rïly
 *&
m2
);

70 
R_Rïly_ªp
 &
	$ªp
() const;

72 
¥iv©e
:

74 
‰õnd
 
˛ass
 
R_Rï_öfo
;

77 
ölöe
 
R_Rïly_ªp
& 
R_Rïly
::
	$ªp
() const

79 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

80  *((
R_Rïly_ªp
*)
msg
);

81 
	}
}

83 
ölöe
 
Reque°_id
 
	gR_Rïly
::
	$ªque°_id
() const

85  
	`ªp
().
rid
;

86 
	}
}

87 
ölöe
 
	gDige°
& 
	gR_Rïly
::
	$dige°
() const

89  
	`ªp
().
dige°
;

90 
	}
}

92 
ölöe
 * 
	gR_Rïly
::
	$ª∂y
(&
Àn
)

94 
Àn
 = 
	`ªp
().
ª∂y_size
;

95  
	`c⁄ã¡s
()+(
R_Rïly_ªp
);

96 
	}
}

97 
ölöe
 & 
	gR_Rïly
::
	$ª∂y_size
()

99  
	`ªp
().
ª∂y_size
;

100 
	}
}

101 
ölöe
 
boﬁ
 
	gR_Rïly
::
	$m©ch
(
R_Rïly
 *
r
)

111 i‡((
r
->
	`ª∂y_size
() < 0) || (reply_size() < 0))

113  
åue
;

116 
boﬁ
 
toRë
 = ((
	`ªp
().
rid
 =
r
->ªp().ridË&& (
	`dige°
()==Ñ->digest()));

123 i‡(
toRë
)

126  
åue
;

129  
Ál£
;

130 
	}
}

	@R_Request.cc

1 
	~<°dlib.h
>

2 
	~<°rögs.h
>

3 
	~"th_as£π.h
"

4 
	~"R_Mesßge_ègs.h
"

5 
	~"R_Reque°.h
"

6 
	~"R_Node.h
"

7 
	~"R_PröcùÆ.h
"

8 
	~"R_ACK.h
"

10 
	~"MD5.h
"

15 
	gR_Reque°
::
	$R_Reque°
(
sz
) :

16 
	$R_Mesßge
(
R_Reque°_èg
, 
sz
)

18 
£qnos_size
 = (
Seqno
)*(
R_node
->
	`f
()+1);

19 
	}
}

21 
	gR_Reque°
::
	$R_Reque°
(
Reque°_id
 
r
) :

22 
	$R_Mesßge
(
R_Reque°_èg
, 
R_Max_mesßge_size
)

24 
	`ªp
().
cid
 = 
R_node
->
	`id
();

25 
	`ªp
().
rid
 = 
r
;

26 
	`ªp
().
comm™d_size
 = 0;

27 
	`ªp
().
£qno
 = 0;

28 
	`ªp
().
ty≥
 = 0;

30 
	`£t_size
((
R_Reque°_ªp
));

31 
£qnos_size
 = (
Seqno
)*(
R_node
->
	`f
()+1);

32 
	}
}

34 
	gR_Reque°
::
	$R_Reque°
(
R_Reque°_ªp
 *
ªp
)

35 : 
	`R_Mesßge
((
R_Mesßge_ªp
*)
ªp
)

37 
£qnos_size
 = (
Seqno
)*(
R_node
->
	`f
()+1);

38 
	}
}

40 
	gR_Reque°
::~
	$R_Reque°
()

42 
	}
}

44 
R_Reque°
::
	$£t_£qno
(
Seqno
 
£q
) {

45 
	`ªp
().
£qno
 = 
£q
;

46 
	}
}

48 *
	gR_Reque°
::
	$°‹e_comm™d
(&
max_Àn
)

50 
max_Àn
 = 
	`msize
()-(
R_Reque°_ªp
)-
R_node
->
	`auth_size
()-
£qnos_size
;

51  
	`c⁄ã¡s
()+(
R_Reque°_ªp
);

52 
	}
}

55 
ölöe
 
	gR_Reque°
::
	$comp_dige°
(
Dige°
& 
d
)

59 
MD5_CTX
 
c⁄ãxt
;

60 
	`MD5Inô
(&
c⁄ãxt
);

61 
	`MD5Upd©e
(&
c⁄ãxt
, (*)(&(
	`ªp
().
cid
)),

62 (Ë+ (
Reque°_id
)+()+()+ 
	`ªp
().
comm™d_size
);

63 
	`MD5FöÆ
(
d
.
	`udige°
(), &
c⁄ãxt
);

64 
	}
}

66 
	gR_Reque°
::
	$föÆize
(
a˘_Àn
, 
boﬁ
 
ªad_⁄ly
)

68 
	`th_as£π
(()
a˘_Àn
 <
	`msize
(Ë- (
R_Reque°_ªp
)

69 - 
R_node
->
	`authítiˇt‹s_size
(), "InvalidÑequest size");

72 
	`ªp
().
exåa
 &= ~1;

73 i‡(
ªad_⁄ly
)

75 
	`ªp
().
exåa
 =Ñep().extra | 1;

77 
	`ªp
().
comm™d_size
 = 
a˘_Àn
;

78 
	`comp_dige°
(
	`ªp
().
od
);

80 
	`£t_size
((
R_Reque°_ªp
Ë+ 
a˘_Àn
 + 
R_node
->
	`auth_size
(Ë+ 
£qnos_size
);

81 
	}
}

83 
	gR_Reque°
::
	$authítiˇã_f‹_˛õ¡
(
id
, 
authítiˇti⁄_off£t
, *
√w_off£t
, 
R_Rïly_ªp
 *
º
, 
ôî©i⁄
)

85 i‡(
R_node
->
	`id
(Ë=
	`ª∂iˇ_id
())

87 
ndi°™˚
 = (
R_node
->
	`f
()+1Ë- R_node->
	`di°™˚
(R_node->
	`id
(), 
	`ª∂iˇ_id
());

88 i‡(
ndi°™˚
 < 0 ||Çdi°™˚ > 
R_node
->
	`f
())

93 
di°™˚
 = 
R_node
->
	`di°™˚
(
	`ª∂iˇ_id
(),
id
);

94 i‡(
id
 == -1) {

95 
	`£t_°‹ed_£qno
(0,
	`£qno
());

96 } i‡(
di°™˚
==0 && 
ôî©i⁄
 == 1)

97 
	`£t_°‹ed_£qno
(1, 
	`£qno
());

99 
	`rﬁl_°‹ed_£qno
();

100 
	`£t_°‹ed_£qno
(
R_node
->
	`f
(), 
	`£qno
());

103 *
√w_off£t
 = 
ndi°™˚
;

104 
ndi°™˚
 *(
R_UMAC_size
 + 
R_UN⁄˚_size
);

107 
R_node
->
	`gí_auth
((*)&(
	`ªp
().
ty≥
), (
uöt32_t
)+(
Seqno
)+(
Dige°
), 
	`c⁄ã¡s
()

108 + (
R_Reque°_ªp
Ë+ 
	`ªp
().
comm™d_size
 + 
£qnos_size
 + 
authítiˇti⁄_off£t
 + 
ndi°™˚
, 
º
, 
id
, 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), 
ôî©i⁄
, 1);

109 
	}
}

111 
	gR_Reque°
::
	$authítiˇã
(
id
, 
authítiˇti⁄_off£t
, 
R_Rïly_ªp
 *
º
, 
ôî©i⁄
)

113 
di°™˚
 = 
R_node
->
	`di°™˚
(
	`ª∂iˇ_id
(),
id
);

114 i‡(
id
 == -1) {

115 
	`£t_°‹ed_£qno
(0,
	`£qno
());

116 } i‡(
di°™˚
==0 && 
ôî©i⁄
 == 1)

117 
	`£t_°‹ed_£qno
(1, 
	`£qno
());

119 
	`rﬁl_°‹ed_£qno
();

120 
	`£t_°‹ed_£qno
(
R_node
->
	`f
(), 
	`£qno
());

123 i‡(
	`is_b©ched
()) {

124 *
tﬂuth
 = (*)
	`mÆloc
(32*(
Dige°
)+(
uöt32_t
)+(
Seqno
));

125 *((
uöt32_t
*)
tﬂuth
Ë
	`ªp
().
ty≥
;

126 *((
Seqno
*)(
tﬂuth
+(
uöt32_t
))Ë
	`ªp
().
£qno
;

127 
a˘pos
 = (
uöt32_t
)+(
Seqno
);

129 
R_Reque°
::
Iãøt‹
 
rô
 = 
	`begö
();

130 
rô
 !
	`íd
()) {

132 
	`mem˝y
(
tﬂuth
+
a˘pos
, (*)&(
rô
.
d©a
.
ªq
->
	`ªp
().
od
), (
Dige°
));

133 
a˘pos
 +(
Dige°
);

135 ++
rô
;

138 
R_node
->
	`gí_auth
(
tﬂuth
, 
a˘pos
, 
	`c⁄ã¡s
()

139 + (
R_Reque°_ªp
Ë+ 
	`ªp
().
comm™d_size
 + 
£qnos_size
 + 
authítiˇti⁄_off£t
, 
º
, 
id
, 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), 
ôî©i⁄
);

140 
	`‰ì
(
tﬂuth
);

144 
R_node
->
	`gí_auth
((*)&(
	`ªp
().
ty≥
), (
uöt32_t
)+(
Seqno
)+(
Dige°
), 
	`c⁄ã¡s
()

145 + (
R_Reque°_ªp
Ë+ 
	`ªp
().
comm™d_size
 + 
£qnos_size
 + 
authítiˇti⁄_off£t
, 
º
, 
id
, 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), 
ôî©i⁄
);

147 
	}
}

149 
	gR_Reque°
::
	$c›y_authítiˇt‹s
(*
de°
)

151 
size
 = 
R_node
->
	`authítiˇt‹s_size
();

152 
	`mem˝y
(
de°
, 
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
, 
size
);

153  
size
;

154 
	}
}

156 
	gR_Reque°
::
	$∑tch_authítiˇt‹s_f‹_˛õ¡
(*
de°
, 
off£t
)

159 
pos
 = 
R_node
->
	`f
()-
off£t
;

160 
pos
 *(
R_UMAC_size
 + 
R_UN⁄˚_size
);

161 
pos
 +(
R_UN⁄˚_size
 + R_UNonce_size);

162 
	`mem˝y
(
de°
+
£qnos_size
+
pos
, 
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
+£qnos_size+pos, 
R_UMAC_size
);

163  
R_UMAC_size
;

164 
	}
}

166 
	gR_Reque°
::
	$ª∂a˚_authítiˇt‹s
(*
§c
)

168 
size
 = 
R_node
->
	`authítiˇt‹s_size
();

169 
	`mem˝y
(
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
, 
§c
, 
size
);

170 
	}
}

172 
	gR_Reque°
::
	$sw≠_£qno
(
Seqno
 
√w£qno
, Seqnÿ*
ﬁd£qno
)

174 i‡(
ﬁd£qno
Ë*ﬁd£qnÿ
	`ªp
().
£qno
;

175 
	`ªp
().
£qno
 = 
√w£qno
;

176 
	}
}

178 
Seqno
 
	gR_Reque°
::
	$gë_°‹ed_£qno
(
ödex
)

180 
Seqno
 
s
;

181 
	`mem˝y
(&
s
, 
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
+(
Seqno
)*
ödex
, (Seqno));

182  
s
;

183 
	}
}

185 
	gR_Reque°
::
	$£t_°‹ed_£qno
(
ödex
, 
Seqno
 
s
)

187 
	`mem˝y
(
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
+(
Seqno
)*
ödex
, &
s
, (Seqno));

188 
	}
}

190 
	gR_Reque°
::
	$rﬁl_°‹ed_£qno
()

192 
	`mem˝y
(
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
,

193 
	`c⁄ã¡s
()+(
R_Reque°_ªp
)+
	`ªp
().
comm™d_size
+(
Seqno
),

194 
£qnos_size
-(
Seqno
));

195 
	}
}

198 
boﬁ
 
	gR_Reque°
::
	$vîify_sim∂e
(*
authítiˇti⁄_off£t
, 
ôî©i⁄
)

200 
Dige°
 
d
;

201 
	`comp_dige°
(
d
);

203 i‡(
d
 !
	`ªp
().
od
)

205 
	`Ârötf
(
°dîr
, "Digest is different\n");

206  
Ál£
;

209 *
authítiˇti⁄_off£t
 = 0;

210 i‡(!
R_node
->
	`vîify_˛õ¡_auth
(R_node->
	`id
(), 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), (*)&(
	`ªp
().
ty≥
), (
uöt32_t
)+(
Seqno
)+(
Dige°
), 
	`c⁄ã¡s
(Ë+ (
R_Reque°_ªp
Ë+Ñï().
comm™d_size
+
£qnos_size
, 
authítiˇti⁄_off£t
, 
this
, 
ôî©i⁄
))

212 
	`Ârötf
(
°dîr
, "verify_client_authÑeturned false\n");

213  
Ál£
;

216  
åue
;

217 
	}
}

219 
boﬁ
 
	gR_Reque°
::
	$vîify
(*
authítiˇti⁄_off£t
, 
ôî©i⁄
)

221 
Dige°
 
d
;

222 
	`comp_dige°
(
d
);

224 i‡(
d
 !
	`ªp
().
od
)

226 
	`Ârötf
(
°dîr
, "Digest is different\n");

227  
Ál£
;

230 i‡(
	`is_b©ched
()) {

231 *
authítiˇti⁄_off£t
 = 0;

232 i‡(!
	`vîify_sim∂e
(
authítiˇti⁄_off£t
, 
ôî©i⁄
)) {

233 
	`Ârötf
(
°dîr
, "Verify_simple failed for carryingÑequest\n");

234  
Ál£
;

237 
boﬁ
 
ªtvÆ
 = 
åue
;

239 *
tﬂuth
 = (*)
	`mÆloc
(32*(
Dige°
)+(
uöt32_t
)+(
Seqno
));

240 *((
uöt32_t
*)
tﬂuth
Ë
	`ªp
().
ty≥
;

241 *((
Seqno
*)(
tﬂuth
+(
uöt32_t
))Ë
	`ªp
().
£qno
;

242 
a˘pos
 = (
uöt32_t
)+(
Seqno
);

244 
R_Reque°
::
Iãøt‹
 
rô
 = 
	`begö
();

245 
rô
 !
	`íd
()) {

246 i‡(
rô
.
d©a
.
ªq
 !rô.d©a.
‹eq
) {

247 
ao
 = 0;

248 
boﬁ
 
rv
 = 
rô
.
d©a
.
ªq
->
	`vîify_sim∂e
(&
ao
, 
ôî©i⁄
);

249 i‡(!
rv
) {

250 
	`Ârötf
(
°dîr
, "Vîify_sim∂êÁûed f‹ b©chedÑeque°áàödex %d\n", 
rô
.
d©a
.
ödex
);

251 
	`‰ì
(
tﬂuth
);

252  
Ál£
;

254 
ªtvÆ
 =ÑëvÆ && 
rv
;

256 
	`mem˝y
(
tﬂuth
+
a˘pos
, (*)&(
rô
.
d©a
.
ªq
->
	`ªp
().
od
), (
Dige°
));

257 
a˘pos
 +(
Dige°
);

259 ++
rô
;

262 
toskù
 = 0;

263 i‡(
ôî©i⁄
 =1 && 
R_node
->
	`di°™˚
(
	`ª∂iˇ_id
(), R_node->
	`id
()Ë< R_node->
	`f
()+1)

264 
toskù
 = 1;

265 i‡(!
R_node
->
	`vîify_b©ched_auth
(R_node->
	`id
(), 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), 
tﬂuth
, 
a˘pos
, 
	`c⁄ã¡s
(Ë+ (
R_Reque°_ªp
Ë+ 
	`ªp
().
comm™d_size
+
£qnos_size
, 
authítiˇti⁄_off£t
, 
this
, 
ôî©i⁄
, 
toskù
))

267 
	`Ârötf
(
°dîr
, "Verify_batched_authÑeturned false\n");

268 
	`‰ì
(
tﬂuth
);

269  
Ál£
;

271 
	`‰ì
(
tﬂuth
);

274 i‡(!
R_node
->
	`vîify_auth
(R_node->
	`id
(), 
	`ª∂iˇ_id
(), 
	`˛õ¡_id
(), (*)&(
	`ªp
().
ty≥
), (
uöt32_t
)+(
Seqno
)+(
Dige°
), 
	`c⁄ã¡s
(Ë+ (
R_Reque°_ªp
Ë+Ñï().
comm™d_size
+
£qnos_size
, 
authítiˇti⁄_off£t
, 
this
, 
ôî©i⁄
))

276 
	`Ârötf
(
°dîr
, "Verify_authÑeturned false\n");

277  
Ál£
;

281  
åue
;

282 
	}
}

284 
boﬁ
 
	gR_Reque°
::
	$c⁄vît
(
R_Mesßge
 *
m1
, 
R_Reque°
 *&
m2
)

287 i‡(!
m1
->
	`has_èg
(
R_Reque°_èg
, (
R_Reque°_ªp
)))

289  
Ál£
;

295 
m2
 = 
√w
 
	`R_Reque°
(
m1
->
	`size
());

296 
	`mem˝y
(
m2
->
	`c⁄ã¡s
(), 
m1
->c⁄ã¡s(), m1->
	`size
());

299 
dñëe
 
m1
;

300 
m2
->
	`åim
();

301  
åue
;

302 
	}
}

305 
	gR_Reque°
::
Iãøt‹
& 
R_Reque°
::Iãøt‹::
›î©‹
++()

310 
R_Reque°_ªp
 *
Ω
;

311 
	gªque°_size
 = 0;

312 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
) {

313 
ªque°_size
 = 
d©a
.
ªq
->
size
();

316 i‡(!
	gd©a
.
	g‹eq
->
is_b©ched
()

317 || 
	gd©a
.
	goff£t
+
	gªque°_size
 >
d©a
.
‹eq
->
size
()

318 || 
d©a
.
‹eq
->
size
(Ë<
ALIGNED_SIZE
((
R_Reque°_ªp
)+d©a.‹eq->
ªp
().
comm™d_size
+
R_node
->
authítiˇt‹s_size
())) {

320 
d©a
.
ödex
 = -1;

321 
	gd©a
.
	goff£t
 = -1;

322 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
)

323 
dñëe
 
d©a
.
ªq
;

324 
	gd©a
.
	gªq
 = 
NULL
;

325  *
	gthis
;

328 i‡(
	gd©a
.
	gödex
 == 0) {

329 *
±r
 = 
d©a
.
‹eq
->
c⁄ã¡s
()+
ALIGNED_SIZE
((
R_Reque°_ªp
)+d©a.‹eq->
ªp
().
comm™d_size
+
R_node
->
authítiˇt‹s_size
());

330 
	gΩ
 = (
R_Reque°_ªp
*)
±r
;

332 
	gΩ
 = (
R_Reque°_ªp
*)(
d©a
.
‹eq
->
c⁄ã¡s
()+d©a.
off£t
+d©a.
ªq
->
size
());

334 
	gsize
 = 
Ω
->
size
;

336 
th_as£π
(
size
 != 0, "Size shouldÇot be 0");

337 
R_Reque°
 *
	g∫
 = 
√w
 R_Reque°(
Ω
);

340 i‡(
	gd©a
.
	gödex
 == 0) {

341 
d©a
.
off£t
 = 
ALIGNED_SIZE
((
R_Reque°_ªp
)+d©a.
‹eq
->
ªp
().
comm™d_size
+
R_node
->
authítiˇt‹s_size
());

343 
	gd©a
.
	goff£t
 +
ALIGNED_SIZE
(
d©a
.
ªq
->
size
());

345 i‡(
	gd©a
.
	gªq
 && d©a.ªq !
d©a
.
‹eq
)

346 
dñëe
 
d©a
.
ªq
;

347 
	gd©a
.
	gªq
 = 
∫
;

348 
	gd©a
.
	gödex
++;

349  *
	gthis
;

	@R_Request.h

1 #i‚de‡
_R_Reque°_h


2 
	#_R_Reque°_h
 1

	)

4 
	~"R_Mesßge.h
"

5 
	~"ty≥s.h
"

6 
	~"R_Rïly.h
"

8 
˛ass
 
	gDige°
;

9 
˛ass
 
	gR_PröcùÆ
;

10 
˛ass
 
	gR_ACK
;

15 
	gR_Reque°_ªp
: 
public
 
R_Mesßge_ªp
 {

17 
uöt32_t
 
ty≥
;

18 
Dige°
 
	god
;

19 
Seqno
 
	g£qno
;

21 
	gcid
;

22 
Reque°_id
 
	grid
;

23 
	gª∂iˇ_id
;

25 
	gcomm™d_size
;

33 ˛as†
	cR_Reque°
: 
public
 
R_Mesßge
 {

41 
public
:

42 
R_Reque°
(
sz
=
R_Max_mesßge_size
);

43 
R_Reque°
(
Reque°_id
 
r
);

44 
R_Reque°
(
R_Reque°_ªp
 *
c⁄ã¡s
);

52 ~
R_Reque°
();

54 c⁄° 
	mbig_ªq_thªsh
 = 0;

55 * 
°‹e_comm™d
(&
max_Àn
);

61 
£t_£qno
(
Seqno
 
£q
);

63 
	mSeqno
& 
	$£qno
(Ëc⁄° {  
	`ªp
().
£qno
; };

64 
boﬁ
 
	$is_£quí˚d
(Ëc⁄° {  
	`ªp
().
£qno
 !0; 
	}
};

65 
	$£t_ª∂iˇ
(
id
Ë{ 
	`ªp
().
ª∂iˇ_id
 = id; 
	}
};

67 
	$£t_ty≥
(
boﬁ
 
is_ack
Ë{ 
	`ªp
().
ty≥
 = (is_ack =
åue
)?0xdódbìf:0; 
	}
};

69 
föÆize
(
a˘_Àn
, 
boﬁ
 
ªad_⁄ly
);

71 
authítiˇã_f‹_˛õ¡
(, , *, 
R_Rïly_ªp
*, );

72 
authítiˇã
(
id
, 
authítiˇti⁄_off£t
, 
R_Rïly_ªp
 *
º
, 
ôî©i⁄
);

78 
boﬁ
 
vîify_sim∂e
(*
authítiˇti⁄_off£t
, 
ôî©i⁄
);

79 
boﬁ
 
vîify
(*
authítiˇti⁄_off£t
, 
ôî©i⁄
);

81 
∑tch_authítiˇt‹s_f‹_˛õ¡
(*
de°
, 
off£t
);

82 
c›y_authítiˇt‹s
(*
de°
);

84 
ª∂a˚_authítiˇt‹s
(*
§c
);

86 
sw≠_£qno
(
Seqno
 
√w£qno
, Seqnÿ*
ﬁd£qno
);

87 
Seqno
 
gë_°‹ed_£qno
(
ödex
);

88 
£t_°‹ed_£qno
(
ödex
, 
Seqno
 
s
);

89 
rﬁl_°‹ed_£qno
();

91 
	$˛õ¡_id
() const;

92 
	$ª∂iˇ_id
() const;

95 
Reque°_id
& 
	`ªque°_id
();

98 * 
	`comm™d
(&
Àn
);

102 *
	`MACs
();

108 
boﬁ
 
	$is_ªad_⁄ly
() const;

112 
	`£t_b©ched
();

115 
boﬁ
 
	$is_b©ched
() const;

118 
	`un£t_piggybacked
();

119 
	`£t_piggybacked
();

122 
boﬁ
 
	$is_piggybacked
() const;

125 
boﬁ
 
	`c⁄vît
(
R_Mesßge
 *
m1
, 
R_Reque°
 *&
m2
);

129 
Dige°
& 
	$dige°
() const {

130  
	`ªp
().
od
;

131 
	}
}

133 
	g£qnos_size
;

135 
	g¥iv©e
:

136 
R_Reque°_ªp
 &
	$ªp
() const;

139 
	`comp_dige°
(
Dige°
& 
d
);

142 ˛as†
	cIãøt‹D©a
 {

143 
public
:

144 
R_Reque°
 *
‹eq
;

145 
R_Reque°
 *
ªq
;

146 
ödex
;

147 
off£t
;

148 
boﬁ
 
›î©‹
==(c⁄° 
Iãøt‹D©a
& 
o
) {

149  (
o
.
‹eq
 =‹eq)&&(o.
ªq
=Ùeq)&&(o.
ödex
==ödex)&&(o.
off£t
==offset); }

150 
	}
};

152 
	gpublic
:

153 ˛as†
	cIãøt‹
 {

154 
public
:

155 
Iãøt‹
(
Iãøt‹D©a
 
d
) {

156 
d©a
 = 
d
;

158 ~
Iãøt‹
() {}

159 
boﬁ
 
	g›î©‹
==(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{  (
d©a
==other.data); }

160 
boﬁ
 
	g›î©‹
!=(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{  !(
d©a
==other.data); }

161 
	gIãøt‹
& 
	g›î©‹
=(c⁄° 
Iãøt‹
& 
Ÿhî
) {

162 
d©a
 = 
Ÿhî
.data;

163  *
	gthis
;

165 
	gIãøt‹
& 
	g›î©‹
++();

167 
Iãøt‹D©a
 
	gd©a
;

169 
Iãøt‹
 
	$begö
() {

170 
Iãøt‹D©a
 
dt
;

171 
dt
.
‹eq
 = dt.
ªq
 = 
this
;

172 
dt
.
ödex
 = 0;

173 
dt
.
off£t
 = 0;

174  
	`Iãøt‹
(
dt
);

175 
	}
}

176 
Iãøt‹
 
	$íd
() {

177 
Iãøt‹D©a
 
dt
;

178 
dt
.
‹eq
 = 
this
;

179 
dt
.
ªq
 = 
NULL
;

180 
dt
.
ödex
 = -1;

181 
dt
.
off£t
 = -1;

182  
	`Iãøt‹
(
dt
);

183 
	}
}

186 
ölöe
 
	gR_Reque°_ªp
& 
	gR_Reque°
::
	$ªp
() const {

187 
	`th_as£π
(
	`ALIGNED
(
msg
), "ImproperlyálignedÖointer");

188  *((
R_Reque°_ªp
*Ë
msg
);

189 
	}
}

191 
ölöe
 
	gR_Reque°
::
	$˛õ¡_id
() const {

193  
	`ªp
().
cid
;

194 
	}
}

196 
ölöe
 
	gR_Reque°
::
	$ª∂iˇ_id
() const {

198  
	`ªp
().
ª∂iˇ_id
;

199 
	}
}

201 
ölöe
 
	gReque°_id
 &
	gR_Reque°
::
	$ªque°_id
() {

202  
	`ªp
().
rid
;

203 
	}
}

205 
ölöe
 *
	gR_Reque°
::
	$comm™d
(&
Àn
) {

206 
Àn
 = 
	`ªp
().
comm™d_size
;

207  
	`c⁄ã¡s
(Ë+ (
R_Reque°_ªp
);

208 
	}
}

210 
ölöe
 
boﬁ
 
	gR_Reque°
::
	$is_ªad_⁄ly
() const {

212  
	`ªp
().
exåa
 & 1;

213 
	}
}

215 
ölöe
 *
	gR_Reque°
::
	$MACs
() {

216  
	`c⁄ã¡s
(Ë+ (
R_Reque°_ªp
Ë+ 
	`ªp
().
comm™d_size
 + 
£qnos_size
;

217 
	}
}

219 
ölöe
 
	gR_Reque°
::
	$£t_b©ched
() {

220 
	`ªp
().
exåa
 =Ñï().exå®| 
R_MESSAGE_BATCH
;

221 
	}
}

223 
ölöe
 
boﬁ
 
	gR_Reque°
::
	$is_b©ched
() const {

224  
	`ªp
().
exåa
 & 
R_MESSAGE_BATCH
;

225 
	}
}

227 
ölöe
 
	gR_Reque°
::
	$un£t_piggybacked
() {

228 
	`ªp
().
exåa
 =Ñï().exå®&& ~
R_MESSAGE_PIGGYBACKED
;

229 
	}
}

231 
ölöe
 
	gR_Reque°
::
	$£t_piggybacked
() {

232 
	`ªp
().
exåa
 =Ñï().exå®| 
R_MESSAGE_PIGGYBACKED
;

233 
	}
}

235 
ölöe
 
boﬁ
 
	gR_Reque°
::
	$is_piggybacked
() const {

236  
	`ªp
().
exåa
 & 
R_MESSAGE_PIGGYBACKED
;

237 
	}
}

	@SuperFastHash.cc

1 
	~<ty≥s.h
>

2 
	~<°döt.h
>

3 #unde‡
gë16bôs


4 #i‡(
deföed
(
__GNUC__
Ë&& deföed(
__i386__
)Ë|| deföed(
__WATCOMC__
) \

5 || 
deföed
(
_MSC_VER
Ë|| deföed (
__BORLANDC__
Ë|| 
	$deföed
 (
__TURBOC__
)

6 
	#gë16bôs
(
d
Ë(*((c⁄° 
uöt16_t
 *Ë(d)))

	)

9 #i‡!
	`deföed
 (
gë16bôs
)

10 
	#gë16bôs
(
d
Ë((((
uöt32_t
)(((c⁄° 
uöt8_t
 *)(d))[1])) << 8)\

11 +(
uöt32_t
)(((c⁄° 
uöt8_t
 *)(
d
))[0]Ë)

	)

14 
uöt32_t
 
	$Su≥rFa°Hash
 (c⁄° * 
d©a
, 
Àn
) {

15 
uöt32_t
 
hash
 = 
Àn
, 
tmp
;

16 
ªm
;

18 i‡(
Àn
 <0 || 
d©a
 =
NULL
)  0;

20 
ªm
 = 
Àn
 & 3;

21 
Àn
 >>= 2;

24 ;
Àn
 > 0;Üen--) {

25 
hash
 +
	`gë16bôs
 (
d©a
);

26 
tmp
 = (
	`gë16bôs
 (
d©a
+2Ë<< 11Ë^ 
hash
;

27 
hash
 = (hash << 16Ë^ 
tmp
;

28 
d©a
 +2* (
uöt16_t
);

29 
hash
 += hash >> 11;

33 
ªm
) {

34 3: 
hash
 +
	`gë16bôs
 (
d©a
);

35 
hash
 ^= hash << 16;

36 
hash
 ^
d©a
[ (
uöt16_t
)] << 18;

37 
hash
 += hash >> 11;

39 2: 
hash
 +
	`gë16bôs
 (
d©a
);

40 
hash
 ^= hash << 11;

41 
hash
 += hash >> 17;

43 1: 
hash
 +*
d©a
;

44 
hash
 ^= hash << 10;

45 
hash
 += hash >> 1;

49 
hash
 ^= hash << 3;

50 
hash
 += hash >> 5;

51 
hash
 ^= hash << 4;

52 
hash
 += hash >> 17;

53 
hash
 ^= hash << 25;

54 
hash
 += hash >> 6;

56  
hash
;

57 
	}
}

	@SuperFastHash.h

1 #i‚de‡
_SUPERFASTHASH_


2 
	#_SUPERFASTHASH_


	)

4 
uöt32_t
 
Su≥rFa°Hash
 (c⁄° * 
d©a
, 
Àn
);

6 
	gãm∂©e
<
˛ass
 
	gT
>

7 
	sSu≥rFa°Hashî
{

8 
size_t
 
›î©‹
()(c⁄° 
	mT
& 
	mkey_vÆue
) const {

9  
Su≥rFa°Hash
((c⁄° *)&
key_vÆue
, (
T
));

	@ring_libbyz.cc

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<sig«l.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/waô.h
>

6 
	~<±hªad.h
>

8 
	~"rög_libbyz.h
"

10 
	~"R_Clõ¡.h
"

11 
	~"R_Rïliˇ.h
"

12 
	~"R_Reque°.h
"

13 
	~"R_Rïly.h
"

15 
	~"¸y±.h
"

19 
R_Clõ¡
 *
	gr_˛õ¡
;

21 *
R_ª∂iˇ_h™dÀr
(*
o
);

22 *
R_˛õ¡_h™dÀr
(*
o
);

23 
	$waô_chld
(
sig
)

26 
	`waôpid
(-1, 0, 
WNOHANG
) > 0)

28 
	}
}

30 
	$rög_Æloc_ªque°
(
Byz_ªq
 *
ªq
)

32 
R_Reque°
 *
ªque°
 = 
√w
 
	`R_Reque°
((
Reque°_id
) 0);

33 i‡(
ªque°
 == 0)

37 
Àn
;

38 
ªq
->
c⁄ã¡s
 = 
ªque°
->
	`°‹e_comm™d
(
Àn
);

39 
ªq
->
size
 = 
Àn
;

40 
ªq
->
›aque
 = (*Ë
ªque°
;

42 
	}
}

44 
	$rög_‰ì_ªque°
(
Byz_ªq
 *
ªq
)

46 
R_Reque°
 *
ªque°
 = (R_Reque° *Ë
ªq
->
›aque
;

47 
dñëe
 
ªque°
;

48 
	}
}

50 
	$rög_‰ì_ª∂y
(
Byz_ªp
 *
ªp
)

52 
R_Rïly
 *
ª∂y
 = (R_Rïly *Ë
ªp
->
›aque
;

53 
dñëe
 
ª∂y
;

54 
	}
}

56 
rög_öô_ª∂iˇ
(*
ho°_«me
, *
c⁄f
, *
c⁄f_¥iv
, (*
exec
)(
Byz_ªq
*, 
Byz_ªp
*, 
Byz_buf„r
*,

57 , 
boﬁ
), 
p‹t
)

60 
siga˘i⁄
 
a˘
;

61 
a˘
.
ß_h™dÀr
 = 
waô_chld
;

62 
	`sigem±y£t
(&
a˘
.
ß_mask
);

63 
a˘
.
ß_Êags
 = 0;

64 
	`siga˘i⁄
(
SIGCHLD
, &
a˘
, 
NULL
);

67 
	`§™d48
(
	`gëpid
());

73 
	`Ârötf
(
°dîr
, "*******************************************\n");

74 
	`Ârötf
(
°dîr
, "* RINGÑeplicaÖrotocol *\n");

75 
	`Ârötf
(
°dîr
, "*******************************************\n");

77 
FILE
 *
c⁄fig_fûe_rög
 = 
	`f›í
(
c⁄f
, "r");

78 i‡(
c⁄fig_fûe_rög
 == 0)

80 
	`Ârötf
(
°dîr
, "libmodular_BFT: Invalid configuration file %s \n",

81 
c⁄f
);

85 
FILE
 *
c⁄fig_¥iv_fûe
 = 
	`f›í
(
c⁄f_¥iv
, "r");

86 i‡(
c⁄fig_¥iv_fûe
 == 0)

88 
	`Ârötf
(
°dîr
, "libmoduœr_BFT: InvÆidÖriv©êc⁄figuøti⁄ fûê%†\n", 
c⁄f_¥iv
);

93 
R_ª∂iˇ
 = 
√w
 
	`R_Rïliˇ
(
c⁄fig_fûe_rög
, 
c⁄fig_¥iv_fûe
, 
ho°_«me
, 
p‹t
);

94 
R_node
 = 
R_ª∂iˇ
;

97 
R_ª∂iˇ
->
	`ªgi°î_exec
(
exec
);

100 
±hªad_t
 
R_ª∂iˇ_h™dÀr_thªad
;

101 i‡(
	`±hªad_¸óã
(&
R_ª∂iˇ_h™dÀr_thªad
, 0, &
R_ª∂iˇ_h™dÀr
,

102 (*Ë
R_ª∂iˇ
) != 0)

104 
	`Ârötf
(
°dîr
, "FailedÅo createÅhe R_replicaÅhread\n");

105 
	`exô
(1);

110 
	}
}

112 *
	$R_ª∂iˇ_h™dÀr
(*
o
)

114 **
o2
 = (**Ë
o
;

115 
R_Rïliˇ
 &
r
 = (R_Rïliˇ&Ë(*
o2
);

117 
r
.
	`do_ªcv_‰om_queue
();

124 
	}
}

126 
	$rög_öô_˛õ¡
(*
ho°_«me
, *
c⁄f
, 
p‹t
)

129 
siga˘i⁄
 
a˘
;

130 
a˘
.
ß_h™dÀr
 = 
waô_chld
;

131 
	`sigem±y£t
(&
a˘
.
ß_mask
);

132 
a˘
.
ß_Êags
 = 0;

133 
	`siga˘i⁄
(
SIGCHLD
, &
a˘
, 
NULL
);

136 
	`§™d48
(
	`gëpid
());

139 
	`øndom_öô
();

141 
	`Ârötf
(
°dîr
, "******************************************\n");

142 
	`Ârötf
(
°dîr
, "* RING clientÖrotocol *\n");

143 
	`Ârötf
(
°dîr
, "******************************************\n");

145 
FILE
 *
c⁄fig_fûe_rög
 = 
	`f›í
(
c⁄f
, "r");

146 i‡(
c⁄fig_fûe_rög
 == 0)

148 
	`Ârötf
(
°dîr
, "libmodular_BFT: Invalid configuration file %s \n",

149 
c⁄f
);

153 
r_˛õ¡
 = 
√w
 
	`R_Clõ¡
(
c⁄fig_fûe_rög
, 
ho°_«me
, 
p‹t
);

156 
	}
}

158 
	$rög_£nd_ªque°
(
Byz_ªq
 *
ªq
, 
size
, 
boﬁ
 
ro
)

160 
boﬁ
 
ªtvÆ
;

161 
R_Reque°
 *
ªque°
 = (R_Reque° *Ë
ªq
->
›aque
;

162 
ªque°
->
	`ªque°_id
(Ë
r_˛õ¡
->
	`gë_rid
();

163 
ªque°
->
	`£t_ª∂iˇ
((
r_˛õ¡
->
	`id
()+0)%r_˛õ¡->
	`n
());

165 
ªque°
->
	`föÆize
(
size
, 
ro
);

166 
ªque°
->
	`authítiˇã
(-1, 0, 
NULL
, 
åue
);

168 
ªtvÆ
 = 
r_˛õ¡
->
	`£nd_ªque°
(
ªque°
, 
size
, 
ro
);

169  (
ªtvÆ
) ? 0 : -1;

170 
	}
}

172 
	$rög_övoke
(
Byz_ªq
 *
ªq
, 
Byz_ªp
 *
ªp
, 
size
, 
boﬁ
 
ro
)

174 i‡(
	`rög_£nd_ªque°
(
ªq
, 
size
, 
ro
) == -1)

179 i‡(
	`rög_ªcv_ª∂y
(
ªp
) == 0)

185 
	}
}

187 
	$rög_ªcv_ª∂y
(
Byz_ªp
 *
ªp
)

190 
R_Rïly
 *
ª∂y
 = 
r_˛õ¡
->
	`ªcv_ª∂y
();

191 i‡(
ª∂y
 =
NULL
)

196 
ªp
->
c⁄ã¡s
 = 
ª∂y
->
	`ª∂y
‘ï->
size
);

197 
ªp
->
›aque
 = 
ª∂y
;

201 
	}
}

	@ring_libbyz.h

1 #i‚de‡
_RING_LIBBYZ_H


2 
	#_RING_LIBBYZ_H


	)

4 #ifde‡
__˝lu•lus


10 
	~<°dio.h
>

12 
	~"ty≥s.h
"

13 
	~"Tø˚s.h
"

14 
	~"libbyz.h
"

16 #ifde‡
__˝lu•lus


20 
rög_Æloc_ªque°
(
Byz_ªq
 *
ªq
);

27 
rög_‰ì_ªque°
(
Byz_ªq
 *
ªq
);

32 
rög_‰ì_ª∂y
(
Byz_ªp
 *
ªp
);

37 
rög_öô_˛õ¡
(*
ho°_«me
, *
c⁄f
, 
p‹t
);

43 
rög_öô_ª∂iˇ
(*
ho°_«me
, *
c⁄f
, *
c⁄f_¥iv
, (*
exec
)(
Byz_ªq
*, 
Byz_ªp
*, 
Byz_buf„r
*,

44 , 
boﬁ
), 
p‹t
);

136 
rög_£nd_ªque°
(
Byz_ªq
 *
ªq
, 
size
, 
boﬁ
 
ro
);

147 #ifde‡
__˝lu•lus


148 
rög_ªcv_ª∂y
(
Byz_ªp
 *
ªp
);

159 
rög_övoke
(
Byz_ªq
 *
ªq
, 
Byz_ªp
 *
ªp
, 
size
, 
boﬁ
 
ro
);

173 #ifde‡
__˝lu•lus


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/crypt.h

25 #i‚de‡
_CRYPT_H


26 
	#_CRYPT_H
 1

	)

28 
	~<„©uªs.h
>

30 
__BEGIN_DECLS


33 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

34 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

37 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

43 #ifde‡
__USE_GNU


46 
	s¸y±_d©a


48 
keysched
[16 * 8];

49 
sb0
[32768];

50 
sb1
[32768];

51 
sb2
[32768];

52 
sb3
[32768];

54 
¸y±_3_buf
[14];

55 
cuºít_ß…
[2];

56 
cuºít_ß…bôs
;

57 
dúe˘i⁄
, 
öôülized
;

60 *
	$¸y±_r
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
,

61 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

62 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

64 
	$£tkey_r
 (
__c⁄°
 *
__key
,

65 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

66 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

68 
	$í¸y±_r
 (*
__block
, 
__edÊag
,

69 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

73 
__END_DECLS


	@/usr/include/google/dense_hash_map

83 #i‚de‡
_DENSE_HASH_MAP_H_


84 
	#_DENSE_HASH_MAP_H_


	)

86 
	~<googÀ/•¨£hash/c⁄fig.h
>

87 
	~<°dio.h
>

88 
	~<Æg‹ôhm
>

89 
	~<fun˘i⁄Æ
>

90 
	~<mem‹y
>

91 
	~<googÀ/•¨£hash/hash_fun.h
>

92 
	~<googÀ/•¨£hash/dí£hashèbÀ.h
>

95 
_START_GOOGLE_NAMESPACE_


97 
usög
 
	gSTL_NAMESPACE
::
∑ú
;

99 
	gãm∂©e
 <
˛ass
 
	gKey
, cœs†
	gT
,

100 
˛ass
 
	gHashF˙
 = 
HASH_NAMESPACE
::
hash
<
Key
>,

101 
˛ass
 
	gEquÆKey
 = 
STL_NAMESPACE
::
equÆ_to
<
Key
>,

102 
˛ass
 
	gAŒoc
 = 
STL_NAMESPACE
::
Æloˇt‹
<
T
> >

103 ˛as†
	cdí£_hash_m≠
 {

104 
¥iv©e
:

106 
	sSñe˘Key
 {

107 c⁄° 
Key
& 
›î©‹
()(c⁄° 
∑ú
<c⁄° Key, 
T
>& 
p
) const {

108  
p
.
fú°
;

113 
	gdí£_hashèbÀ
<
	t∑ú
<c⁄° 
	tKey
, 
	tT
>, Key, 
	tHashF˙
,

114 
	tSñe˘Key
, 
	tEquÆKey
, 
	tAŒoc
> 
	tht
;

115 
ht
 
	gªp
;

117 
	gpublic
:

118 
ty≥«me
 
	tht
::
	tkey_ty≥
 key_type;

119 
T
 
	td©a_ty≥
;

120 
T
 
	tm≠≥d_ty≥
;

121 
ty≥«me
 
	tht
::
	tvÆue_ty≥
 value_type;

122 
ty≥«me
 
	tht
::
	thashî
 hasher;

123 
ty≥«me
 
	tht
::
	tkey_equÆ
 key_equal;

125 
ty≥«me
 
	tht
::
	tsize_ty≥
 size_type;

126 
ty≥«me
 
	tht
::
	tdif„ªn˚_ty≥
 difference_type;

127 
ty≥«me
 
	tht
::
	tpoöãr
Öointer;

128 
ty≥«me
 
	tht
::
	tc⁄°_poöãr
 const_pointer;

129 
ty≥«me
 
	tht
::
	tª„ªn˚
Ñeference;

130 
ty≥«me
 
	tht
::
	tc⁄°_ª„ªn˚
 const_reference;

132 
ty≥«me
 
	tht
::
	tôî©‹
 iterator;

133 
ty≥«me
 
	tht
::
	tc⁄°_ôî©‹
 const_iterator;

136 
ôî©‹
 
	$begö
(Ë{  
ªp
.
	`begö
(); 
	}
}

137 
ôî©‹
 
	$íd
(Ë{  
ªp
.
	`íd
(); 
	}
}

138 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
ªp
.
	`begö
(); 
	}
}

139 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
ªp
.
	`íd
(); 
	}
}

143 
hashî
 
	$hash_fun˘
(Ëc⁄° {  
ªp
.
	`hash_fun˘
(); 
	}
}

144 
key_equÆ
 
	$key_eq
(Ëc⁄° {  
ªp
.
	`key_eq
(); 
	}
}

148 
ex∂icô
 
dí£_hash_m≠
(
size_ty≥
 
n
 = 0,

149 c⁄° 
hashî
& 
hf
 = hasher(),

150 c⁄° 
key_equÆ
& 
eql
 = 
	$key_equÆ
())

151 : 
	$ªp
(
n
, 
hf
, 
eql
Ë{ 
	}
}

153 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

154 
dí£_hash_m≠
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
,

155 
size_ty≥
 
n
 = 0,

156 c⁄° 
hashî
& 
hf
 = hasher(),

157 c⁄° 
key_equÆ
& 
eql
 = 
	$key_equÆ
()) {

158 
ªp
.
	`ö£π
(
f
, 
l
);

159 
	}
}

164 
	$˛ór
(Ë{ 
ªp
.
	`˛ór
(); 
	}
}

165 
	$sw≠
(
dí£_hash_m≠
& 
hs
Ë{ 
ªp
.
	`sw≠
(hs.ªp); 
	}
}

169 
size_ty≥
 
	$size
(Ëc⁄° {  
ªp
.
	`size
(); 
	}
}

170 
size_ty≥
 
	$max_size
(Ëc⁄° {  
ªp
.
	`max_size
(); 
	}
}

171 
boﬁ
 
	$em±y
(Ëc⁄° {  
ªp
.
	`em±y
(); 
	}
}

172 
size_ty≥
 
	$buckë_cou¡
(Ëc⁄° {  
ªp
.
	`buckë_cou¡
(); 
	}
}

173 
size_ty≥
 
	$max_buckë_cou¡
(Ëc⁄° {  
ªp
.
	`max_buckë_cou¡
(); 
	}
}

175 
	$ªsize
(
size_ty≥
 
höt
Ë{ 
ªp
.
	`ªsize
(höt); 
	}
}

179 
ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
Ë{  
ªp
.
	`föd
(key); 
	}
}

180 
c⁄°_ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
Ëc⁄° {  
ªp
.
	`föd
(key); 
	}
}

182 
	gd©a_ty≥
& 
	g›î©‹
[](c⁄° 
	gkey_ty≥
& 
	gkey
) {

183 
ôî©‹
 
	gô
 = 
föd
(
key
);

184 i‡(
	gô
 !
íd
()) {

185  
ô
->
£c⁄d
;

187  
ö£π
(
vÆue_ty≥
(
key
, 
d©a_ty≥
())).
	gfú°
->
	g£c⁄d
;

191 
size_ty≥
 
	$cou¡
(c⁄° 
key_ty≥
& 
key
Ëc⁄° {  
ªp
.
	`cou¡
(key); 
	}
}

193 
	g∑ú
<
	gôî©‹
, iãøt‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) {

194  
ªp
.
	`equÆ_ønge
(
key
);

195 
	}
}

196 
	g∑ú
<
	gc⁄°_ôî©‹
, c⁄°_ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) const {

197  
ªp
.
	`equÆ_ønge
(
key
);

198 
	}
}

201 
	g∑ú
<
	gôî©‹
, 
	gboﬁ
> 
	$ö£π
(c⁄° 
vÆue_ty≥
& 
obj
Ë{  
ªp
.
	`ö£π
(obj); 
	}
}

202 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

203 
	$ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
Ë{ 
ªp
.
	`ö£π
(f,Ü); 
	}
}

204 
	$ö£π
(
c⁄°_ôî©‹
 
f
, c⁄°_ôî©‹ 
l
Ë{ 
ªp
.
	`ö£π
(f,Ü); 
	}
}

206 
ôî©‹
 
	$ö£π
(
ôî©‹
, c⁄° 
vÆue_ty≥
& 
obj
Ë{  
	`ö£π
(obj).
fú°
; 
	}
}

213 
	$£t_em±y_key
(c⁄° 
key_ty≥
& 
key
) {

214 
ªp
.
	`£t_em±y_key
(
	`vÆue_ty≥
(
key
, 
	`d©a_ty≥
()));

215 
	}
}

216 
	$£t_dñëed_key
(c⁄° 
key_ty≥
& 
key
) {

217 
ªp
.
	`£t_dñëed_key
(
	`vÆue_ty≥
(
key
, 
	`d©a_ty≥
()));

218 
	}
}

219 
	$˛ór_dñëed_key
(Ë{ 
ªp
.
	`˛ór_dñëed_key
(); 
	}
}

222 
size_ty≥
 
	$îa£
(c⁄° 
key_ty≥
& 
key
Ë{  
ªp
.
	`îa£
(key); 
	}
}

223 
	$îa£
(
ôî©‹
 
ô
Ë{ 
ªp
.
	`îa£
(ô); 
	}
}

224 
	$îa£
(
ôî©‹
 
f
, iãøt‹ 
l
Ë{ 
ªp
.
	`îa£
(f,Ü); 
	}
}

228 
boﬁ
 
	g›î©‹
==(c⁄° 
dí£_hash_m≠
& 
hs
Ëc⁄° {  
ªp
 == hs.rep; }

229 
boﬁ
 
	g›î©‹
!=(c⁄° 
dí£_hash_m≠
& 
hs
Ëc⁄° {  
ªp
 != hs.rep; }

233 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
Ë{  
ªp
.
	`wrôe_mëad©a
(Â); 
	}
}

234 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
Ë{  
ªp
.
	`ªad_mëad©a
(Â); 
	}
}

235 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
Ë{  
ªp
.
	`wrôe_n›oöãr_d©a
(Â); 
	}
}

236 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
Ë{  
ªp
.
	`ªad_n›oöãr_d©a
(Â); 
	}
}

240 
	gãm∂©e
 <
˛ass
 
	gKey
, cœs†
	gT
, cœs†
	gHashF˙
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

241 
ölöe
 
sw≠
(
dí£_hash_m≠
<
Key
, 
T
, 
HashF˙
, 
EquÆKey
, 
AŒoc
>& 
hm1
,

242 
dí£_hash_m≠
<
Key
, 
T
, 
HashF˙
, 
EquÆKey
, 
AŒoc
>& 
hm2
) {

243 
	ghm1
.
sw≠
(
hm2
);

246 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/google/sparse_hash_map

75 #i‚de‡
_SPARSE_HASH_MAP_H_


76 
	#_SPARSE_HASH_MAP_H_


	)

78 
	~<googÀ/•¨£hash/c⁄fig.h
>

79 
	~<°dio.h
>

80 
	~<Æg‹ôhm
>

81 
	~<fun˘i⁄Æ
>

82 
	~<mem‹y
>

83 
	~<googÀ/•¨£hash/hash_fun.h
>

84 
	~<googÀ/•¨£hash/•¨£hashèbÀ.h
>

87 
_START_GOOGLE_NAMESPACE_


89 
usög
 
	gSTL_NAMESPACE
::
∑ú
;

91 
	gãm∂©e
 <
˛ass
 
	gKey
, cœs†
	gT
,

92 
˛ass
 
	gHashF˙
 = 
HASH_NAMESPACE
::
hash
<
Key
>,

93 
˛ass
 
	gEquÆKey
 = 
STL_NAMESPACE
::
equÆ_to
<
Key
>,

94 
˛ass
 
	gAŒoc
 = 
STL_NAMESPACE
::
Æloˇt‹
<
T
> >

95 ˛as†
	c•¨£_hash_m≠
 {

96 
¥iv©e
:

98 
	sSñe˘Key
 {

99 c⁄° 
Key
& 
›î©‹
()(c⁄° 
∑ú
<c⁄° Key, 
T
>& 
p
) const {

100  
p
.
fú°
;

105 
	g•¨£_hashèbÀ
<
	t∑ú
<c⁄° 
	tKey
, 
	tT
>, Key, 
	tHashF˙
,

106 
	tSñe˘Key
, 
	tEquÆKey
, 
	tAŒoc
> 
	tht
;

107 
ht
 
	gªp
;

109 
	gpublic
:

110 
ty≥«me
 
	tht
::
	tkey_ty≥
 key_type;

111 
T
 
	td©a_ty≥
;

112 
T
 
	tm≠≥d_ty≥
;

113 
ty≥«me
 
	tht
::
	tvÆue_ty≥
 value_type;

114 
ty≥«me
 
	tht
::
	thashî
 hasher;

115 
ty≥«me
 
	tht
::
	tkey_equÆ
 key_equal;

117 
ty≥«me
 
	tht
::
	tsize_ty≥
 size_type;

118 
ty≥«me
 
	tht
::
	tdif„ªn˚_ty≥
 difference_type;

119 
ty≥«me
 
	tht
::
	tpoöãr
Öointer;

120 
ty≥«me
 
	tht
::
	tc⁄°_poöãr
 const_pointer;

121 
ty≥«me
 
	tht
::
	tª„ªn˚
Ñeference;

122 
ty≥«me
 
	tht
::
	tc⁄°_ª„ªn˚
 const_reference;

124 
ty≥«me
 
	tht
::
	tôî©‹
 iterator;

125 
ty≥«me
 
	tht
::
	tc⁄°_ôî©‹
 const_iterator;

128 
ôî©‹
 
	$begö
(Ë{  
ªp
.
	`begö
(); 
	}
}

129 
ôî©‹
 
	$íd
(Ë{  
ªp
.
	`íd
(); 
	}
}

130 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
ªp
.
	`begö
(); 
	}
}

131 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
ªp
.
	`íd
(); 
	}
}

135 
hashî
 
	$hash_fun˘
(Ëc⁄° {  
ªp
.
	`hash_fun˘
(); 
	}
}

136 
key_equÆ
 
	$key_eq
(Ëc⁄° {  
ªp
.
	`key_eq
(); 
	}
}

140 
ex∂icô
 
•¨£_hash_m≠
(
size_ty≥
 
n
 = 0,

141 c⁄° 
hashî
& 
hf
 = hasher(),

142 c⁄° 
key_equÆ
& 
eql
 = 
	$key_equÆ
())

143 : 
	$ªp
(
n
, 
hf
, 
eql
Ë{ 
	}
}

145 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

146 
•¨£_hash_m≠
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
,

147 
size_ty≥
 
n
 = 0,

148 c⁄° 
hashî
& 
hf
 = hasher(),

149 c⁄° 
key_equÆ
& 
eql
 = 
	$key_equÆ
()) {

150 
ªp
.
	`ö£π
(
f
, 
l
);

151 
	}
}

156 
	$˛ór
(Ë{ 
ªp
.
	`˛ór
(); 
	}
}

157 
	$sw≠
(
•¨£_hash_m≠
& 
hs
Ë{ 
ªp
.
	`sw≠
(hs.ªp); 
	}
}

161 
size_ty≥
 
	$size
(Ëc⁄° {  
ªp
.
	`size
(); 
	}
}

162 
size_ty≥
 
	$max_size
(Ëc⁄° {  
ªp
.
	`max_size
(); 
	}
}

163 
boﬁ
 
	$em±y
(Ëc⁄° {  
ªp
.
	`em±y
(); 
	}
}

164 
size_ty≥
 
	$buckë_cou¡
(Ëc⁄° {  
ªp
.
	`buckë_cou¡
(); 
	}
}

165 
size_ty≥
 
	$max_buckë_cou¡
(Ëc⁄° {  
ªp
.
	`max_buckë_cou¡
(); 
	}
}

167 
	$ªsize
(
size_ty≥
 
höt
Ë{ 
ªp
.
	`ªsize
(höt); 
	}
}

171 
ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
Ë{  
ªp
.
	`föd
(key); 
	}
}

172 
c⁄°_ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
Ëc⁄° {  
ªp
.
	`föd
(key); 
	}
}

174 
	gd©a_ty≥
& 
	g›î©‹
[](c⁄° 
	gkey_ty≥
& 
	gkey
) {

175 
ôî©‹
 
	gô
 = 
föd
(
key
);

176 i‡(
	gô
 !
íd
()) {

177  
ô
->
£c⁄d
;

179  
ö£π
(
vÆue_ty≥
(
key
, 
d©a_ty≥
())).
	gfú°
->
	g£c⁄d
;

183 
size_ty≥
 
	$cou¡
(c⁄° 
key_ty≥
& 
key
Ëc⁄° {  
ªp
.
	`cou¡
(key); 
	}
}

185 
	g∑ú
<
	gôî©‹
, iãøt‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) {

186  
ªp
.
	`equÆ_ønge
(
key
);

187 
	}
}

188 
	g∑ú
<
	gc⁄°_ôî©‹
, c⁄°_ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) const {

189  
ªp
.
	`equÆ_ønge
(
key
);

190 
	}
}

193 
	g∑ú
<
	gôî©‹
, 
	gboﬁ
> 
	$ö£π
(c⁄° 
vÆue_ty≥
& 
obj
Ë{  
ªp
.
	`ö£π
(obj); 
	}
}

194 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

195 
	$ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
Ë{ 
ªp
.
	`ö£π
(f,Ü); 
	}
}

196 
	$ö£π
(
c⁄°_ôî©‹
 
f
, c⁄°_ôî©‹ 
l
Ë{ 
ªp
.
	`ö£π
(f,Ü); 
	}
}

198 
ôî©‹
 
	$ö£π
(
ôî©‹
, c⁄° 
vÆue_ty≥
& 
obj
Ë{  
	`ö£π
(obj).
fú°
; 
	}
}

205 
	$£t_dñëed_key
(c⁄° 
key_ty≥
& 
key
) {

206 
ªp
.
	`£t_dñëed_key
(
	`vÆue_ty≥
(
key
, 
	`d©a_ty≥
()));

207 
	}
}

208 
	$˛ór_dñëed_key
(Ë{ 
ªp
.
	`˛ór_dñëed_key
(); 
	}
}

211 
size_ty≥
 
	$îa£
(c⁄° 
key_ty≥
& 
key
Ë{  
ªp
.
	`îa£
(key); 
	}
}

212 
	$îa£
(
ôî©‹
 
ô
Ë{ 
ªp
.
	`îa£
(ô); 
	}
}

213 
	$îa£
(
ôî©‹
 
f
, iãøt‹ 
l
Ë{ 
ªp
.
	`îa£
(f,Ü); 
	}
}

217 
boﬁ
 
	g›î©‹
==(c⁄° 
•¨£_hash_m≠
& 
hs
Ëc⁄° {  
ªp
 == hs.rep; }

218 
boﬁ
 
	g›î©‹
!=(c⁄° 
•¨£_hash_m≠
& 
hs
Ëc⁄° {  
ªp
 != hs.rep; }

222 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
Ë{  
ªp
.
	`wrôe_mëad©a
(Â); 
	}
}

223 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
Ë{  
ªp
.
	`ªad_mëad©a
(Â); 
	}
}

224 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
Ë{  
ªp
.
	`wrôe_n›oöãr_d©a
(Â); 
	}
}

225 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
Ë{  
ªp
.
	`ªad_n›oöãr_d©a
(Â); 
	}
}

229 
	gãm∂©e
 <
˛ass
 
	gKey
, cœs†
	gT
, cœs†
	gHashF˙
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

230 
ölöe
 
sw≠
(
•¨£_hash_m≠
<
Key
, 
T
, 
HashF˙
, 
EquÆKey
, 
AŒoc
>& 
hm1
,

231 
•¨£_hash_m≠
<
Key
, 
T
, 
HashF˙
, 
EquÆKey
, 
AŒoc
>& 
hm2
) {

232 
	ghm1
.
sw≠
(
hm2
);

235 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#NETDB_INTERNAL
 -1

	)

66 
	#NETDB_SUCCESS
 0

	)

67 
	#HOST_NOT_FOUND
 1

	)

68 
	#TRY_AGAIN
 2

	)

70 
	#NO_RECOVERY
 3

	)

72 
	#NO_DATA
 4

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

76 #ifde‡
__USE_XOPEN2K


78 
	#IPPORT_RESERVED
 1024

	)

81 #ifde‡
__USE_GNU


83 
	#SCOPE_DELIMITER
 '%'

	)

88 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

91 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

96 
	sho°ít


98 *
h_«me
;

99 **
h_Æü£s
;

100 
h_addπy≥
;

101 
h_Àngth
;

102 **
h_addr_li°
;

103 
	#h_addr
 
h_addr_li°
[0]

	)

111 
	`£tho°ít
 (
__°ay_›í
);

117 
	`ídho°ít
 ();

124 
ho°ít
 *
	`gëho°ít
 ();

131 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

132 
__ty≥
);

138 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

140 #ifde‡
__USE_MISC


149 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

161 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

163 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

164 *
__ª°ri˘
 
__h_î∫›
);

166 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

167 
__ty≥
,

168 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

192 
	`£äëít
 (
__°ay_›í
);

198 
	`íd√ã¡
 ();

205 
√ã¡
 *
	`gë√ã¡
 ();

212 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

218 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

220 #ifdef 
__USE_MISC


231 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

232 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

233 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

234 *
__ª°ri˘
 
__h_î∫›
);

236 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

237 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

251 
	s£rvít


253 *
s_«me
;

254 **
s_Æü£s
;

255 
s_p‹t
;

256 *
s_¥Ÿo
;

264 
	`£t£rvít
 (
__°ay_›í
);

270 
	`íd£rvít
 ();

277 
£rvít
 *
	`gë£rvít
 ();

284 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

285 
__c⁄°
 *
__¥Ÿo
);

292 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

295 #ifdef 
__USE_MISC


303 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

304 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

305 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

307 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

308 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

309 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

310 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

311 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

313 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

321 
	s¥Ÿ€¡


323 *
p_«me
;

324 **
p_Æü£s
;

325 
p_¥Ÿo
;

333 
	`£çrŸ€¡
 (
__°ay_›í
);

339 
	`íd¥Ÿ€¡
 ();

346 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

352 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

358 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

361 #ifdef 
__USE_MISC


369 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

370 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

371 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

373 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

374 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

390 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

398 
	`íd√tgª¡
 ();

407 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

408 **
__ª°ri˘
 
__u£Ω
,

409 **
__ª°ri˘
 
__domaöp
);

418 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

419 
__c⁄°
 *
__u£r
, __c⁄° *
domaö
);

427 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

428 **
__ª°ri˘
 
__u£Ω
,

429 **
__ª°ri˘
 
__domaöp
,

430 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

434 #ifde‡
__USE_BSD


446 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

447 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

448 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

449 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

458 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

459 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

460 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

461 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

462 
ß_Ámûy_t
 
__af
);

474 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

475 
__c⁄°
 *
__ª°ri˘
 
__«me
,

476 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

477 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

486 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

487 
__c⁄°
 *
__ª°ri˘
 
__«me
,

488 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

489 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

490 
ß_Ámûy_t
 
__af
);

500 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

501 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

510 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

511 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

512 
ß_Ámûy_t
 
__af
);

522 
	`ºesvp‹t
 (*
__Æp‹t
);

531 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

536 #ifdef 
__USE_POSIX


538 
	saddröfo


540 
ai_Êags
;

541 
ai_Ámûy
;

542 
ai_sockty≥
;

543 
ai_¥Ÿocﬁ
;

544 
sockÀn_t
 
ai_addæí
;

545 
sockaddr
 *
ai_addr
;

546 *
ai_ˇn⁄«me
;

547 
addröfo
 *
ai_√xt
;

550 #ifde‡
__USE_GNU


552 
	sgaicb


554 c⁄° *
¨_«me
;

555 c⁄° *
¨_£rvi˚
;

556 c⁄° 
addröfo
 *
¨_ªque°
;

557 
addröfo
 *
¨_ªsu…
;

559 
__ªtu∫
;

560 
__unu£d
[5];

564 
	#GAI_WAIT
 0

	)

565 
	#GAI_NOWAIT
 1

	)

569 
	#AI_PASSIVE
 0x0001

	)

570 
	#AI_CANONNAME
 0x0002

	)

571 
	#AI_NUMERICHOST
 0x0004

	)

572 
	#AI_V4MAPPED
 0x0008

	)

573 
	#AI_ALL
 0x0010

	)

574 
	#AI_ADDRCONFIG
 0x0020

	)

576 #ifde‡
__USE_GNU


577 
	#AI_IDN
 0x0040

	)

580 
	#AI_CANONIDN
 0x0080

	)

581 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

583 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

586 
	#AI_NUMERICSERV
 0x0400

	)

589 
	#EAI_BADFLAGS
 -1

	)

590 
	#EAI_NONAME
 -2

	)

591 
	#EAI_AGAIN
 -3

	)

592 
	#EAI_FAIL
 -4

	)

593 
	#EAI_NODATA
 -5

	)

594 
	#EAI_FAMILY
 -6

	)

595 
	#EAI_SOCKTYPE
 -7

	)

596 
	#EAI_SERVICE
 -8

	)

597 
	#EAI_ADDRFAMILY
 -9

	)

598 
	#EAI_MEMORY
 -10

	)

599 
	#EAI_SYSTEM
 -11

	)

600 
	#EAI_OVERFLOW
 -12

	)

601 #ifde‡
__USE_GNU


602 
	#EAI_INPROGRESS
 -100

	)

603 
	#EAI_CANCELED
 -101

	)

604 
	#EAI_NOTCANCELED
 -102

	)

605 
	#EAI_ALLDONE
 -103

	)

606 
	#EAI_INTR
 -104

	)

607 
	#EAI_IDN_ENCODE
 -105

	)

610 
	#NI_MAXHOST
 1025

	)

611 
	#NI_MAXSERV
 32

	)

613 
	#NI_NUMERICHOST
 1

	)

614 
	#NI_NUMERICSERV
 2

	)

615 
	#NI_NOFQDN
 4

	)

616 
	#NI_NAMEREQD
 8

	)

617 
	#NI_DGRAM
 16

	)

618 #ifde‡
__USE_GNU


619 
	#NI_IDN
 32

	)

620 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

622 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

631 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

632 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

633 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

634 
addröfo
 **
__ª°ri˘
 
__∑i
);

637 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

640 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

646 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

647 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

648 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

649 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

652 #ifde‡
__USE_GNU


661 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

662 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

672 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

673 
__c⁄°
 
time•ec
 *
__timeout
);

676 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

679 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

682 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_IPV6
 = 41,

57 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

58 
	mIPPROTO_ROUTING
 = 43,

59 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

60 
	mIPPROTO_FRAGMENT
 = 44,

61 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

62 
	mIPPROTO_RSVP
 = 46,

63 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

64 
	mIPPROTO_GRE
 = 47,

65 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

66 
	mIPPROTO_ESP
 = 50,

67 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

68 
	mIPPROTO_AH
 = 51,

69 
	#IPPROTO_AH
 
IPPROTO_AH


	)

70 
	mIPPROTO_ICMPV6
 = 58,

71 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

72 
	mIPPROTO_NONE
 = 59,

73 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

74 
	mIPPROTO_DSTOPTS
 = 60,

75 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

76 
	mIPPROTO_MTP
 = 92,

77 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_RAW
 = 255,

87 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

88 
	mIPPROTO_MAX


93 
uöt16_t
 
	tö_p‹t_t
;

98 
	mIPPORT_ECHO
 = 7,

99 
	mIPPORT_DISCARD
 = 9,

100 
	mIPPORT_SYSTAT
 = 11,

101 
	mIPPORT_DAYTIME
 = 13,

102 
	mIPPORT_NETSTAT
 = 15,

103 
	mIPPORT_FTP
 = 21,

104 
	mIPPORT_TELNET
 = 23,

105 
	mIPPORT_SMTP
 = 25,

106 
	mIPPORT_TIMESERVER
 = 37,

107 
	mIPPORT_NAMESERVER
 = 42,

108 
	mIPPORT_WHOIS
 = 43,

109 
	mIPPORT_MTP
 = 57,

111 
	mIPPORT_TFTP
 = 69,

112 
	mIPPORT_RJE
 = 77,

113 
	mIPPORT_FINGER
 = 79,

114 
	mIPPORT_TTYLINK
 = 87,

115 
	mIPPORT_SUPDUP
 = 95,

118 
	mIPPORT_EXECSERVER
 = 512,

119 
	mIPPORT_LOGINSERVER
 = 513,

120 
	mIPPORT_CMDSERVER
 = 514,

121 
	mIPPORT_EFSSERVER
 = 520,

124 
	mIPPORT_BIFFUDP
 = 512,

125 
	mIPPORT_WHOSERVER
 = 513,

126 
	mIPPORT_ROUTESERVER
 = 520,

129 
	mIPPORT_RESERVED
 = 1024,

132 
	mIPPORT_USERRESERVED
 = 5000

137 
uöt32_t
 
	tö_addr_t
;

138 
	sö_addr


140 
ö_addr_t
 
	ms_addr
;

149 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

150 
	#IN_CLASSA_NET
 0xff000000

	)

151 
	#IN_CLASSA_NSHIFT
 24

	)

152 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

153 
	#IN_CLASSA_MAX
 128

	)

155 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

156 
	#IN_CLASSB_NET
 0xffff0000

	)

157 
	#IN_CLASSB_NSHIFT
 16

	)

158 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

159 
	#IN_CLASSB_MAX
 65536

	)

161 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

162 
	#IN_CLASSC_NET
 0xffffff00

	)

163 
	#IN_CLASSC_NSHIFT
 8

	)

164 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

166 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

167 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

169 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

170 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

173 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

175 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

177 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

180 
	#IN_LOOPBACKNET
 127

	)

182 #i‚de‡
INADDR_LOOPBACK


183 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

187 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

188 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

189 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

190 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

194 
	sö6_addr


198 
uöt8_t
 
	mu6_addr8
[16];

199 
uöt16_t
 
	mu6_addr16
[8];

200 
uöt32_t
 
	mu6_addr32
[4];

201 } 
	mö6_u
;

202 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

203 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

204 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

207 c⁄° 
ö6_addr
 
ö6addr_™y
;

208 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

209 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

210 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

212 
	#INET_ADDRSTRLEN
 16

	)

213 
	#INET6_ADDRSTRLEN
 46

	)

217 
	ssockaddr_ö


219 
__SOCKADDR_COMMON
 (
sö_
);

220 
ö_p‹t_t
 
	msö_p‹t
;

221 
ö_addr
 
	msö_addr
;

224 
	msö_zîo
[ (
sockaddr
) -

225 
__SOCKADDR_COMMON_SIZE
 -

226  (
ö_p‹t_t
) -

227  (
ö_addr
)];

231 
	ssockaddr_ö6


233 
__SOCKADDR_COMMON
 (
sö6_
);

234 
ö_p‹t_t
 
	msö6_p‹t
;

235 
uöt32_t
 
	msö6_Êowöfo
;

236 
ö6_addr
 
	msö6_addr
;

237 
uöt32_t
 
	msö6_sc›e_id
;

242 
	sù_mªq


245 
ö_addr
 
	mimr_mu…üddr
;

248 
ö_addr
 
	mimr_öãrÁ˚
;

251 
	sù_mªq_sour˚


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
ö_addr
 
	mimr_sour˚addr
;

264 
	sùv6_mªq


267 
ö6_addr
 
	mùv6mr_mu…üddr
;

270 
	mùv6mr_öãrÁ˚
;

275 
	sgroup_ªq


278 
uöt32_t
 
	mgr_öãrÁ˚
;

281 
sockaddr_°‹age
 
	mgr_group
;

284 
	sgroup_sour˚_ªq


287 
uöt32_t
 
	mg§_öãrÁ˚
;

290 
sockaddr_°‹age
 
	mg§_group
;

293 
sockaddr_°‹age
 
	mg§_sour˚
;

298 
	sù_msfûãr


301 
ö_addr
 
	mimsf_mu…üddr
;

304 
ö_addr
 
	mimsf_öãrÁ˚
;

307 
uöt32_t
 
	mimsf_fmode
;

310 
uöt32_t
 
	mimsf_num§c
;

312 
ö_addr
 
	mimsf_¶i°
[1];

315 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

316 -  (
ö_addr
) \

317 + (
num§c
Ë*  (
ö_addr
))

	)

319 
	sgroup_fûãr


322 
uöt32_t
 
	mgf_öãrÁ˚
;

325 
sockaddr_°‹age
 
	mgf_group
;

328 
uöt32_t
 
	mgf_fmode
;

331 
uöt32_t
 
	mgf_num§c
;

333 
sockaddr_°‹age
 
	mgf_¶i°
[1];

336 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

337 -  (
sockaddr_°‹age
) \

338 + ((
num§c
) \

339 *  (
sockaddr_°‹age
)))

	)

343 
	~<bôs/ö.h
>

352 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

353 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

354 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

360 
	~<ídün.h
>

363 
	~<bôs/byãsw≠.h
>

365 #ifde‡
__OPTIMIZE__


369 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


372 
	#¡ohl
(
x
Ë(x)

	)

373 
	#¡ohs
(
x
Ë(x)

	)

374 
	#ht⁄l
(
x
Ë(x)

	)

375 
	#ht⁄s
(
x
Ë(x)

	)

377 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


378 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

379 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

380 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

386 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

387 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

388 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

389 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

392 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

393 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

394 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

395 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

398 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

400 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

401 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

402 =
	`ht⁄l
 (0x„800000))

	)

404 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

405 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

406 =
	`ht⁄l
 (0x„c00000))

	)

408 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

409 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

410 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

411 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

413 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

415 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

416 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

417 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

419 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

420 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

421 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

422 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

426 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

429 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

430 
__THROW
;

433 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

434 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

435 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

437 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

438 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

439 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

441 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

442 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

443 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

445 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

446 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

447 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

449 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

450 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

451 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

454 
	sö6_pktöfo


456 
ö6_addr
 
ùi6_addr
;

457 
ùi6_ifödex
;

461 
	sù6_mtuöfo


463 
sockaddr_ö6
 
ù6m_addr
;

464 
uöt32_t
 
ù6m_mtu
;

468 #ifde‡
__USE_GNU


470 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

471 
__THROW
 
__©åibuã_dïªˇãd__
;

472 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

473 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

475 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

476 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

477 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

478 
__mu…x
, 
__∂usy
)

479 
__THROW
 
__©åibuã_dïªˇãd__
;

480 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

481 
uöt8_t
 **
__çåp
)

482 
__THROW
 
__©åibuã_dïªˇãd__
;

483 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

484 
uöt8_t
 **
__çåp
, 
__ty≥
)

485 
__THROW
 
__©åibuã_dïªˇãd__
;

489 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

490 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

491 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

492 **
__d©abuÂ
Ë
__THROW
;

493 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

494 
__THROW
;

495 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

496 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

497 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

498 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

499 **
__d©abuÂ
Ë
__THROW
;

500 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

501 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

502 **
__d©abuÂ
Ë
__THROW
;

503 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

504 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

508 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

509 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

510 
__£gmíts
Ë
__THROW
;

511 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

512 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

513 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

514 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

515 
__THROW
;

521 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

522 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

523 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

524 
__THROW
;

527 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

528 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

529 
uöt32_t
 
__num§c
,

530 
__c⁄°
 
ö_addr
 *
__¶i°
)

531 
__THROW
;

535 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

536 
__c⁄°
 
sockaddr
 *
__group
,

537 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

538 
uöt32_t
 *
__num§c
,

539 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

542 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

543 
__c⁄°
 
sockaddr
 *
__group
,

544 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

549 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

659 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

660 i‡(
execuã
) \

661 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

662 } 0)

	)

663 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

664 
__˛ónup_f˘_©åibuã
;

666 #ifde‡
__USE_GNU


670 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

672 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

673 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

674 *
__ˇn˚l_¨g
 = (
¨g
); \

675 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

676 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

677 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

679 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

680 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

684 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

685 dÿ{

	)

686 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

687 
__˛ónup_f˘_©åibuã
;

692 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

694 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

695 i‡(
execuã
) \

696 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

697 
	}
} 0)

	)

698 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

699 
__˛ónup_f˘_©åibuã
;

703 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

705 #i‚de‡
SHARED


706 
	`__©åibuã__
 ((
__wók__
))

712 
__jmp_buf_èg
;

713 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

719 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

720 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

721 
__THROW
 
	`__n⁄nuŒ
 ((1));

724 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

735 #ifde‡
__USE_XOPEN2K


737 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

738 
__c⁄°
 
time•ec
 *
__ª°ri˘


739 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

743 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

744 
__THROW
 
	`__n⁄nuŒ
 ((1));

747 #ifde‡
__USE_UNIX98


749 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

750 
__ª°ri˘
 
__muãx
,

751 *
__ª°ri˘
 
__¥io˚ûög
)

752 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

756 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

757 
__¥io˚ûög
,

758 *
__ª°ri˘
 
__ﬁd_˚ûög
)

759 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

763 #ifde‡
__USE_GNU


765 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

774 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

783 
__ª°ri˘
 
__©å
,

784 *
__ª°ri˘
 
__psh¨ed
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

788 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

789 
__psh¨ed
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1));

792 #ifde‡
__USE_UNIX98


794 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


795 
__©å
, *
__ª°ri˘
 
__köd
)

796 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

801 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__¥Ÿocﬁ
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

812 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

813 
__¥Ÿocﬁ
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

818 
__ª°ri˘
 
__©å
,

819 *
__ª°ri˘
 
__¥io˚ûög
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

823 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

824 
__¥io˚ûög
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_GNU


830 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

831 *
__robu°√ss
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

835 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

836 
__robu°√ss
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


846 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

847 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


848 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

860 
__THROW
 
	`__n⁄nuŒ
 ((1));

862 #ifde‡
__USE_XOPEN2K


864 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
time•ec
 *
__ª°ri˘


866 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

870 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

871 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #ifde‡
__USE_XOPEN2K


879 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 
__c⁄°
 
time•ec
 *
__ª°ri˘


881 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

885 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

896 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

901 
__ª°ri˘
 
__©å
,

902 *
__ª°ri˘
 
__psh¨ed
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

906 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

907 
__psh¨ed
)

908 
__THROW
 
	`__n⁄nuŒ
 ((1));

911 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

912 
__ª°ri˘
 
__©å
,

913 *
__ª°ri˘
 
__¥ef
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

917 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

918 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

927 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


928 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

948 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

949 
	`__n⁄nuŒ
 ((1, 2));

958 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

959 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

960 
__c⁄°
 
time•ec
 *
__ª°ri˘


961 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

966 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

975 
__ª°ri˘
 
__©å
,

976 *
__ª°ri˘
 
__psh¨ed
)

977 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

980 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

981 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

983 #ifde‡
__USE_XOPEN2K


985 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

986 
__ª°ri˘
 
__©å
,

987 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

988 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

992 
__˛ockid_t
 
__˛ock_id
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

997 #ifde‡
__USE_XOPEN2K


1002 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1018 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1026 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1027 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1028 
__©å
, 
__cou¡
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1));

1045 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1049 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1050 
__ª°ri˘
 
__©å
,

1051 *
__ª°ri˘
 
__psh¨ed
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1055 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1056 
__psh¨ed
)

1057 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1070 (*
__de°r_fun˘i⁄
) (*))

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1077 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1080 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1081 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1084 #ifde‡
__USE_XOPEN2K


1086 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1087 
__˛ockid_t
 *
__˛ock_id
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((2));

1103 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1104 (*
__∑ª¡
) (),

1105 (*
__chûd
Ë()Ë
__THROW
;

1108 #ifde‡
__USE_EXTERN_INLINES


1110 
__exã∫_ölöe
 

1111 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1113  
__thªad1
 =
__thªad2
;

1114 
	}
}

1117 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

295 
__THROW
 
__wur
;

300 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

415 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

416 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

417 #ifde‡
__REDIRECT


421 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

422 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

423 
__isoc99_fsˇnf
Ë
__wur
;

424 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_sˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

427 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

428 
__isoc99_ssˇnf
Ë
__THROW
;

430 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

432 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

435 
	#fsˇnf
 
__isoc99_fsˇnf


	)

436 
	#sˇnf
 
__isoc99_sˇnf


	)

437 
	#ssˇnf
 
__isoc99_ssˇnf


	)

441 
__END_NAMESPACE_STD


443 #ifdef 
__USE_ISOC99


444 
__BEGIN_NAMESPACE_C99


449 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

450 
_G_va_li°
 
__¨g
)

451 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

457 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

461 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

463 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

465 #i‡!
deföed
 
__USE_GNU
 \

466 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

467 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

468 #ifde‡
__REDIRECT


472 
	`__REDIRECT
 (
vfsˇnf
,

473 (
FILE
 *
__ª°ri˘
 
__s
,

474 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

475 
__isoc99_vfsˇnf
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

477 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

478 
_G_va_li°
 
__¨g
), 
__isoc99_vfsˇnf
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

480 
	`__REDIRECT
 (
vssˇnf
,

481 (
__c⁄°
 *
__ª°ri˘
 
__s
,

482 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

483 
__isoc99_vssˇnf
)

484 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

486 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

487 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

488 
_G_va_li°
 
__¨g
Ë
__wur
;

489 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

493 
_G_va_li°
 
__¨g
Ë
__THROW
;

494 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

495 
	#vsˇnf
 
__isoc99_vsˇnf


	)

496 
	#vssˇnf
 
__isoc99_vssˇnf


	)

500 
__END_NAMESPACE_C99


504 
__BEGIN_NAMESPACE_STD


509 
	`fgëc
 (
FILE
 *
__°ªam
);

510 
	`gëc
 (
FILE
 *
__°ªam
);

516 
	`gëch¨
 ();

517 
__END_NAMESPACE_STD


521 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

523 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


528 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

529 
	`gëch¨_u∆ocked
 ();

532 #ifde‡
__USE_MISC


539 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

543 
__BEGIN_NAMESPACE_STD


551 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

558 
	`putch¨
 (
__c
);

559 
__END_NAMESPACE_STD


563 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

565 #ifde‡
__USE_MISC


572 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

575 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


580 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

581 
	`putch¨_u∆ocked
 (
__c
);

585 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

586 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

588 
	`gëw
 (
FILE
 *
__°ªam
);

591 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

595 
__BEGIN_NAMESPACE_STD


600 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

601 
__wur
;

608 *
	$gës
 (*
__s
Ë
__wur
;

609 
__END_NAMESPACE_STD


611 #ifde‡
__USE_GNU


618 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

619 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

623 #ifdef 
__USE_GNU


634 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

635 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

636 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

637 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

638 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

639 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

648 
size_t
 *
__ª°ri˘
 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 
__BEGIN_NAMESPACE_STD


658 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

664 
	`puts
 (
__c⁄°
 *
__s
);

671 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

678 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

685 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

686 
__END_NAMESPACE_STD


688 #ifde‡
__USE_GNU


695 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
);

699 #ifde‡
__USE_MISC


706 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

713 
__BEGIN_NAMESPACE_STD


718 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

723 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

728 
	`ªwöd
 (
FILE
 *
__°ªam
);

729 
__END_NAMESPACE_STD


736 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


737 #i‚de‡
__USE_FILE_OFFSET64


742 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

747 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

749 #ifde‡
__REDIRECT


750 
	`__REDIRECT
 (
f£eko
,

751 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

752 
f£eko64
);

753 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

755 
	#f£eko
 
f£eko64


	)

756 
	#·ñlo
 
·ñlo64


	)

761 
__BEGIN_NAMESPACE_STD


762 #i‚de‡
__USE_FILE_OFFSET64


767 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

772 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

774 #ifde‡
__REDIRECT


775 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

776 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

777 
	`__REDIRECT
 (
f£ços
,

778 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

780 
	#fgëpos
 
fgëpos64


	)

781 
	#f£ços
 
f£ços64


	)

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_LARGEFILE64


787 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

788 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

789 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

790 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

793 
__BEGIN_NAMESPACE_STD


795 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

797 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

799 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

800 
__END_NAMESPACE_STD


802 #ifde‡
__USE_MISC


804 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

805 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

806 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
__BEGIN_NAMESPACE_STD


815 
	`≥º‹
 (
__c⁄°
 *
__s
);

816 
__END_NAMESPACE_STD


822 
	~<bôs/sys_îæi°.h
>

825 #ifdef 
__USE_POSIX


827 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 #ifde‡
__USE_MISC


832 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

837 
deföed
 
__USE_MISC
)

842 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

848 
	`p˛o£
 (
FILE
 *
__°ªam
);

852 #ifdef 
__USE_POSIX


854 *
	$˘îmid
 (*
__s
Ë
__THROW
;

858 #ifde‡
__USE_XOPEN


860 *
	`cu£rid
 (*
__s
);

864 #ifdef 
__USE_GNU


865 
ob°ack
;

868 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

869 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

870 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

871 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

872 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

873 
_G_va_li°
 
__¨gs
)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

878 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


882 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

886 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

889 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

892 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


896 
	#__√ed_gë›t


	)

897 
	~<gë›t.h
>

902 #ifde‡
__USE_EXTERN_INLINES


903 
	~<bôs/°dio.h
>

905 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


906 
	~<bôs/°dio2.h
>

908 #ifde‡
__LDBL_COMPAT


909 
	~<bôs/°dio-ldbl.h
>

912 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

677 
__BEGIN_NAMESPACE_STD


680 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

681 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

682 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

686 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

687 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

692 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

693 
__END_NAMESPACE_STD


695 #ifde‡
__USE_ISOC99


696 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

697 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__BEGIN_NAMESPACE_STD


705 
div_t
 
	$div
 (
__numî
, 
__díom
)

706 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

707 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

708 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_ISOC99


712 
__BEGIN_NAMESPACE_C99


713 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

714 
__díom
)

715 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

716 
__END_NAMESPACE_C99


720 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


727 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

728 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

733 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

734 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

739 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

740 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

743 #ifde‡
__USE_MISC


745 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

746 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

747 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

748 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

749 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

750 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

751 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

752 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

757 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

758 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

759 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

760 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

761 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

762 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

764 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

765 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

766 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

767 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

769 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

770 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

771 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
__BEGIN_NAMESPACE_STD


779 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

782 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

783 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

786 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

790 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

793 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

794 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

795 
__THROW
;

796 
__END_NAMESPACE_STD


799 #ifde‡
__USE_SVID


804 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

808 #ifde‡
__USE_XOPEN_EXTENDED


815 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

816 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

817 **
__ª°ri˘
 
__vÆuï
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

822 #ifde‡
__USE_XOPEN


824 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_XOPEN2K


832 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

835 #ifde‡
__USE_XOPEN


840 
	$gø¡±
 (
__fd
Ë
__THROW
;

844 
	$u∆ock±
 (
__fd
Ë
__THROW
;

849 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

852 #ifde‡
__USE_GNU


856 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

857 
__THROW
 
	`__n⁄nuŒ
 ((2));

860 
	`gë±
 ();

863 #ifde‡
__USE_BSD


867 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


874 
	~<bôs/°dlib.h
>

876 #ifde‡
__LDBL_COMPAT


877 
	~<bôs/°dlib-ldbl.h
>

881 #unde‡
__√ed_mÆloc_™d_ˇŒoc


883 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
__BEGIN_DECLS


34 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
;

38 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

41 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

45 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

48 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

51 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

54 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

55 
__THROW
 
__©åibuã_puª__
;

58 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

59 
__THROW
 
__©åibuã_puª__
;

61 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	~<limôs.h
>

23 
	~<löux/limôs.h
>

24 
	~<löux/∑øm.h
>

28 
	#NBBY
 
CHAR_BIT


	)

29 #i‚def 
NGROUPS


30 
	#NGROUPS
 
NGROUPS_MAX


	)

32 
	#MAXSYMLINKS
 20

	)

33 
	#CANBSIZ
 
MAX_CANON


	)

34 
	#NCARGS
 
ARG_MAX


	)

35 
	#MAXPATHLEN
 
PATH_MAX


	)

39 
	#NOFILE
 256

	)

42 
	~<sys/ty≥s.h
>

45 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

46 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

47 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

48 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

51 #i‚de‡
howm™y


52 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

54 #ifde‡
__GNUC__


55 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

56 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

57 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

59 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

61 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

64 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

65 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

69 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

36 
	~<bôs/sockë.h
>

38 #ifde‡
__USE_BSD


41 
	sosockaddr


43 
	mß_Ámûy
;

44 
	mß_d©a
[14];

52 
	mSHUT_RD
 = 0,

53 
	#SHUT_RD
 
SHUT_RD


	)

54 
	mSHUT_WR
,

55 
	#SHUT_WR
 
SHUT_WR


	)

56 
	mSHUT_RDWR


57 
	#SHUT_RDWR
 
SHUT_RDWR


	)

66 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


67 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

68 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

72 
	#__SOCKADDR_ALLTYPES
 \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

87 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

88 uni⁄ { 
	m__SOCKADDR_ALLTYPES


89 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

90 #unde‡
__SOCKADDR_ONETYPE


91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


101 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

107 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

108 
__fds
[2]Ë
__THROW
;

111 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

112 
__THROW
;

115 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

116 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

125 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

129 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

130 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

144 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

151 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

152 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

153 
sockÀn_t
 
__addr_Àn
);

162 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

163 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

164 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

172 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

173 
__Êags
);

180 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

186 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

187 *
__ª°ri˘
 
__›tvÆ
,

188 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

193 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

194 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

200 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

210 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

211 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

219 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

222 #ifde‡
__USE_XOPEN2K


224 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

228 #ifde‡
__USE_MISC


232 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

237 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


238 
	~<bôs/sockë2.h
>

241 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_ATFILE


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
(
	`__WAIT_INT
(°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
‘ë, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
(sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

393 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

405 
	`¶ìp
 (
__£c⁄ds
);

407 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


412 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

413 
__THROW
;

420 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

429 
	`∑u£
 ();

433 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

434 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

443 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

448 #ifde‡
__USE_ATFILE


451 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

452 
__gid_t
 
__group
, 
__Êag
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

457 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

471 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

473 #ifdef 
__USE_GNU


477 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

480 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


484 *
	$gëwd
 (*
__buf
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

490 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

493 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

496 **
__ívú⁄
;

497 #ifde‡
__USE_GNU


498 **
ívú⁄
;

504 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

505 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 #ifde‡
__USE_GNU


510 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

511 
__THROW
;

516 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

517 
__THROW
 
	`__n⁄nuŒ
 ((1));

521 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

522 
__THROW
 
	`__n⁄nuŒ
 ((1));

526 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

527 
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

532 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

538 
__THROW
 
	`__n⁄nuŒ
 ((1));

541 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


543 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

548 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
	~<bôs/c⁄‚ame.h
>

557 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1));

561 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

564 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

566 #ifdef 
__USE_POSIX2


568 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

573 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

576 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

580 #i‚de‡
__FAVOR_BSD


581 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

583 #ifde‡
__REDIRECT_NTH


584 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

586 
	#gëpgΩ
 
__gëpgid


	)

591 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

592 #ifde‡
__USE_XOPEN_EXTENDED


593 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

600 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

602 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


613 #i‚de‡
__FAVOR_BSD


617 
	$£çgΩ
 (Ë
__THROW
;

622 #ifde‡
__REDIRECT_NTH


623 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

625 
	#£çgΩ
 
£çgid


	)

634 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

636 #ifde‡
__USE_XOPEN_EXTENDED


638 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

645 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

648 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

651 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

656 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

658 #ifdef 
__USE_GNU


660 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

667 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

669 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


677 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

684 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

686 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


689 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


694 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

697 #ifde‡
__USE_GNU


700 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

701 
__THROW
;

705 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

706 
__THROW
;

710 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

711 
__THROW
;

715 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

716 
__THROW
;

723 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


730 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

736 *
	$ây«me
 (
__fd
Ë
__THROW
;

740 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

741 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

745 
	$ißây
 (
__fd
Ë
__THROW
;

747 #i‡
deföed
 
__USE_BSD
 \

748 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

751 
	$ây¶Ÿ
 (Ë
__THROW
;

756 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

759 #ifde‡
__USE_ATFILE


762 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

763 
__c⁄°
 *
__to
, 
__Êags
)

764 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

767 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


769 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

775 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

776 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

780 #ifde‡
__USE_ATFILE


782 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

783 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

786 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

787 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

788 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

792 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_ATFILE


796 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2));

801 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

808 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

815 *
	`gëlogö
 ();

816 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


823 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

826 #ifdef 
__USE_BSD


828 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

832 #ifdef 
__USE_POSIX2


836 
	#__√ed_gë›t


	)

837 
	~<gë›t.h
>

841 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


845 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

849 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

852 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

857 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

863 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

865 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

872 
	$vh™gup
 (Ë
__THROW
;

875 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

884 
size_t
 
__off£t
, 
__sˇÀ
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

895 *
	$gëu£rshñl
 (Ë
__THROW
;

896 
	$ídu£rshñl
 (Ë
__THROW
;

897 
	$£tu£rshñl
 (Ë
__THROW
;

903 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

907 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

910 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

918 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


923 
	`fsync
 (
__fd
);

927 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


930 
	`gëho°id
 ();

933 
	$sync
 (Ë
__THROW
;

938 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

943 
	$gëdèbÀsize
 (Ë
__THROW
;

947 #i‚de‡
__USE_FILE_OFFSET64


948 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #ifde‡
__REDIRECT_NTH


952 
	`__REDIRECT_NTH
 (
åunˇã
,

953 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

954 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

956 
	#åunˇã
 
åunˇã64


	)

959 #ifde‡
__USE_LARGEFILE64


960 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


969 #i‚de‡
__USE_FILE_OFFSET64


970 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

972 #ifde‡
__REDIRECT_NTH


973 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

974 
·runˇã64
Ë
__wur
;

976 
	#·runˇã
 
·runˇã64


	)

979 #ifde‡
__USE_LARGEFILE64


980 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


990 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

996 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1000 #ifde‡
__USE_MISC


1011 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1016 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1028 
	#F_ULOCK
 0

	)

1029 
	#F_LOCK
 1

	)

1030 
	#F_TLOCK
 2

	)

1031 
	#F_TEST
 3

	)

1033 #i‚de‡
__USE_FILE_OFFSET64


1034 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1036 #ifde‡
__REDIRECT


1037 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1038 
lockf64
Ë
__wur
;

1040 
	#lockf
 
lockf64


	)

1043 #ifde‡
__USE_LARGEFILE64


1044 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1049 #ifde‡
__USE_GNU


1054 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1055 (
__exãnsi⁄__
 \

1056 ({ 
__ªsu…
; \

1057 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1058 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1059 
__ªsu…
; 
	}
}))

	)

1062 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1065 
fd©async
 (
__fûdes
);

1071 #ifdef 
__USE_XOPEN


1073 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1074 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1078 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1086 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 #ifde‡
__USE_XOPEN


1094 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1099 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1100 
	~<bôs/uni°d.h
>

1103 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

513 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

515 
	m_CS_GNU_LIBC_VERSION
,

516 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

517 
	m_CS_GNU_LIBPTHREAD_VERSION
,

518 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

520 
	m_CS_LFS_CFLAGS
 = 1000,

521 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

522 
	m_CS_LFS_LDFLAGS
,

523 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

524 
	m_CS_LFS_LIBS
,

525 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

526 
	m_CS_LFS_LINTFLAGS
,

527 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

528 
	m_CS_LFS64_CFLAGS
,

529 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

530 
	m_CS_LFS64_LDFLAGS
,

531 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

532 
	m_CS_LFS64_LIBS
,

533 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

534 
	m_CS_LFS64_LINTFLAGS
,

535 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

537 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

538 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

539 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

540 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

541 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

542 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

543 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

544 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

545 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

546 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

547 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

548 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

549 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

550 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

551 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

552 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

553 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

554 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

555 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

556 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

557 
	m_CS_XBS5_LP64_OFF64_LIBS
,

558 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

559 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

560 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

561 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

562 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

563 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

564 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

565 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

566 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

567 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

568 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

570 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

571 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

572 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

573 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

574 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

575 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

576 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

577 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

578 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

579 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

580 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

581 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

582 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

583 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

584 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

585 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

586 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

587 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

588 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

589 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

590 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

591 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

592 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

593 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

594 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

595 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

596 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

597 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

598 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

599 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

600 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


601 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	#__√ed_NULL


	)

30 
	~<°ddef.h
>

32 
	~<limôs.h
>

33 
	~<sys/ty≥s.h
>

36 #i‚de‡
__sockÀn_t_deföed


37 
__sockÀn_t
 
	tsockÀn_t
;

38 
	#__sockÀn_t_deföed


	)

42 
	e__sockë_ty≥


44 
	mSOCK_STREAM
 = 1,

46 
	#SOCK_STREAM
 
SOCK_STREAM


	)

47 
	mSOCK_DGRAM
 = 2,

49 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

50 
	mSOCK_RAW
 = 3,

51 
	#SOCK_RAW
 
SOCK_RAW


	)

52 
	mSOCK_RDM
 = 4,

53 
	#SOCK_RDM
 
SOCK_RDM


	)

54 
	mSOCK_SEQPACKET
 = 5,

56 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

57 
	mSOCK_PACKET
 = 10

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

64 
	#PF_UNSPEC
 0

	)

65 
	#PF_LOCAL
 1

	)

66 
	#PF_UNIX
 
PF_LOCAL


	)

67 
	#PF_FILE
 
PF_LOCAL


	)

68 
	#PF_INET
 2

	)

69 
	#PF_AX25
 3

	)

70 
	#PF_IPX
 4

	)

71 
	#PF_APPLETALK
 5

	)

72 
	#PF_NETROM
 6

	)

73 
	#PF_BRIDGE
 7

	)

74 
	#PF_ATMPVC
 8

	)

75 
	#PF_X25
 9

	)

76 
	#PF_INET6
 10

	)

77 
	#PF_ROSE
 11

	)

78 
	#PF_DEC√t
 12

	)

79 
	#PF_NETBEUI
 13

	)

80 
	#PF_SECURITY
 14

	)

81 
	#PF_KEY
 15

	)

82 
	#PF_NETLINK
 16

	)

83 
	#PF_ROUTE
 
PF_NETLINK


	)

84 
	#PF_PACKET
 17

	)

85 
	#PF_ASH
 18

	)

86 
	#PF_ECONET
 19

	)

87 
	#PF_ATMSVC
 20

	)

88 
	#PF_SNA
 22

	)

89 
	#PF_IRDA
 23

	)

90 
	#PF_PPPOX
 24

	)

91 
	#PF_WANPIPE
 25

	)

92 
	#PF_BLUETOOTH
 31

	)

93 
	#PF_IUCV
 32

	)

94 
	#PF_RXRPC
 33

	)

95 
	#PF_MAX
 34

	)

98 
	#AF_UNSPEC
 
PF_UNSPEC


	)

99 
	#AF_LOCAL
 
PF_LOCAL


	)

100 
	#AF_UNIX
 
PF_UNIX


	)

101 
	#AF_FILE
 
PF_FILE


	)

102 
	#AF_INET
 
PF_INET


	)

103 
	#AF_AX25
 
PF_AX25


	)

104 
	#AF_IPX
 
PF_IPX


	)

105 
	#AF_APPLETALK
 
PF_APPLETALK


	)

106 
	#AF_NETROM
 
PF_NETROM


	)

107 
	#AF_BRIDGE
 
PF_BRIDGE


	)

108 
	#AF_ATMPVC
 
PF_ATMPVC


	)

109 
	#AF_X25
 
PF_X25


	)

110 
	#AF_INET6
 
PF_INET6


	)

111 
	#AF_ROSE
 
PF_ROSE


	)

112 
	#AF_DEC√t
 
PF_DEC√t


	)

113 
	#AF_NETBEUI
 
PF_NETBEUI


	)

114 
	#AF_SECURITY
 
PF_SECURITY


	)

115 
	#AF_KEY
 
PF_KEY


	)

116 
	#AF_NETLINK
 
PF_NETLINK


	)

117 
	#AF_ROUTE
 
PF_ROUTE


	)

118 
	#AF_PACKET
 
PF_PACKET


	)

119 
	#AF_ASH
 
PF_ASH


	)

120 
	#AF_ECONET
 
PF_ECONET


	)

121 
	#AF_ATMSVC
 
PF_ATMSVC


	)

122 
	#AF_SNA
 
PF_SNA


	)

123 
	#AF_IRDA
 
PF_IRDA


	)

124 
	#AF_PPPOX
 
PF_PPPOX


	)

125 
	#AF_WANPIPE
 
PF_WANPIPE


	)

126 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

127 
	#AF_IUCV
 
PF_IUCV


	)

128 
	#AF_RXRPC
 
PF_RXRPC


	)

129 
	#AF_MAX
 
PF_MAX


	)

135 
	#SOL_RAW
 255

	)

136 
	#SOL_DECNET
 261

	)

137 
	#SOL_X25
 262

	)

138 
	#SOL_PACKET
 263

	)

139 
	#SOL_ATM
 264

	)

140 
	#SOL_AAL
 265

	)

141 
	#SOL_IRDA
 266

	)

144 
	#SOMAXCONN
 128

	)

147 
	~<bôs/sockaddr.h
>

150 
	ssockaddr


152 
__SOCKADDR_COMMON
 (
ß_
);

153 
	mß_d©a
[14];

159 #i‡
ULONG_MAX
 > 0xffffffff

160 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

162 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

164 
	#_SS_SIZE
 128

	)

165 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

167 
	ssockaddr_°‹age


169 
__SOCKADDR_COMMON
 (
ss_
);

170 
__ss_Æig¡y≥
 
	m__ss_Æign
;

171 
	m__ss_∑ddög
[
_SS_PADSIZE
];

178 
	mMSG_OOB
 = 0x01,

179 
	#MSG_OOB
 
MSG_OOB


	)

180 
	mMSG_PEEK
 = 0x02,

181 
	#MSG_PEEK
 
MSG_PEEK


	)

182 
	mMSG_DONTROUTE
 = 0x04,

183 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

184 #ifde‡
__USE_GNU


186 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

187 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

189 
	mMSG_CTRUNC
 = 0x08,

190 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

191 
	mMSG_PROXY
 = 0x10,

192 
	#MSG_PROXY
 
MSG_PROXY


	)

193 
	mMSG_TRUNC
 = 0x20,

194 
	#MSG_TRUNC
 
MSG_TRUNC


	)

195 
	mMSG_DONTWAIT
 = 0x40,

196 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

197 
	mMSG_EOR
 = 0x80,

198 
	#MSG_EOR
 
MSG_EOR


	)

199 
	mMSG_WAITALL
 = 0x100,

200 
	#MSG_WAITALL
 
MSG_WAITALL


	)

201 
	mMSG_FIN
 = 0x200,

202 
	#MSG_FIN
 
MSG_FIN


	)

203 
	mMSG_SYN
 = 0x400,

204 
	#MSG_SYN
 
MSG_SYN


	)

205 
	mMSG_CONFIRM
 = 0x800,

206 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

207 
	mMSG_RST
 = 0x1000,

208 
	#MSG_RST
 
MSG_RST


	)

209 
	mMSG_ERRQUEUE
 = 0x2000,

210 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

211 
	mMSG_NOSIGNAL
 = 0x4000,

212 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

213 
	mMSG_MORE
 = 0x8000,

214 
	#MSG_MORE
 
MSG_MORE


	)

216 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

219 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

225 
	smsghdr


227 *
	mmsg_«me
;

228 
sockÀn_t
 
	mmsg_«mñí
;

230 
iovec
 *
	mmsg_iov
;

231 
size_t
 
	mmsg_iovÀn
;

233 *
	mmsg_c⁄åﬁ
;

234 
size_t
 
	mmsg_c⁄åﬁÀn
;

239 
	mmsg_Êags
;

243 
	scmsghdr


245 
size_t
 
	mcmsg_Àn
;

250 
	mcmsg_Àvñ
;

251 
	mcmsg_ty≥
;

252 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

253 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

258 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

259 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

261 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

263 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

264 
	#CMSG_FIRSTHDR
(
mhdr
) \

265 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

266 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

267 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

268 & (
size_t
Ë~( (size_tË- 1))

	)

269 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

270 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

271 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

273 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

274 
cmsghdr
 *
__cmsg
Ë
__THROW
;

275 #ifde‡
__USE_EXTERN_INLINES


276 #i‚de‡
_EXTERN_INLINE


277 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

279 
_EXTERN_INLINE
 
cmsghdr
 *

280 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

282 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

286 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

287 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

288 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


289 + 
__mhdr
->
msg_c⁄åﬁÀn
)

290 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

291 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

294  
__cmsg
;

295 
	}
}

302 
	mSCM_RIGHTS
 = 0x01

303 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

304 #ifde‡
__USE_BSD


305 , 
	mSCM_CREDENTIALS
 = 0x02

306 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

312 
	su¸ed


314 
pid_t
 
	mpid
;

315 
uid_t
 
	muid
;

316 
gid_t
 
	mgid
;

320 
	~<asm/sockë.h
>

324 
	slögî


326 
	ml_⁄off
;

327 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

133 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

134 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

135 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

138 
__exã∫_Æways_ölöe
 
__wur
 *

139 
	$gës
 (*
__°r
)

141 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

142  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

143  
	`__gës_w¨n
 (
__°r
);

144 
	}
}

146 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

147 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

148 *
	`__REDIRECT
 (
__fgës_Æüs
,

149 (*
__ª°ri˘
 
__s
, 
__n
,

150 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

151 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

152 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

153 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

154 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

157 
__exã∫_Æways_ölöe
 
__wur
 *

158 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

160 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

162 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

163  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

165 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

166  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

168  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

169 
	}
}

171 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

172 
size_t
 
__size
, size_à
__n
,

173 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

174 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

175 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

176 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

177 
‰ód
Ë
__wur
;

178 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

179 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

180 
size_t
 
__size
, size_à
__n
,

181 
FILE
 *
__ª°ri˘
 
__°ªam
),

182 
__‰ód_chk
)

183 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

186 
__exã∫_Æways_ölöe
 
__wur
 
size_t


187 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

188 
FILE
 *
__ª°ri˘
 
__°ªam
)

190 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

192 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

193 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

194 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

195  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

197 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

198  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

200  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

201 
	}
}

203 #ifde‡
__USE_GNU


204 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

205 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

206 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

207 (*
__ª°ri˘
 
__s
, 
__n
,

208 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

209 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

210 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

211 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

212 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

215 
__exã∫_Æways_ölöe
 
__wur
 *

216 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

218 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

220 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

221  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

223 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

224  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

226  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

227 
	}
}

230 #ifde‡
__USE_MISC


231 #unde‡
‰ód_u∆ocked


232 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

233 
size_t
 
__size
, size_à
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

236 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

237 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

238 
‰ód_u∆ocked
Ë
__wur
;

239 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

240 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

241 
size_t
 
__size
, size_à
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
),

243 
__‰ód_u∆ocked_chk
)

244 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

247 
__exã∫_Æways_ölöe
 
__wur
 
size_t


248 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
)

251 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

253 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

254 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

255 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

256  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

257 
__°ªam
);

259 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

260  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

261 
__°ªam
);

264 #ifde‡
__USE_EXTERN_INLINES


265 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

266 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

267 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

268 && 
__size
 * 
__n
 <= 8)

270 
size_t
 
__˙t
 = 
__size
 * 
__n
;

271 *
__˝å
 = (*Ë
__±r
;

272 i‡(
__˙t
 == 0)

275 ; 
__˙t
 > 0; --__cnt)

277 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

278 i‡(
__c
 =
EOF
)

280 *
__˝å
++ = 
__c
;

282  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

285  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

286 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	#__STDC_IEC_559__
 1

	)

297 
	#__STDC_IEC_559_COMPLEX__
 1

	)

300 
	#__STDC_ISO_10646__
 200009L

	)

308 #unde‡
__GNU_LIBRARY__


309 
	#__GNU_LIBRARY__
 6

	)

313 
	#__GLIBC__
 2

	)

314 
	#__GLIBC_MINOR__
 7

	)

316 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

317 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

320 #i‡
deföed
 
__GNUC__
 \

321 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

322 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

323 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

324 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

328 #i‚de‡
__ASSEMBLER__


329 #i‚de‡
_SYS_CDEFS_H


330 
	~<sys/cdefs.h
>

335 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


336 
	#__USE_LARGEFILE
 1

	)

337 
	#__USE_LARGEFILE64
 1

	)

343 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

344 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

345 && 
deföed
 
	g__exã∫_ölöe


346 
	#__USE_EXTERN_INLINES
 1

	)

354 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/google/sparsehash/config.h

5 
	#GOOGLE_NAMESPACE
 
googÀ


	)

8 
	#HASH_NAMESPACE
 
__gnu_cxx


	)

11 
	#HAVE_EXT_HASH_FUN_H
 1

	)

14 
	#HAVE_EXT_HASH_MAP
 1

	)

17 
	#HAVE_EXT_HASH_SET
 1

	)

32 
	#HAVE_INTTYPES_H
 1

	)

35 
	#HAVE_LONG_LONG
 1

	)

38 
	#HAVE_MEMCPY
 1

	)

41 
	#HAVE_MEMMOVE
 1

	)

44 
	#HAVE_MEMORY_H
 1

	)

47 
	#HAVE_NAMESPACES


	)

50 
	#HAVE_STDINT_H
 1

	)

53 
	#HAVE_STDLIB_H
 1

	)

59 
	#HAVE_STRINGS_H
 1

	)

62 
	#HAVE_STRING_H
 1

	)

65 
	#HAVE_SYS_RESOURCE_H
 1

	)

68 
	#HAVE_SYS_STAT_H
 1

	)

71 
	#HAVE_SYS_TIME_H
 1

	)

74 
	#HAVE_SYS_TYPES_H
 1

	)

77 
	#HAVE_SYS_UTSNAME_H
 1

	)

80 
	#HAVE_UNISTD_H
 1

	)

83 
	#HAVE_U_INT16_T
 1

	)

89 
	#PACKAGE
 "•¨£hash"

	)

92 
	#PACKAGE_BUGREPORT
 "›ísour˚@googÀ.com"

	)

95 
	#PACKAGE_NAME
 "•¨£hash"

	)

98 
	#PACKAGE_STRING
 "•¨£hash 0.4"

	)

101 
	#PACKAGE_TARNAME
 "•¨£hash"

	)

104 
	#PACKAGE_VERSION
 "0.4"

	)

107 
	#STDC_HEADERS
 1

	)

110 
	#STL_NAMESPACE
 
°d


	)

113 
	#UNDERSTANDS_ITERATOR_TAGS
 1

	)

116 
	#VERSION
 "0.4"

	)

119 
	#_END_GOOGLE_NAMESPACE_
 }

	)

122 
	#_START_GOOGLE_NAMESPACE_
 
«me•a˚
 
googÀ
 {

	)

	@/usr/include/google/sparsehash/densehashtable.h

86 #i‚de‡
_DENSEHASHTABLE_H_


87 
	#_DENSEHASHTABLE_H_


	)

93 
	#JUMP_
(
key
, 
num_¥obes
Ë–num_¥obe†)

	)

99 
	~<googÀ/•¨£hash/c⁄fig.h
>

100 
	~<as£π.h
>

101 
	~<°dlib.h
>

102 
	~<Æg‹ôhm
>

103 
	~<io°ªam
>

104 
	~<mem‹y
>

105 
	~<googÀ/ty≥_åaôs.h
>

107 
_START_GOOGLE_NAMESPACE_


109 
usög
 
	gSTL_NAMESPACE
::
∑ú
;

111 
	gãm∂©e
 <
˛ass
 
	gVÆue
, cœs†
	gKey
, cœs†
	gHashF˙
,

112 
˛ass
 
	gExåa˘Key
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

113 
˛ass
 
	gdí£_hashèbÀ
;

115 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

116 
	gdí£_hashèbÀ_ôî©‹
;

118 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

119 
	gdí£_hashèbÀ_c⁄°_ôî©‹
;

122 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

123 
	sdí£_hashèbÀ_ôî©‹
 {

124 
	mpublic
:

125 
dí£_hashèbÀ
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tdí£_hashèbÀ
;

126 
	mdí£_hashèbÀ_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tôî©‹
;

127 
	mdí£_hashèbÀ_c⁄°_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tc⁄°_ôî©‹
;

129 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


130 
	mSTL_NAMESPACE
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

132 
V
 
	tvÆue_ty≥
;

133 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

134 
size_t
 
	tsize_ty≥
;

135 
	mV
& 
	tª„ªn˚
;

136 
V
* 
	tpoöãr
;

139 
dí£_hashèbÀ_ôî©‹
(c⁄° 
dí£_hashèbÀ
 *
h
,

140 
poöãr
 
ô
,Öoöã∏
ô_íd
, 
boﬁ
 
adv™˚
)

141 : 
ht
(
h
), 
pos
(
ô
), 
íd
(
ô_íd
) {

142 i‡(
	madv™˚
Ë
adv™˚_∑°_em±y_™d_dñëed
();

144 
dí£_hashèbÀ_ôî©‹
() { }

149 
ª„ªn˚
 
	m›î©‹
*(Ëc⁄° {  *
	mpos
; }

150 
poöãr
 
	m›î©‹
->() const {  &(operator*()); }

154 
adv™˚_∑°_em±y_™d_dñëed
() {

155  
	mpos
 !
íd
 && (
ht
->
ã°_em±y
(*
this
Ë|| ht->
ã°_dñëed
(*this)) )

156 ++
pos
;

158 
	môî©‹
& 
	m›î©‹
++() {

159 
as£π
(
pos
 !
íd
); ++
	mpos
; 
adv™˚_∑°_em±y_™d_dñëed
();  *
	mthis
;

161 
ôî©‹
 
	m›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	mthis
;  
	mtmp
; }

164 
boﬁ
 
	m›î©‹
==(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 == it.pos; }

165 
boﬁ
 
	m›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 != it.pos; }

169 c⁄° 
dí£_hashèbÀ
 *
	mht
;

170 
poöãr
 
	mpos
, 
	míd
;

175 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

176 
	sdí£_hashèbÀ_c⁄°_ôî©‹
 {

177 
	mpublic
:

178 
dí£_hashèbÀ
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tdí£_hashèbÀ
;

179 
	mdí£_hashèbÀ_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tôî©‹
;

180 
	mdí£_hashèbÀ_c⁄°_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tc⁄°_ôî©‹
;

182 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


183 
	mSTL_NAMESPACE
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

185 
V
 
	tvÆue_ty≥
;

186 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

187 
size_t
 
	tsize_ty≥
;

188 c⁄° 
	tV
& 
	tª„ªn˚
;

189 c⁄° 
	tV
* 
	tpoöãr
;

192 
dí£_hashèbÀ_c⁄°_ôî©‹
(c⁄° 
dí£_hashèbÀ
 *
h
,

193 
poöãr
 
ô
,Öoöã∏
ô_íd
, 
boﬁ
 
adv™˚
)

194 : 
ht
(
h
), 
pos
(
ô
), 
íd
(
ô_íd
) {

195 i‡(
	madv™˚
Ë
adv™˚_∑°_em±y_™d_dñëed
();

197 
dí£_hashèbÀ_c⁄°_ôî©‹
() { }

199 
dí£_hashèbÀ_c⁄°_ôî©‹
(c⁄° 
ôî©‹
 &
ô
)

200 : 
ht
(
ô
.ht), 
pos
(ô.pos), 
íd
(it.end) { }

205 
ª„ªn˚
 
	m›î©‹
*(Ëc⁄° {  *
	mpos
; }

206 
poöãr
 
	m›î©‹
->() const {  &(operator*()); }

210 
adv™˚_∑°_em±y_™d_dñëed
() {

211  
	mpos
 !
íd
 && (
ht
->
ã°_em±y
(*
this
Ë|| ht->
ã°_dñëed
(*this)) )

212 ++
pos
;

214 
	mc⁄°_ôî©‹
& 
	m›î©‹
++() {

215 
as£π
(
pos
 !
íd
); ++
	mpos
; 
adv™˚_∑°_em±y_™d_dñëed
();  *
	mthis
;

217 
c⁄°_ôî©‹
 
	m›î©‹
++(Ë{ c⁄°_ôî©‹ 
tmp
(*
this
); ++*
	mthis
;  
	mtmp
; }

220 
boﬁ
 
	m›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  
pos
 == it.pos; }

221 
boﬁ
 
	m›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  
pos
 != it.pos; }

225 c⁄° 
dí£_hashèbÀ
 *
	mht
;

226 
poöãr
 
	mpos
, 
	míd
;

229 
	gãm∂©e
 <
˛ass
 
	gVÆue
, cœs†
	gKey
, cœs†
	gHashF˙
,

230 
˛ass
 
	gExåa˘Key
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

231 ˛as†
	cdí£_hashèbÀ
 {

232 
	mpublic
:

233 
Key
 
	tkey_ty≥
;

234 
VÆue
 
	tvÆue_ty≥
;

235 
HashF˙
 
	thashî
;

236 
EquÆKey
 
	tkey_equÆ
;

238 
size_t
 
	tsize_ty≥
;

239 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

240 
vÆue_ty≥
* 
	tpoöãr
;

241 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

242 
	mvÆue_ty≥
& 
	tª„ªn˚
;

243 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

244 
	mdí£_hashèbÀ_ôî©‹
<
	tVÆue
, 
	tKey
, 
	tHashF˙
,

245 
	tExåa˘Key
, 
	tEquÆKey
, 
	tAŒoc
>

246 
	tôî©‹
;

248 
	mdí£_hashèbÀ_c⁄°_ôî©‹
<
	tVÆue
, 
	tKey
, 
	tHashF˙
,

249 
	tExåa˘Key
, 
	tEquÆKey
, 
	tAŒoc
>

250 
	tc⁄°_ôî©‹
;

254 c⁄° 
	mHT_OCCUPANCY_FLT
;

258 c⁄° 
	mHT_EMPTY_FLT
;

264 c⁄° 
size_t
 
	mHT_MIN_BUCKETS
 = 32;

268 
ôî©‹
 
	$begö
(Ë{  
	`ôî©‹
(
this
, 
èbÀ
,

269 
èbÀ
 + 
num_buckës
, 
åue
); }

270 
ôî©‹
 
	$íd
(Ë{  
	`ôî©‹
(
this
, 
èbÀ
 + 
num_buckës
,

271 
èbÀ
 + 
num_buckës
, 
åue
); 
	}
}

272 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 
èbÀ
,

273 
èbÀ
+
num_buckës
,
åue
);
	}
}

274 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 
èbÀ
 + 
num_buckës
,

275 
èbÀ
+
num_buckës
,
åue
);
	}
}

278 
hashî
 
	$hash_fun˘
(Ëc⁄° {  
hash
; 
	}
}

279 
key_equÆ
 
	$key_eq
(Ëc⁄° {  
equÆs
; 
	}
}

285 
	g¥iv©e
:

286 
	$£t_vÆue
(
vÆue_ty≥
* 
d°
, c⁄° vÆue_ty≥& 
§c
) {

287 
d°
->~
	`vÆue_ty≥
();

288 
	`√w
(
d°
Ë
	`vÆue_ty≥
(
§c
);

289 
	}
}

291 
	$de°roy_buckës
(
size_ty≥
 
fú°
, size_ty≥ 
œ°
) {

292  ; 
fú°
 !
œ°
; ++first)

293 
èbÀ
[
fú°
].~
	`vÆue_ty≥
();

294 
	}
}

302 
	g¥iv©e
:

303 
	$squash_dñëed
() {

304 i‡–
num_dñëed
 ) {

305 
dí£_hashèbÀ
 
	`tmp
(*
this
);

306 
	`sw≠
(
tmp
);

308 
	`as£π
(
num_dñëed
 == 0);

309 
	}
}

311 
	gpublic
:

312 
	$£t_dñëed_key
(c⁄° 
vÆue_ty≥
 &
vÆ
) {

314 
	`squash_dñëed
();

315 
u£_dñëed
 = 
åue
;

316 
	`£t_vÆue
(&
dñvÆ
, 
vÆ
);

317 
	}
}

318 
	$˛ór_dñëed_key
() {

319 
	`squash_dñëed
();

320 
u£_dñëed
 = 
Ál£
;

321 
	}
}

325 
boﬁ
 
	$ã°_dñëed
(
size_ty≥
 
bucknum
) const {

328  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

329 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(
èbÀ
[
bucknum
])));

330 
	}
}

331 
boﬁ
 
	$ã°_dñëed
(c⁄° 
ôî©‹
 &
ô
) const {

332  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

333 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(*
ô
)));

334 
	}
}

335 
boﬁ
 
	$ã°_dñëed
(c⁄° 
c⁄°_ôî©‹
 &
ô
) const {

336  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

337 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(*
ô
)));

338 
	}
}

341 
boﬁ
 
	$£t_dñëed
(
c⁄°_ôî©‹
 &
ô
) {

342 
	`as£π
(
u£_dñëed
);

343 
boﬁ
 
ªtvÆ
 = !
	`ã°_dñëed
(
ô
);

345 
	`£t_vÆue
(
c⁄°_ˇ°
<
vÆue_ty≥
*>(&(*
ô
)), 
dñvÆ
);

346  
ªtvÆ
;

347 
	}
}

349 
boﬁ
 
	$˛ór_dñëed
(
c⁄°_ôî©‹
 &
ô
) {

350 
	`as£π
(
u£_dñëed
);

352  
	`ã°_dñëed
(
ô
);

353 
	}
}

361 
	gpublic
:

364 
boﬁ
 
	$ã°_em±y
(
size_ty≥
 
bucknum
) const {

365 
	`as£π
(
u£_em±y
);

366  
	`equÆs
(
	`gë_key
(
em±yvÆ
), gë_key(
èbÀ
[
bucknum
]));

367 
	}
}

368 
boﬁ
 
	$ã°_em±y
(c⁄° 
ôî©‹
 &
ô
) const {

369 
	`as£π
(
u£_em±y
);

370  
	`equÆs
(
	`gë_key
(
em±yvÆ
), gë_key(*
ô
));

371 
	}
}

372 
boﬁ
 
	$ã°_em±y
(c⁄° 
c⁄°_ôî©‹
 &
ô
) const {

373 
	`as£π
(
u£_em±y
);

374  
	`equÆs
(
	`gë_key
(
em±yvÆ
), gë_key(*
ô
));

375 
	}
}

377 
	g¥iv©e
:

379 
	$£t_em±y
(
size_ty≥
 
bucknum
) {

380 
	`as£π
(
u£_em±y
);

381 
	`£t_vÆue
(&
èbÀ
[
bucknum
], 
em±yvÆ
);

382 
	}
}

383 
	$fûl_ønge_wôh_em±y
(
vÆue_ty≥
* 
èbÀ_°¨t
, vÆue_ty≥* 
èbÀ_íd
) {

385 
STL_NAMESPACE
::
	`unöôülized_fûl
(
èbÀ_°¨t
, 
èbÀ_íd
, 
em±yvÆ
);

386 
	}
}

387 
	$£t_em±y
(
size_ty≥
 
buck°¨t
, size_ty≥ 
buckíd
) {

388 
	`as£π
(
u£_em±y
);

389 
	`de°roy_buckës
(
buck°¨t
, 
buckíd
);

390 
	`fûl_ønge_wôh_em±y
(
èbÀ
 + 
buck°¨t
,ÅabÀ + 
buckíd
);

391 
	}
}

393 
	gpublic
:

396 
	$£t_em±y_key
(c⁄° 
vÆue_ty≥
 &
vÆ
) {

398 
	`as£π
(!
u£_em±y
);

399 
u£_em±y
 = 
åue
;

400 
	`£t_vÆue
(&
em±yvÆ
, 
vÆ
);

402 
	`as£π
(!
èbÀ
);

404 
èbÀ
 = (
vÆue_ty≥
 *Ë
	`mÆloc
(
num_buckës
 * (*table));

405 
	`as£π
(
èbÀ
);

406 
	`fûl_ønge_wôh_em±y
(
èbÀ
,ÅabÀ + 
num_buckës
);

407 
	}
}

410 
	gpublic
:

411 
size_ty≥
 
	$size
(Ëc⁄° {  
num_ñemíts
 - 
num_dñëed
; 
	}
}

413 
size_ty≥
 
	$max_size
(Ëc⁄° {  (
	`size_ty≥
(-1Ë>> 1UË+ 1; 
	}
}

414 
boﬁ
 
	$em±y
(Ëc⁄° {  
	`size
(Ë=0; 
	}
}

415 
size_ty≥
 
	$buckë_cou¡
(Ëc⁄° {  
num_buckës
; 
	}
}

416 
size_ty≥
 
	$max_buckë_cou¡
(Ëc⁄° {  
	`max_size
(); 
	}
}

417 
size_ty≥
 
	$n⁄em±y_buckë_cou¡
(Ëc⁄° {  
num_ñemíts
; 
	}
}

419 
	g¥iv©e
:

421 c⁄° 
size_ty≥
 
ILLEGAL_BUCKET
 = size_type(-1);

423 
	g¥iv©e
:

426 
size_ty≥
 
	$mö_size
(
size_ty≥
 
num_ñts
, size_ty≥ 
mö_buckës_w™ãd
) {

427 
size_ty≥
 
sz
 = 
HT_MIN_BUCKETS
;

428  
sz
 < 
mö_buckës_w™ãd
 || 
num_ñts
 >sz * 
HT_OCCUPANCY_FLT
 )

429 
sz
 *= 2;

430  
sz
;

431 
	}
}

434 
	$maybe_shrök
() {

435 
	`as£π
(
num_ñemíts
 >
num_dñëed
);

436 
	`as£π
((
	`buckë_cou¡
() & (bucket_count()-1)) == 0);

437 
	`as£π
(
	`buckë_cou¡
(Ë>
HT_MIN_BUCKETS
);

439 i‡–(
num_ñemíts
-
num_dñëed
Ë<
shrök_thªshﬁd
 &&

440 
	`buckë_cou¡
(Ë> 
HT_MIN_BUCKETS
 ) {

441 
size_ty≥
 
sz
 = 
	`buckë_cou¡
() / 2;

442  
sz
 > 
HT_MIN_BUCKETS
 &&

443 (
num_ñemíts
 - 
num_dñëed
Ë<
sz
 * 
HT_EMPTY_FLT
 )

444 
sz
 /= 2;

445 
dí£_hashèbÀ
 
	`tmp
(*
this
, 
sz
);

446 
	`sw≠
(
tmp
);

448 
c⁄sidî_shrök
 = 
Ál£
;

449 
	}
}

453 
	$ªsize_dñè
(
size_ty≥
 
dñè
, size_ty≥ 
mö_buckës_w™ãd
 = 0) {

454 i‡–
c⁄sidî_shrök
 )

455 
	`maybe_shrök
();

456 i‡–
	`buckë_cou¡
(Ë> 
mö_buckës_w™ãd
 &&

457 (
num_ñemíts
 + 
dñè
Ë<
íœrge_thªshﬁd
 )

460 c⁄° 
size_ty≥
 
ªsize_to
 = 
	`mö_size
(
num_ñemíts
 + 
dñè
,

461 
mö_buckës_w™ãd
);

462 i‡–
ªsize_to
 > 
	`buckë_cou¡
() ) {

463 
dí£_hashèbÀ
 
	`tmp
(*
this
, 
ªsize_to
);

464 
	`sw≠
(
tmp
);

466 
	}
}

470 
	$ex∑nd_¨øy
(
size_t
 
ªsize_to
, 
åue_ty≥
) {

471 
èbÀ
 = (
vÆue_ty≥
 *Ë
	`ªÆloc
—abÀ, 
ªsize_to
 * (value_type));

472 
	`as£π
(
èbÀ
);

473 
	`fûl_ønge_wôh_em±y
(
èbÀ
 + 
num_buckës
,ÅabÀ + 
ªsize_to
);

474 
	}
}

479 
	$ex∑nd_¨øy
(
size_t
 
ªsize_to
, 
Ál£_ty≥
) {

480 
vÆue_ty≥
* 
√w_èbÀ
 =

481 (
vÆue_ty≥
 *Ë
	`mÆloc
(
ªsize_to
 * (value_type));

482 
	`as£π
(
√w_èbÀ
);

483 
STL_NAMESPACE
::
	`unöôülized_c›y
(
èbÀ
,ÅabÀ + 
num_buckës
, 
√w_èbÀ
);

484 
	`fûl_ønge_wôh_em±y
(
√w_èbÀ
 + 
num_buckës
,Çew_èbÀ + 
ªsize_to
);

485 
	`de°roy_buckës
(0, 
num_buckës
);

486 
	`‰ì
(
èbÀ
);

487 
èbÀ
 = 
√w_èbÀ
;

488 
	}
}

491 
	$c›y_‰om
(c⁄° 
dí£_hashèbÀ
 &
ht
, 
size_ty≥
 
mö_buckës_w™ãd
 = 0) {

492 
	`˛ór
();

495 c⁄° 
size_ty≥
 
ªsize_to
 = 
	`mö_size
(
ht
.
	`size
(), 
mö_buckës_w™ãd
);

496 i‡–
ªsize_to
 > 
	`buckë_cou¡
() ) {

497 
öãgøl_c⁄°™t
<
	tboﬁ
,

498 (
	thas_åivül_c›y
<
	tvÆue_ty≥
>::
	tvÆue
 &&

499 
	thas_åivül_assign
<
	tvÆue_ty≥
>::
	tvÆue
)>

500 
	tis_sim∂e_ty≥
;

501 
	`ex∑nd_¨øy
(
ªsize_to
, 
	`is_sim∂e_ty≥
());

502 
num_buckës
 = 
ªsize_to
;

503 
	`ª£t_thªshﬁds
();

509 
	`as£π
((
	`buckë_cou¡
() & (bucket_count()-1)) == 0);

510  
c⁄°_ôî©‹
 
ô
 = 
ht
.
	`begö
(); ià!ht.
	`íd
(); ++it ) {

511 
size_ty≥
 
num_¥obes
 = 0;

512 
size_ty≥
 
bucknum
;

513 c⁄° 
size_ty≥
 
buckë_cou¡_möus_⁄e
 = 
	`buckë_cou¡
() - 1;

514 
bucknum
 = 
	`hash
(
	`gë_key
(*
ô
)Ë& 
buckë_cou¡_möus_⁄e
;

515 !
	`ã°_em±y
(
bucknum
);

516 
bucknum
 = (bucknum + 
	`JUMP_
(
key
, 
num_¥obes
)Ë& 
buckë_cou¡_möus_⁄e
) {

517 ++
num_¥obes
;

518 
	`as£π
(
num_¥obes
 < 
	`buckë_cou¡
());

520 
	`£t_vÆue
(&
èbÀ
[
bucknum
], *
ô
);

521 
num_ñemíts
++;

523 
	}
}

526 
	gpublic
:

530 
	$ªsize
(
size_ty≥
 
ªq_ñemíts
) {

531 i‡–
c⁄sidî_shrök
 || 
ªq_ñemíts
 == 0 )

532 
	`maybe_shrök
();

533 i‡–
ªq_ñemíts
 > 
num_ñemíts
 )

534  
	`ªsize_dñè
(
ªq_ñemíts
 - 
num_ñemíts
, 0);

535 
	}
}

542 
ex∂icô
 
dí£_hashèbÀ
(
size_ty≥
 
n
 = 0,

543 c⁄° 
HashF˙
& 
hf
 = HashFcn(),

544 c⁄° 
EquÆKey
& 
eql
 = EqualKey(),

545 c⁄° 
Exåa˘Key
& 
ext
 = 
	$Exåa˘Key
())

546 : 
	`hash
(
hf
), 
	`equÆs
(
eql
), 
	`gë_key
(
ext
), 
	`num_dñëed
(0),

547 
	`u£_dñëed
(
Ál£
), 
	`u£_em±y
(false),

548 
	`dñvÆ
(), 
	`em±yvÆ
(),

549 
	`èbÀ
(
NULL
), 
	`num_buckës
(
	`mö_size
(0, 
n
)), 
	$num_ñemíts
(0) {

552 
	`ª£t_thªshﬁds
();

553 
	}
}

557 
	$dí£_hashèbÀ
(c⁄° 
dí£_hashèbÀ
& 
ht
, 
size_ty≥
 
mö_buckës_w™ãd
 = 0)

558 : 
	`hash
(
ht
.
hash
), 
	`equÆs
(ht.
equÆs
), 
	`gë_key
(ht.
gë_key
), 
	`num_dñëed
(0),

559 
	`u£_dñëed
(
ht
.
u£_dñëed
), 
	`u£_em±y
(ht.
u£_em±y
),

560 
	`dñvÆ
(
ht
.
dñvÆ
), 
	`em±yvÆ
(ht.
em±yvÆ
),

561 
	`èbÀ
(
NULL
), 
	`num_buckës
(0),

562 
	$num_ñemíts
(0) {

563 
	`ª£t_thªshﬁds
();

564 
	`c›y_‰om
(
ht
, 
mö_buckës_w™ãd
);

565 
	}
}

567 
	gdí£_hashèbÀ
& 
	g›î©‹
(c⁄° 
dí£_hashèbÀ
& 
ht
) {

568 i‡(&
ht
 =
this
)  *this;

569 
˛ór
();

570 
	ghash
 = 
ht
.
hash
;

571 
	gequÆs
 = 
ht
.
equÆs
;

572 
	ggë_key
 = 
ht
.
gë_key
;

573 
	gu£_dñëed
 = 
ht
.
u£_dñëed
;

574 
	gu£_em±y
 = 
ht
.
u£_em±y
;

575 
£t_vÆue
(&
dñvÆ
, 
ht
.delval);

576 
£t_vÆue
(&
em±yvÆ
, 
ht
.emptyval);

577 
c›y_‰om
(
ht
);

578  *
	gthis
;

581 ~
	$dí£_hashèbÀ
() {

582 i‡(
èbÀ
) {

583 
	`de°roy_buckës
(0, 
num_buckës
);

584 
	`‰ì
(
èbÀ
);

586 
	}
}

589 
	$sw≠
(
dí£_hashèbÀ
& 
ht
) {

590 
STL_NAMESPACE
::
	`sw≠
(
hash
, 
ht
.hash);

591 
STL_NAMESPACE
::
	`sw≠
(
equÆs
, 
ht
.equals);

592 
STL_NAMESPACE
::
	`sw≠
(
gë_key
, 
ht
.get_key);

593 
STL_NAMESPACE
::
	`sw≠
(
num_dñëed
, 
ht
.num_deleted);

594 
STL_NAMESPACE
::
	`sw≠
(
u£_dñëed
, 
ht
.use_deleted);

595 
STL_NAMESPACE
::
	`sw≠
(
u£_em±y
, 
ht
.use_empty);

596 { 
vÆue_ty≥
 
tmp
;

597 
	`£t_vÆue
(&
tmp
, 
dñvÆ
);

598 
	`£t_vÆue
(&
dñvÆ
, 
ht
.delval);

599 
	`£t_vÆue
(&
ht
.
dñvÆ
, 
tmp
);

601 { 
vÆue_ty≥
 
tmp
;

602 
	`£t_vÆue
(&
tmp
, 
em±yvÆ
);

603 
	`£t_vÆue
(&
em±yvÆ
, 
ht
.emptyval);

604 
	`£t_vÆue
(&
ht
.
em±yvÆ
, 
tmp
);

606 
STL_NAMESPACE
::
	`sw≠
(
èbÀ
, 
ht
.table);

607 
STL_NAMESPACE
::
	`sw≠
(
num_buckës
, 
ht
.num_buckets);

608 
STL_NAMESPACE
::
	`sw≠
(
num_ñemíts
, 
ht
.num_elements);

609 
	`ª£t_thªshﬁds
();

610 
ht
.
	`ª£t_thªshﬁds
();

611 
	}
}

614 
	$˛ór
() {

615 i‡(
èbÀ
)

616 
	`de°roy_buckës
(0, 
num_buckës
);

617 
num_buckës
 = 
	`mö_size
(0,0);

618 
	`ª£t_thªshﬁds
();

619 
èbÀ
 = (
vÆue_ty≥
 *Ë
	`ªÆloc
—abÀ, 
num_buckës
 * (*table));

620 
	`as£π
(
èbÀ
);

621 
	`fûl_ønge_wôh_em±y
(
èbÀ
,ÅabÀ + 
num_buckës
);

622 
num_ñemíts
 = 0;

623 
num_dñëed
 = 0;

624 
	}
}

628 
	g¥iv©e
:

634 
∑ú
<
size_ty≥
, 
	gsize_ty≥
> 
	$föd_posôi⁄
(c⁄° 
key_ty≥
 &
key
) const {

635 
size_ty≥
 
num_¥obes
 = 0;

636 c⁄° 
size_ty≥
 
buckë_cou¡_möus_⁄e
 = 
	`buckë_cou¡
() - 1;

637 
size_ty≥
 
bucknum
 = 
	`hash
(
key
Ë& 
buckë_cou¡_möus_⁄e
;

638 
size_ty≥
 
ö£π_pos
 = 
ILLEGAL_BUCKET
;

640 i‡–
	`ã°_em±y
(
bucknum
) ) {

641 i‡–
ö£π_pos
 =
ILLEGAL_BUCKET
 )

642  
∑ú
<
size_ty≥
,size_ty≥>(
ILLEGAL_BUCKET
, 
bucknum
);

644  
∑ú
<
size_ty≥
,size_ty≥>(
ILLEGAL_BUCKET
, 
ö£π_pos
);

646 } i‡–
	`ã°_dñëed
(
bucknum
) ) {

647 i‡–
ö£π_pos
 =
ILLEGAL_BUCKET
 )

648 
ö£π_pos
 = 
bucknum
;

650 } i‡–
	`equÆs
(
key
, 
	`gë_key
(
èbÀ
[
bucknum
])) ) {

651  
∑ú
<
size_ty≥
,size_ty≥>(
bucknum
, 
ILLEGAL_BUCKET
);

653 ++
num_¥obes
;

654 
bucknum
 = (bucknum + 
	`JUMP_
(
key
, 
num_¥obes
)Ë& 
buckë_cou¡_möus_⁄e
;

655 
	`as£π
(
num_¥obes
 < 
	`buckë_cou¡
());

657 
	}
}

659 
	gpublic
:

660 
ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
) {

661 i‡–
	`size
(Ë=0 )  
	`íd
();

662 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

663 i‡–
pos
.
fú°
 =
ILLEGAL_BUCKET
 )

664  
	`íd
();

666  
	`ôî©‹
(
this
, 
èbÀ
 + 
pos
.
fú°
,ÅabÀ + 
num_buckës
, 
Ál£
);

667 
	}
}

669 
c⁄°_ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
) const {

670 i‡–
	`size
(Ë=0 )  
	`íd
();

671 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

672 i‡–
pos
.
fú°
 =
ILLEGAL_BUCKET
 )

673  
	`íd
();

675  
	`c⁄°_ôî©‹
(
this
, 
èbÀ
 + 
pos
.
fú°
,ÅabÀ+
num_buckës
, 
Ál£
);

676 
	}
}

679 
size_ty≥
 
	$cou¡
(c⁄° 
key_ty≥
 &
key
) const {

680 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

681  
pos
.
fú°
 =
ILLEGAL_BUCKET
 ? 0 : 1;

682 
	}
}

685 
	g∑ú
<
	gôî©‹
,ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) {

686 c⁄° 
ôî©‹
 
pos
 = 
	`föd
(
key
);

687  
∑ú
<
ôî©‹
,ôî©‹>(
pos
,Öos);

688 
	}
}

689 
	g∑ú
<
	gc⁄°_ôî©‹
,c⁄°_ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) const {

690 c⁄° 
c⁄°_ôî©‹
 
pos
 = 
	`föd
(
key
);

691  
∑ú
<
ôî©‹
,ôî©‹>(
pos
,Öos);

692 
	}
}

696 
	g¥iv©e
:

698 
∑ú
<
ôî©‹
, 
	gboﬁ
> 
	$ö£π_n‹esize
(c⁄° 
vÆue_ty≥
& 
obj
) {

699 c⁄° 
∑ú
<
size_ty≥
,size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
	`gë_key
(
obj
));

700 i‡–
pos
.
fú°
 !
ILLEGAL_BUCKET
) {

701  
∑ú
<
ôî©‹
,
boﬁ
>(
	`ôî©‹
(
this
, 
èbÀ
 + 
pos
.
fú°
,

702 
èbÀ
 + 
num_buckës
, 
Ál£
),

703 
Ál£
);

705 i‡–
	`ã°_dñëed
(
pos
.
£c⁄d
) ) {

706 
c⁄°_ôî©‹
 
	`dñpos
(
this
, 
èbÀ
 + 
pos
.
£c⁄d
,

707 
èbÀ
 + 
num_buckës
, 
Ál£
);

708 
	`˛ór_dñëed
(
dñpos
);

709 
	`as£π
–
num_dñëed
 > 0);

710 --
num_dñëed
;

712 ++
num_ñemíts
;

714 
	`£t_vÆue
(&
èbÀ
[
pos
.
£c⁄d
], 
obj
);

715  
∑ú
<
ôî©‹
,
boﬁ
>(
	`ôî©‹
(
this
, 
èbÀ
 + 
pos
.
£c⁄d
,

716 
èbÀ
 + 
num_buckës
, 
Ál£
),

717 
åue
);

719 
	}
}

721 
	gpublic
:

723 
∑ú
<
ôî©‹
, 
	gboﬁ
> 
	$ö£π
(c⁄° 
vÆue_ty≥
& 
obj
) {

724 
	`ªsize_dñè
(1);

725  
	`ö£π_n‹esize
(
obj
);

726 
	}
}

729 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

730 
	$ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
) {

732 
	`ö£π
(
f
, 
l
, 
ty≥«me
 
STL_NAMESPACE
::
ôî©‹_åaôs
<
I≈utIãøt‹
>::
	`ôî©‹_ˇãg‹y
());

733 
	}
}

736 
	gãm∂©e
 <
˛ass
 
	gF‹w¨dIãøt‹
>

737 
ö£π
(
F‹w¨dIãøt‹
 
f
, F‹w¨dIãøt‹ 
l
,

738 
STL_NAMESPACE
::
f‹w¨d_ôî©‹_èg
) {

739 
size_ty≥
 
n
 = 
STL_NAMESPACE
::
di°™˚
(
f
, 
l
);

740 
ªsize_dñè
(
n
);

741  ; 
	gn
 > 0; --n, ++
	gf
)

742 
ö£π_n‹esize
(*
f
);

746 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

747 
ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
,

748 
STL_NAMESPACE
::
öput_ôî©‹_èg
) {

749  ; 
	gf
 !
l
; ++f)

750 
ö£π
(*
f
);

754 
size_ty≥
 
	$îa£
(c⁄° 
key_ty≥
& 
key
) {

755 
c⁄°_ôî©‹
 
pos
 = 
	`föd
(
key
);

756 i‡–
pos
 !
	`íd
() ) {

757 
	`as£π
(!
	`ã°_dñëed
(
pos
));

758 
	`£t_dñëed
(
pos
);

759 ++
num_dñëed
;

760 
c⁄sidî_shrök
 = 
åue
;

765 
	}
}

770 
	$îa£
(
c⁄°_ôî©‹
 
pos
) {

771 i‡–
pos
 =
	`íd
() ) ;

772 i‡–
	`£t_dñëed
(
pos
) ) {

773 ++
num_dñëed
;

774 
c⁄sidî_shrök
 = 
åue
;

776 
	}
}

778 
	$îa£
(
c⁄°_ôî©‹
 
f
, c⁄°_ôî©‹ 
l
) {

779  ; 
f
 !
l
; ++f) {

780 i‡–
	`£t_dñëed
(
f
) )

781 ++
num_dñëed
;

783 
c⁄sidî_shrök
 = 
åue
;

784 
	}
}

788 
boﬁ
 
	g›î©‹
==(c⁄° 
dí£_hashèbÀ
& 
ht
) const {

791  ( 
num_dñëed
 =
ht
.num_dñëed && 
èbÀ
 == ht.table );

793 
boﬁ
 
	g›î©‹
!=(c⁄° 
dí£_hashèbÀ
& 
ht
) const {

794  !(*
this
 =
ht
);

804 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
) {

805 
	`squash_dñëed
();

806  
Ál£
;

807 
	}
}

809 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
) {

810 
num_dñëed
 = 0;

811 
	`as£π
(
u£_em±y
);

812 i‡(
èbÀ
Ë
	`‰ì
(table);

815 
	`ª£t_thªshﬁds
();

816 
èbÀ
 = (
vÆue_ty≥
 *Ë
	`mÆloc
(
num_buckës
 * (*table));

817 
	`as£π
(
èbÀ
);

818 
	`fûl_ønge_wôh_em±y
(
èbÀ
,ÅabÀ + 
num_buckës
);

820  
size_ty≥
 
i
 = 0; i < 
num_ñemíts
; ++i ) {

824  
Ál£
;

825 
	}
}

831 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
) const {

832  
c⁄°_ôî©‹
 
ô
 = 
	`begö
(); ià!
	`íd
(); ++it ) {

834 i‡–!
	`fwrôe
(&*
ô
, (*ô), 1, 
Â
ËË 
Ál£
;

836  
Ál£
;

837 
	}
}

840 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
) {

841  
ôî©‹
 
ô
 = 
	`begö
(); ià!
	`íd
(); ++it ) {

843 i‡–!
	`‰ód
(
ªöãΩªt_ˇ°
<*>(&(*
ô
)), (*ô), 1, 
Â
) )

844  
Ál£
;

846  
Ál£
;

847 
	}
}

849 
	g¥iv©e
:

851 
hashî
 
hash
;

852 
key_equÆ
 
	gequÆs
;

853 
Exåa˘Key
 
	ggë_key
;

854 
size_ty≥
 
	gnum_dñëed
;

855 
boﬁ
 
	gu£_dñëed
;

856 
boﬁ
 
	gu£_em±y
;

857 
vÆue_ty≥
 
	gdñvÆ
;

858 
vÆue_ty≥
 
	gem±yvÆ
;

859 
vÆue_ty≥
 *
	gèbÀ
;

860 
size_ty≥
 
	gnum_buckës
;

861 
size_ty≥
 
	gnum_ñemíts
;

862 
size_ty≥
 
	gshrök_thªshﬁd
;

863 
size_ty≥
 
	gíœrge_thªshﬁd
;

864 
boﬁ
 
	gc⁄sidî_shrök
;

866 
	$ª£t_thªshﬁds
() {

867 
íœrge_thªshﬁd
 = 
°©ic_ˇ°
<
size_ty≥
>(
num_buckës
*
HT_OCCUPANCY_FLT
);

868 
shrök_thªshﬁd
 = 
°©ic_ˇ°
<
size_ty≥
>(
num_buckës
*
HT_EMPTY_FLT
);

869 
c⁄sidî_shrök
 = 
Ál£
;

870 
	}
}

874 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

875 
ölöe
 
sw≠
(
dí£_hashèbÀ
<
V
,
K
,
HF
,
ExK
,
EqK
,
A
> &
x
,

876 
dí£_hashèbÀ
<
V
,
K
,
HF
,
ExK
,
EqK
,
A
> &
y
) {

877 
	gx
.
sw≠
(
y
);

880 #unde‡
JUMP_


882 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

883 c⁄° 
ty≥«me
 
	gdí£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
size_ty≥


884 
dí£_hashèbÀ
<
V
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
ILLEGAL_BUCKET
;

888 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

889 c⁄° 
	gdí£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_OCCUPANCY_FLT
 = 0.5f;

893 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

894 c⁄° 
	gdí£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_EMPTY_FLT
 = 0.4 *

895 
dí£_hashèbÀ
<
V
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_OCCUPANCY_FLT
;

897 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/google/sparsehash/hash_fun.h

1 #i‚de‡
HASH_NAMESPACE


2 
	#HASH_NAMESPACE
 
__gnu_cxx


	)

5 
	~<ext/hash_fun.h
>

	@/usr/include/google/sparsehash/sparsehashtable.h

91 #i‚de‡
_SPARSEHASHTABLE_H_


92 
	#_SPARSEHASHTABLE_H_


	)

94 #i‚de‡
SPARSEHASH_STAT_UPDATE


95 
	#SPARSEHASH_STAT_UPDATE
(
x
Ë((Ë0)

	)

102 
	#JUMP_
(
key
, 
num_¥obes
Ë–num_¥obe†)

	)

108 
	~<googÀ/•¨£hash/c⁄fig.h
>

109 
	~<as£π.h
>

110 
	~<Æg‹ôhm
>

111 
	~<googÀ/•¨£èbÀ
>

113 
_START_GOOGLE_NAMESPACE_


115 
usög
 
	gSTL_NAMESPACE
::
∑ú
;

121 
	gãm∂©e
 <
˛ass
 
	gVÆue
, cœs†
	gKey
, cœs†
	gHashF˙
,

122 
˛ass
 
	gExåa˘Key
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

123 
˛ass
 
	g•¨£_hashèbÀ
;

125 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

126 
	g•¨£_hashèbÀ_ôî©‹
;

128 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

129 
	g•¨£_hashèbÀ_c⁄°_ôî©‹
;

133 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

134 
	s•¨£_hashèbÀ_ôî©‹
 {

135 
	mpublic
:

136 
•¨£_hashèbÀ
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	t•¨£_hashèbÀ
;

137 
	m•¨£_hashèbÀ_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tôî©‹
;

138 
	m•¨£_hashèbÀ_c⁄°_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tc⁄°_ôî©‹
;

139 
ty≥«me
 
	t•¨£èbÀ
<
	tV
>::
	tn⁄em±y_ôî©‹
 
	t°_ôî©‹
;

141 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


142 
	mSTL_NAMESPACE
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

144 
V
 
	tvÆue_ty≥
;

145 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

146 
size_t
 
	tsize_ty≥
;

147 
	mV
& 
	tª„ªn˚
;

148 
V
* 
	tpoöãr
;

151 
•¨£_hashèbÀ_ôî©‹
(c⁄° 
•¨£_hashèbÀ
 *
h
,

152 
°_ôî©‹
 
ô
, st_ôî©‹ 
ô_íd
)

153 : 
ht
(
h
), 
pos
(
ô
), 
íd
(
ô_íd
Ë{ 
adv™˚_∑°_dñëed
(); }

154 
•¨£_hashèbÀ_ôî©‹
() { }

159 
ª„ªn˚
 
	m›î©‹
*(Ëc⁄° {  *
	mpos
; }

160 
poöãr
 
	m›î©‹
->() const {  &(operator*()); }

164 
adv™˚_∑°_dñëed
() {

165  
	mpos
 !
íd
 && 
ht
->
ã°_dñëed
(*
this
) )

166 ++
pos
;

168 
	môî©‹
& 
	m›î©‹
++() {

169 
as£π
(
pos
 !
íd
); ++
	mpos
; 
adv™˚_∑°_dñëed
();  *
	mthis
;

171 
ôî©‹
 
	m›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	mthis
;  
	mtmp
; }

174 
boﬁ
 
	m›î©‹
==(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 == it.pos; }

175 
boﬁ
 
	m›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 != it.pos; }

179 c⁄° 
•¨£_hashèbÀ
 *
	mht
;

180 
°_ôî©‹
 
	mpos
, 
	míd
;

184 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

185 
	s•¨£_hashèbÀ_c⁄°_ôî©‹
 {

186 
	mpublic
:

187 
•¨£_hashèbÀ
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	t•¨£_hashèbÀ
;

188 
	m•¨£_hashèbÀ_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tôî©‹
;

189 
	m•¨£_hashèbÀ_c⁄°_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tc⁄°_ôî©‹
;

190 
ty≥«me
 
	t•¨£èbÀ
<
	tV
>::
	tc⁄°_n⁄em±y_ôî©‹
 
	t°_ôî©‹
;

192 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


193 
	mSTL_NAMESPACE
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

195 
V
 
	tvÆue_ty≥
;

196 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

197 
size_t
 
	tsize_ty≥
;

198 c⁄° 
	tV
& 
	tª„ªn˚
;

199 c⁄° 
	tV
* 
	tpoöãr
;

202 
•¨£_hashèbÀ_c⁄°_ôî©‹
(c⁄° 
•¨£_hashèbÀ
 *
h
,

203 
°_ôî©‹
 
ô
, st_ôî©‹ 
ô_íd
)

204 : 
ht
(
h
), 
pos
(
ô
), 
íd
(
ô_íd
Ë{ 
adv™˚_∑°_dñëed
(); }

206 
•¨£_hashèbÀ_c⁄°_ôî©‹
() { }

207 
•¨£_hashèbÀ_c⁄°_ôî©‹
(c⁄° 
ôî©‹
 &
ô
)

208 : 
ht
(
ô
.ht), 
pos
(ô.pos), 
íd
(it.end) { }

213 
ª„ªn˚
 
	m›î©‹
*(Ëc⁄° {  *
	mpos
; }

214 
poöãr
 
	m›î©‹
->() const {  &(operator*()); }

218 
adv™˚_∑°_dñëed
() {

219  
	mpos
 !
íd
 && 
ht
->
ã°_dñëed
(*
this
) )

220 ++
pos
;

222 
	mc⁄°_ôî©‹
& 
	m›î©‹
++() {

223 
as£π
(
pos
 !
íd
); ++
	mpos
; 
adv™˚_∑°_dñëed
();  *
	mthis
;

225 
c⁄°_ôî©‹
 
	m›î©‹
++(Ë{ c⁄°_ôî©‹ 
tmp
(*
this
); ++*
	mthis
;  
	mtmp
; }

228 
boﬁ
 
	m›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  
pos
 == it.pos; }

229 
boﬁ
 
	m›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  
pos
 != it.pos; }

233 c⁄° 
•¨£_hashèbÀ
 *
	mht
;

234 
°_ôî©‹
 
	mpos
, 
	míd
;

238 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

239 
	s•¨£_hashèbÀ_de°ru˘ive_ôî©‹
 {

240 
	mpublic
:

241 
•¨£_hashèbÀ
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	t•¨£_hashèbÀ
;

242 
	m•¨£_hashèbÀ_de°ru˘ive_ôî©‹
<
	tV
,
	tK
,
	tHF
,
	tExK
,
	tEqK
,
	tA
> 
	tôî©‹
;

243 
ty≥«me
 
	t•¨£èbÀ
<
	tV
>::
	tde°ru˘ive_ôî©‹
 
	t°_ôî©‹
;

245 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


246 
	mSTL_NAMESPACE
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

248 
V
 
	tvÆue_ty≥
;

249 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

250 
size_t
 
	tsize_ty≥
;

251 
	mV
& 
	tª„ªn˚
;

252 
V
* 
	tpoöãr
;

255 
•¨£_hashèbÀ_de°ru˘ive_ôî©‹
(c⁄° 
•¨£_hashèbÀ
 *
h
,

256 
°_ôî©‹
 
ô
, st_ôî©‹ 
ô_íd
)

257 : 
ht
(
h
), 
pos
(
ô
), 
íd
(
ô_íd
Ë{ 
adv™˚_∑°_dñëed
(); }

258 
•¨£_hashèbÀ_de°ru˘ive_ôî©‹
() { }

263 
ª„ªn˚
 
	m›î©‹
*(Ëc⁄° {  *
	mpos
; }

264 
poöãr
 
	m›î©‹
->() const {  &(operator*()); }

268 
adv™˚_∑°_dñëed
() {

269  
	mpos
 !
íd
 && 
ht
->
ã°_dñëed
(*
this
) )

270 ++
pos
;

272 
	môî©‹
& 
	m›î©‹
++() {

273 
as£π
(
pos
 !
íd
); ++
	mpos
; 
adv™˚_∑°_dñëed
();  *
	mthis
;

275 
ôî©‹
 
	m›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	mthis
;  
	mtmp
; }

278 
boﬁ
 
	m›î©‹
==(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 == it.pos; }

279 
boﬁ
 
	m›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  
pos
 != it.pos; }

283 c⁄° 
•¨£_hashèbÀ
 *
	mht
;

284 
°_ôî©‹
 
	mpos
, 
	míd
;

288 
	gãm∂©e
 <
˛ass
 
	gVÆue
, cœs†
	gKey
, cœs†
	gHashF˙
,

289 
˛ass
 
	gExåa˘Key
, cœs†
	gEquÆKey
, cœs†
	gAŒoc
>

290 ˛as†
	c•¨£_hashèbÀ
 {

291 
	mpublic
:

292 
Key
 
	tkey_ty≥
;

293 
VÆue
 
	tvÆue_ty≥
;

294 
HashF˙
 
	thashî
;

295 
EquÆKey
 
	tkey_equÆ
;

297 
size_t
 
	tsize_ty≥
;

298 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

299 
vÆue_ty≥
* 
	tpoöãr
;

300 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

301 
	mvÆue_ty≥
& 
	tª„ªn˚
;

302 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

303 
	m•¨£_hashèbÀ_ôî©‹
<
	tVÆue
, 
	tKey
, 
	tHashF˙
,

304 
	tExåa˘Key
, 
	tEquÆKey
, 
	tAŒoc
>

305 
	tôî©‹
;

307 
	m•¨£_hashèbÀ_c⁄°_ôî©‹
<
	tVÆue
, 
	tKey
, 
	tHashF˙
,

308 
	tExåa˘Key
, 
	tEquÆKey
, 
	tAŒoc
>

309 
	tc⁄°_ôî©‹
;

311 
	m•¨£_hashèbÀ_de°ru˘ive_ôî©‹
<
	tVÆue
, 
	tKey
, 
	tHashF˙
,

312 
	tExåa˘Key
, 
	tEquÆKey
, 
	tAŒoc
>

313 
	tde°ru˘ive_ôî©‹
;

317 c⁄° 
	mHT_OCCUPANCY_FLT
;

321 c⁄° 
	mHT_EMPTY_FLT
;

327 c⁄° 
size_t
 
	mHT_MIN_BUCKETS
 = 32;

331 
ôî©‹
 
	$begö
(Ë{  
	`ôî©‹
(
this
, 
èbÀ
.
	`n⁄em±y_begö
(),

332 
èbÀ
.
	`n⁄em±y_íd
()); }

333 
ôî©‹
 
	$íd
(Ë{  
	`ôî©‹
(
this
, 
èbÀ
.
	`n⁄em±y_íd
(),

334 
èbÀ
.
	`n⁄em±y_íd
()); 
	}
}

335 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
,

336 
èbÀ
.
	`n⁄em±y_begö
(),

337 
èbÀ
.
	`n⁄em±y_íd
()); 
	}
}

338 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
,

339 
èbÀ
.
	`n⁄em±y_íd
(),

340 
èbÀ
.
	`n⁄em±y_íd
()); 
	}
}

343 
de°ru˘ive_ôî©‹
 
	$de°ru˘ive_begö
() {

344  
	`de°ru˘ive_ôî©‹
(
this
, 
èbÀ
.
	`de°ru˘ive_begö
(),

345 
èbÀ
.
	`de°ru˘ive_íd
());

346 
	}
}

347 
de°ru˘ive_ôî©‹
 
	$de°ru˘ive_íd
() {

348  
	`de°ru˘ive_ôî©‹
(
this
, 
èbÀ
.
	`de°ru˘ive_íd
(),

349 
èbÀ
.
	`de°ru˘ive_íd
());

350 
	}
}

354 
hashî
 
	$hash_fun˘
(Ëc⁄° {  
hash
; 
	}
}

355 
key_equÆ
 
	$key_eq
(Ëc⁄° {  
equÆs
; 
	}
}

362 
	g¥iv©e
:

363 
	$£t_vÆue
(
vÆue_ty≥
* 
d°
, c⁄° vÆue_ty≥ 
§c
) {

364 
d°
->~
	`vÆue_ty≥
();

365 
	`√w
(
d°
Ë
	`vÆue_ty≥
(
§c
);

366 
	}
}

372 
	eMoveD⁄tC›yT
 {
	gMoveD⁄tC›y
, 
	gMoveD⁄tGrow
};

381 
	g¥iv©e
:

382 
	$squash_dñëed
() {

383 i‡–
num_dñëed
 ) {

384 
•¨£_hashèbÀ
 
	`tmp
(
MoveD⁄tGrow
, *
this
);

385 
	`sw≠
(
tmp
);

387 
	`as£π
(
num_dñëed
 == 0);

388 
	}
}

390 
	gpublic
:

391 
	$£t_dñëed_key
(c⁄° 
vÆue_ty≥
 &
vÆ
) {

393 
	`squash_dñëed
();

394 
u£_dñëed
 = 
åue
;

395 
	`£t_vÆue
(&
dñvÆ
, 
vÆ
);

396 
	}
}

397 
	$˛ór_dñëed_key
() {

398 
	`squash_dñëed
();

399 
u£_dñëed
 = 
Ál£
;

400 
	}
}

404 
boﬁ
 
	$ã°_dñëed
(
size_ty≥
 
bucknum
) const {

407  (
u£_dñëed
 && 
num_dñëed
 > 0 && 
èbÀ
.
	`ã°
(
bucknum
) &&

408 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(
èbÀ
.
	`gë
(
bucknum
))));

409 
	}
}

410 
boﬁ
 
	$ã°_dñëed
(c⁄° 
ôî©‹
 &
ô
) const {

411  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

412 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(*
ô
)));

413 
	}
}

414 
boﬁ
 
	$ã°_dñëed
(c⁄° 
c⁄°_ôî©‹
 &
ô
) const {

415  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

416 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(*
ô
)));

417 
	}
}

418 
boﬁ
 
	$ã°_dñëed
(c⁄° 
de°ru˘ive_ôî©‹
 &
ô
) const {

419  (
u£_dñëed
 && 
num_dñëed
 > 0 &&

420 
	`equÆs
(
	`gë_key
(
dñvÆ
), gë_key(*
ô
)));

421 
	}
}

424 
boﬁ
 
	$£t_dñëed
(
c⁄°_ôî©‹
 &
ô
) {

425 
	`as£π
(
u£_dñëed
);

426 
boﬁ
 
ªtvÆ
 = !
	`ã°_dñëed
(
ô
);

428 
	`£t_vÆue
(
c⁄°_ˇ°
<
vÆue_ty≥
*>(&(*
ô
)), 
dñvÆ
);

429  
ªtvÆ
;

430 
	}
}

432 
boﬁ
 
	$˛ór_dñëed
(
c⁄°_ôî©‹
 &
ô
) {

433 
	`as£π
(
u£_dñëed
);

435  
	`ã°_dñëed
(
ô
);

436 
	}
}

440 
size_ty≥
 
	$size
(Ëc⁄° {  
èbÀ
.
	`num_n⁄em±y
(Ë- 
num_dñëed
; 
	}
}

442 
size_ty≥
 
	$max_size
(Ëc⁄° {  (
	`size_ty≥
(-1Ë>> 1UË+ 1; 
	}
}

443 
boﬁ
 
	$em±y
(Ëc⁄° {  
	`size
(Ë=0; 
	}
}

444 
size_ty≥
 
	$buckë_cou¡
(Ëc⁄° {  
èbÀ
.
	`size
(); 
	}
}

445 
size_ty≥
 
	$max_buckë_cou¡
(Ëc⁄° {  
	`max_size
(); 
	}
}

447 
	g¥iv©e
:

449 c⁄° 
size_ty≥
 
ILLEGAL_BUCKET
 = size_type(-1);

451 
	g¥iv©e
:

454 
size_ty≥
 
	$mö_size
(
size_ty≥
 
num_ñts
, size_ty≥ 
mö_buckës_w™ãd
) {

455 
size_ty≥
 
sz
 = 
HT_MIN_BUCKETS
;

456  
sz
 < 
mö_buckës_w™ãd
 || 
num_ñts
 >sz * 
HT_OCCUPANCY_FLT
 )

457 
sz
 *= 2;

458  
sz
;

459 
	}
}

462 
	$maybe_shrök
() {

463 
	`as£π
(
èbÀ
.
	`num_n⁄em±y
(Ë>
num_dñëed
);

464 
	`as£π
((
	`buckë_cou¡
() & (bucket_count()-1)) == 0);

465 
	`as£π
(
	`buckë_cou¡
(Ë>
HT_MIN_BUCKETS
);

467 i‡–(
èbÀ
.
	`num_n⁄em±y
()-
num_dñëed
Ë<
shrök_thªshﬁd
 &&

468 
	`buckë_cou¡
(Ë> 
HT_MIN_BUCKETS
 ) {

469 
size_ty≥
 
sz
 = 
	`buckë_cou¡
() / 2;

470  
sz
 > 
HT_MIN_BUCKETS
 &&

471 (
èbÀ
.
	`num_n⁄em±y
(Ë- 
num_dñëed
Ë<
sz
 * 
HT_EMPTY_FLT
 )

472 
sz
 /= 2;

473 
•¨£_hashèbÀ
 
	`tmp
(
MoveD⁄tC›y
, *
this
, 
sz
);

474 
	`sw≠
(
tmp
);

476 
c⁄sidî_shrök
 = 
Ál£
;

477 
	}
}

481 
	$ªsize_dñè
(
size_ty≥
 
dñè
, size_ty≥ 
mö_buckës_w™ãd
 = 0) {

482 i‡–
c⁄sidî_shrök
 )

483 
	`maybe_shrök
();

484 i‡–
	`buckë_cou¡
(Ë> 
mö_buckës_w™ãd
 &&

485 (
èbÀ
.
	`num_n⁄em±y
(Ë+ 
dñè
Ë<
íœrge_thªshﬁd
 )

488 c⁄° 
size_ty≥
 
ªsize_to
 = 
	`mö_size
(
èbÀ
.
	`num_n⁄em±y
(Ë+ 
dñè
,

489 
mö_buckës_w™ãd
);

490 i‡–
ªsize_to
 > 
	`buckë_cou¡
() ) {

491 
•¨£_hashèbÀ
 
	`tmp
(
MoveD⁄tC›y
, *
this
, 
ªsize_to
);

492 
	`sw≠
(
tmp
);

494 
	}
}

497 
	$c›y_‰om
(c⁄° 
•¨£_hashèbÀ
 &
ht
, 
size_ty≥
 
mö_buckës_w™ãd
 = 0) {

498 
	`˛ór
();

501 c⁄° 
size_ty≥
 
ªsize_to
 = 
	`mö_size
(
ht
.
	`size
(), 
mö_buckës_w™ãd
);

502 i‡–
ªsize_to
 > 
	`buckë_cou¡
() ) {

503 
èbÀ
.
	`ªsize
(
ªsize_to
);

504 
	`ª£t_thªshﬁds
();

510 
	`as£π
–(
	`buckë_cou¡
() & (bucket_count()-1)) == 0);

511  
c⁄°_ôî©‹
 
ô
 = 
ht
.
	`begö
(); ià!ht.
	`íd
(); ++it ) {

512 
size_ty≥
 
num_¥obes
 = 0;

513 
size_ty≥
 
bucknum
;

514 c⁄° 
size_ty≥
 
buckë_cou¡_möus_⁄e
 = 
	`buckë_cou¡
() - 1;

515 
bucknum
 = 
	`hash
(
	`gë_key
(*
ô
)Ë& 
buckë_cou¡_möus_⁄e
;

516 
èbÀ
.
	`ã°
(
bucknum
);

517 
bucknum
 = (bucknum + 
	`JUMP_
(
key
, 
num_¥obes
)Ë& 
buckë_cou¡_möus_⁄e
) {

518 ++
num_¥obes
;

519 
	`as£π
(
num_¥obes
 < 
	`buckë_cou¡
());

521 
èbÀ
.
	`£t
(
bucknum
, *
ô
);

523 
	}
}

528 
	$move_‰om
(
MoveD⁄tC›yT
 
movî
, 
•¨£_hashèbÀ
 &
ht
,

529 
size_ty≥
 
mö_buckës_w™ãd
 = 0) {

530 
	`˛ór
();

533 
size_t
 
ªsize_to
;

534 i‡–
movî
 =
MoveD⁄tGrow
 )

535 
ªsize_to
 = 
ht
.
	`buckë_cou¡
();

537 
ªsize_to
 = 
	`mö_size
(
ht
.
	`size
(), 
mö_buckës_w™ãd
);

538 i‡–
ªsize_to
 > 
	`buckë_cou¡
() ) {

539 
èbÀ
.
	`ªsize
(
ªsize_to
);

540 
	`ª£t_thªshﬁds
();

546 
	`as£π
–(
	`buckë_cou¡
() & (bucket_count()-1)) == 0);

548  
de°ru˘ive_ôî©‹
 
ô
 = 
ht
.
	`de°ru˘ive_begö
();

549 
ô
 !
ht
.
	`de°ru˘ive_íd
(); ++it ) {

550 
size_ty≥
 
num_¥obes
 = 0;

551 
size_ty≥
 
bucknum
;

552  
bucknum
 = 
	`hash
(
	`gë_key
(*
ô
)Ë& (
	`buckë_cou¡
()-1);

553 
èbÀ
.
	`ã°
(
bucknum
);

554 
bucknum
 = (bucknum + 
	`JUMP_
(
key
, 
num_¥obes
)Ë& (
	`buckë_cou¡
()-1) ) {

555 ++
num_¥obes
;

556 
	`as£π
(
num_¥obes
 < 
	`buckë_cou¡
());

558 
èbÀ
.
	`£t
(
bucknum
, *
ô
);

560 
	}
}

564 
	gpublic
:

568 
	$ªsize
(
size_ty≥
 
ªq_ñemíts
) {

569 i‡–
c⁄sidî_shrök
 || 
ªq_ñemíts
 == 0 )

570 
	`maybe_shrök
();

571 i‡–
ªq_ñemíts
 > 
èbÀ
.
	`num_n⁄em±y
() )

572 
	`ªsize_dñè
(
ªq_ñemíts
 - 
èbÀ
.
	`num_n⁄em±y
(), 0);

573 
	}
}

580 
ex∂icô
 
•¨£_hashèbÀ
(
size_ty≥
 
n
 = 0,

581 c⁄° 
HashF˙
& 
hf
 = HashFcn(),

582 c⁄° 
EquÆKey
& 
eql
 = EqualKey(),

583 c⁄° 
Exåa˘Key
& 
ext
 = 
	$Exåa˘Key
())

584 : 
	`hash
(
hf
), 
	`equÆs
(
eql
), 
	`gë_key
(
ext
), 
	`num_dñëed
(0),

585 
	`u£_dñëed
(
Ál£
), 
	`dñvÆ
(), 
	`èbÀ
(
	$mö_size
(0, 
n
)) {

586 
	`ª£t_thªshﬁds
();

587 
	}
}

593 
	$•¨£_hashèbÀ
(c⁄° 
•¨£_hashèbÀ
& 
ht
, 
size_ty≥
 
mö_buckës_w™ãd
 = 0)

594 : 
	`hash
(
ht
.
hash
), 
	`equÆs
(ht.
equÆs
), 
	`gë_key
(ht.
gë_key
),

595 
	`num_dñëed
(0), 
	`u£_dñëed
(
ht
.
u£_dñëed
), 
	`dñvÆ
(ht.
dñvÆ
), 
	$èbÀ
() {

596 
	`ª£t_thªshﬁds
();

597 
	`c›y_‰om
(
ht
, 
mö_buckës_w™ãd
);

598 
	}
}

599 
	$•¨£_hashèbÀ
(
MoveD⁄tC›yT
 
movî
, 
•¨£_hashèbÀ
& 
ht
,

600 
size_ty≥
 
mö_buckës_w™ãd
=0)

601 : 
	`hash
(
ht
.
hash
), 
	`equÆs
(ht.
equÆs
), 
	`gë_key
(ht.
gë_key
),

602 
	`num_dñëed
(0), 
	`u£_dñëed
(
ht
.
u£_dñëed
), 
	`dñvÆ
(ht.
dñvÆ
), 
	$èbÀ
() {

603 
	`ª£t_thªshﬁds
();

604 
	`move_‰om
(
movî
, 
ht
, 
mö_buckës_w™ãd
);

605 
	}
}

607 
	g•¨£_hashèbÀ
& 
	g›î©‹
(c⁄° 
•¨£_hashèbÀ
& 
ht
) {

608 i‡(&
ht
 =
this
)  *this;

609 
˛ór
();

610 
	ghash
 = 
ht
.
hash
;

611 
	gequÆs
 = 
ht
.
equÆs
;

612 
	ggë_key
 = 
ht
.
gë_key
;

613 
	gu£_dñëed
 = 
ht
.
u£_dñëed
;

614 
£t_vÆue
(&
dñvÆ
, 
ht
.delval);

615 
c›y_‰om
(
ht
);

616  *
	gthis
;

620 
	$sw≠
(
•¨£_hashèbÀ
& 
ht
) {

621 
STL_NAMESPACE
::
	`sw≠
(
hash
, 
ht
.hash);

622 
STL_NAMESPACE
::
	`sw≠
(
equÆs
, 
ht
.equals);

623 
STL_NAMESPACE
::
	`sw≠
(
gë_key
, 
ht
.get_key);

624 
STL_NAMESPACE
::
	`sw≠
(
num_dñëed
, 
ht
.num_deleted);

625 
STL_NAMESPACE
::
	`sw≠
(
u£_dñëed
, 
ht
.use_deleted);

626 { 
vÆue_ty≥
 
tmp
;

627 
	`£t_vÆue
(&
tmp
, 
dñvÆ
);

628 
	`£t_vÆue
(&
dñvÆ
, 
ht
.delval);

629 
	`£t_vÆue
(&
ht
.
dñvÆ
, 
tmp
);

631 
èbÀ
.
	`sw≠
(
ht
.table);

632 
	`ª£t_thªshﬁds
();

633 
ht
.
	`ª£t_thªshﬁds
();

634 
	}
}

637 
	$˛ór
() {

638 
èbÀ
.
	`˛ór
();

639 
	`ª£t_thªshﬁds
();

640 
num_dñëed
 = 0;

641 
	}
}

645 
	g¥iv©e
:

651 
∑ú
<
size_ty≥
, 
	gsize_ty≥
> 
	$föd_posôi⁄
(c⁄° 
key_ty≥
 &
key
) const {

652 
size_ty≥
 
num_¥obes
 = 0;

653 c⁄° 
size_ty≥
 
buckë_cou¡_möus_⁄e
 = 
	`buckë_cou¡
() - 1;

654 
size_ty≥
 
bucknum
 = 
	`hash
(
key
Ë& 
buckë_cou¡_möus_⁄e
;

655 
size_ty≥
 
ö£π_pos
 = 
ILLEGAL_BUCKET
;

656 
	`SPARSEHASH_STAT_UPDATE
(
tŸÆ_lookups
 += 1);

658 i‡–!
èbÀ
.
	`ã°
(
bucknum
) ) {

659 
	`SPARSEHASH_STAT_UPDATE
(
tŸÆ_¥obes
 +
num_¥obes
);

660 i‡–
ö£π_pos
 =
ILLEGAL_BUCKET
 )

661  
∑ú
<
size_ty≥
,size_ty≥>(
ILLEGAL_BUCKET
, 
bucknum
);

663  
∑ú
<
size_ty≥
,size_ty≥>(
ILLEGAL_BUCKET
, 
ö£π_pos
);

665 } i‡–
	`ã°_dñëed
(
bucknum
) ) {

666 i‡–
ö£π_pos
 =
ILLEGAL_BUCKET
 )

667 
ö£π_pos
 = 
bucknum
;

669 } i‡–
	`equÆs
(
key
, 
	`gë_key
(
èbÀ
.
	`gë
(
bucknum
))) ) {

670 
	`SPARSEHASH_STAT_UPDATE
(
tŸÆ_¥obes
 +
num_¥obes
);

671  
∑ú
<
size_ty≥
,size_ty≥>(
bucknum
, 
ILLEGAL_BUCKET
);

673 ++
num_¥obes
;

674 
bucknum
 = (bucknum + 
	`JUMP_
(
key
, 
num_¥obes
)Ë& 
buckë_cou¡_möus_⁄e
;

675 
	`as£π
(
num_¥obes
 < 
	`buckë_cou¡
());

677 
	}
}

679 
	gpublic
:

680 
ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
) {

681 i‡–
	`size
(Ë=0 )  
	`íd
();

682 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

683 i‡–
pos
.
fú°
 =
ILLEGAL_BUCKET
 )

684  
	`íd
();

686  
	`ôî©‹
(
this
, 
èbÀ
.
	`gë_ôî
(
pos
.
fú°
),ÅabÀ.
	`n⁄em±y_íd
());

687 
	}
}

689 
c⁄°_ôî©‹
 
	$föd
(c⁄° 
key_ty≥
& 
key
) const {

690 i‡–
	`size
(Ë=0 )  
	`íd
();

691 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

692 i‡–
pos
.
fú°
 =
ILLEGAL_BUCKET
 )

693  
	`íd
();

695  
	`c⁄°_ôî©‹
(
this
,

696 
èbÀ
.
	`gë_ôî
(
pos
.
fú°
),ÅabÀ.
	`n⁄em±y_íd
());

697 
	}
}

700 
size_ty≥
 
	$cou¡
(c⁄° 
key_ty≥
 &
key
) const {

701 
∑ú
<
size_ty≥
, size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
key
);

702  
pos
.
fú°
 =
ILLEGAL_BUCKET
 ? 0 : 1;

703 
	}
}

706 
	g∑ú
<
	gôî©‹
,ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) {

707 c⁄° 
ôî©‹
 
pos
 = 
	`föd
(
key
);

708  
∑ú
<
ôî©‹
,ôî©‹>(
pos
,Öos);

709 
	}
}

710 
	g∑ú
<
	gc⁄°_ôî©‹
,c⁄°_ôî©‹> 
	$equÆ_ønge
(c⁄° 
key_ty≥
& 
key
) const {

711 c⁄° 
c⁄°_ôî©‹
 
pos
 = 
	`föd
(
key
);

712  
∑ú
<
ôî©‹
,ôî©‹>(
pos
,Öos);

713 
	}
}

717 
	g¥iv©e
:

719 
∑ú
<
ôî©‹
, 
	gboﬁ
> 
	$ö£π_n‹esize
(c⁄° 
vÆue_ty≥
& 
obj
) {

720 c⁄° 
∑ú
<
size_ty≥
,size_ty≥> 
pos
 = 
	`föd_posôi⁄
(
	`gë_key
(
obj
));

721 i‡–
pos
.
fú°
 !
ILLEGAL_BUCKET
) {

722  
∑ú
<
ôî©‹
,
boﬁ
>(
	`ôî©‹
(
this
, 
èbÀ
.
	`gë_ôî
(
pos
.
fú°
),

723 
èbÀ
.
	`n⁄em±y_íd
()),

724 
Ál£
);

726 i‡–
	`ã°_dñëed
(
pos
.
£c⁄d
) ) {

728 
	`as£π
(
num_dñëed
 > 0);

729 --
num_dñëed
;

731 
èbÀ
.
	`£t
(
pos
.
£c⁄d
, 
obj
);

732  
∑ú
<
ôî©‹
,
boﬁ
>(
	`ôî©‹
(
this
, 
èbÀ
.
	`gë_ôî
(
pos
.
£c⁄d
),

733 
èbÀ
.
	`n⁄em±y_íd
()),

734 
åue
);

736 
	}
}

738 
	gpublic
:

740 
∑ú
<
ôî©‹
, 
	gboﬁ
> 
	$ö£π
(c⁄° 
vÆue_ty≥
& 
obj
) {

741 
	`ªsize_dñè
(1);

742  
	`ö£π_n‹esize
(
obj
);

743 
	}
}

745 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


747 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

748 
	$ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
) {

750 
	`ö£π
(
f
, 
l
, 
ty≥«me
 
STL_NAMESPACE
::
ôî©‹_åaôs
<
I≈utIãøt‹
>::
	`ôî©‹_ˇãg‹y
());

751 
	}
}

754 
	gãm∂©e
 <
˛ass
 
	gF‹w¨dIãøt‹
>

755 
ö£π
(
F‹w¨dIãøt‹
 
f
, F‹w¨dIãøt‹ 
l
,

756 
STL_NAMESPACE
::
f‹w¨d_ôî©‹_èg
) {

757 
size_ty≥
 
n
 = 
STL_NAMESPACE
::
di°™˚
(
f
, 
l
);

758 
ªsize_dñè
(
n
);

759  ; 
	gn
 > 0; --n, ++
	gf
)

760 
ö£π_n‹esize
(*
f
);

764 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

765 
ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
,

766 
STL_NAMESPACE
::
öput_ôî©‹_èg
) {

767  ; 
	gf
 !
l
; ++f)

768 
ö£π
(*
f
);

771 
	gãm∂©e
 <
˛ass
 
	gI≈utIãøt‹
>

772 
	$ö£π
(
I≈utIãøt‹
 
f
, I≈utIãøt‹ 
l
) {

773  ; 
f
 !
l
; ++f)

774 
	`ö£π
(*
f
);

775 
	}
}

780 
size_ty≥
 
	$îa£
(c⁄° 
key_ty≥
& 
key
) {

781 
c⁄°_ôî©‹
 
pos
 = 
	`föd
(
key
);

782 i‡–
pos
 !
	`íd
() ) {

783 
	`as£π
(!
	`ã°_dñëed
(
pos
));

784 
	`£t_dñëed
(
pos
);

785 ++
num_dñëed
;

786 
c⁄sidî_shrök
 = 
åue
;

791 
	}
}

796 
	$îa£
(
c⁄°_ôî©‹
 
pos
) {

797 i‡–
pos
 =
	`íd
() ) ;

798 i‡–
	`£t_dñëed
(
pos
) ) {

799 ++
num_dñëed
;

800 
c⁄sidî_shrök
 = 
åue
;

802 
	}
}

804 
	$îa£
(
c⁄°_ôî©‹
 
f
, c⁄°_ôî©‹ 
l
) {

805  ; 
f
 !
l
; ++f) {

806 i‡–
	`£t_dñëed
(
f
) )

807 ++
num_dñëed
;

809 
c⁄sidî_shrök
 = 
åue
;

810 
	}
}

814 
boﬁ
 
	g›î©‹
==(c⁄° 
•¨£_hashèbÀ
& 
ht
) const {

817  ( 
num_dñëed
 =
ht
.num_dñëed && 
èbÀ
 == ht.table );

819 
boﬁ
 
	g›î©‹
!=(c⁄° 
•¨£_hashèbÀ
& 
ht
) const {

820  !(*
this
 =
ht
);

830 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
) {

831 
	`squash_dñëed
();

832  
èbÀ
.
	`wrôe_mëad©a
(
Â
);

833 
	}
}

835 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
) {

836 
num_dñëed
 = 0;

837 
boﬁ
 
ªsu…
 = 
èbÀ
.
	`ªad_mëad©a
(
Â
);

838 
	`ª£t_thªshﬁds
();

839  
ªsu…
;

840 
	}
}

843 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
) {

844  
èbÀ
.
	`wrôe_n›oöãr_d©a
(
Â
);

845 
	}
}

848 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
) {

849  
èbÀ
.
	`ªad_n›oöãr_d©a
(
Â
);

850 
	}
}

852 
	g¥iv©e
:

854 
hashî
 
hash
;

855 
key_equÆ
 
	gequÆs
;

856 
Exåa˘Key
 
	ggë_key
;

857 
size_ty≥
 
	gnum_dñëed
;

858 
boﬁ
 
	gu£_dñëed
;

859 
vÆue_ty≥
 
	gdñvÆ
;

860 
	g•¨£èbÀ
<
	gvÆue_ty≥
> 
	gèbÀ
;

861 
size_ty≥
 
	gshrök_thªshﬁd
;

862 
size_ty≥
 
	gíœrge_thªshﬁd
;

863 
boﬁ
 
	gc⁄sidî_shrök
;

865 
	$ª£t_thªshﬁds
() {

866 
íœrge_thªshﬁd
 = 
°©ic_ˇ°
<
size_ty≥
>(
èbÀ
.
	`size
()*
HT_OCCUPANCY_FLT
);

867 
shrök_thªshﬁd
 = 
°©ic_ˇ°
<
size_ty≥
>(
èbÀ
.
	`size
()*
HT_EMPTY_FLT
);

868 
c⁄sidî_shrök
 = 
Ál£
;

869 
	}
}

873 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

874 
ölöe
 
sw≠
(
•¨£_hashèbÀ
<
V
,
K
,
HF
,
ExK
,
EqK
,
A
> &
x
,

875 
•¨£_hashèbÀ
<
V
,
K
,
HF
,
ExK
,
EqK
,
A
> &
y
) {

876 
	gx
.
sw≠
(
y
);

879 #unde‡
JUMP_


881 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

882 c⁄° 
ty≥«me
 
	g•¨£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
size_ty≥


883 
•¨£_hashèbÀ
<
V
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
ILLEGAL_BUCKET
;

887 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

888 c⁄° 
	g•¨£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_OCCUPANCY_FLT
 = 0.8f;

892 
	gãm∂©e
 <
˛ass
 
	gV
, cœs†
	gK
, cœs†
	gHF
, cœs†
	gExK
, cœs†
	gEqK
, cœs†
	gA
>

893 c⁄° 
	g•¨£_hashèbÀ
<
	gV
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_EMPTY_FLT
 = 0.4 *

894 
•¨£_hashèbÀ
<
V
,
	gK
,
	gHF
,
	gExK
,
	gEqK
,
	gA
>::
HT_OCCUPANCY_FLT
;

896 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/param.h

1 #i‚de‡
_ASM_X86_PARAM_H


2 
	#_ASM_X86_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 
	#EXEC_PAGESIZE
 4096

	)

11 #i‚de‡
NOGROUP


12 
	#NOGROUP
 (-1)

	)

15 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

52 
	#SO_TIMESTAMPNS
 35

	)

53 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

92 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

165 
	#__√ed_timevÆ


	)

166 
	~<bôs/time.h
>

169 
	srußge


172 
timevÆ
 
	mru_utime
;

174 
timevÆ
 
	mru_°ime
;

176 
	mru_maxrss
;

179 
	mru_ixrss
;

181 
	mru_idrss
;

183 
	mru_i§ss
;

186 
	mru_möÊt
;

188 
	mru_majÊt
;

190 
	mru_nsw≠
;

193 
	mru_öblock
;

195 
	mru_oublock
;

197 
	mru_msg¢d
;

199 
	mru_msgrcv
;

201 
	mru_nsig«ls
;

205 
	mru_nvcsw
;

208 
	mru_nivcsw
;

212 
	#PRIO_MIN
 -20

	)

213 
	#PRIO_MAX
 20

	)

217 
	e__¥i‹ôy_which


219 
	mPRIO_PROCESS
 = 0,

220 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

221 
	mPRIO_PGRP
 = 1,

222 
	#PRIO_PGRP
 
PRIO_PGRP


	)

223 
	mPRIO_USER
 = 2

224 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_STOPPED
 0x02000000

	)

66 
	ssched_∑øm


68 
	m__sched_¥i‹ôy
;

71 
	g__BEGIN_DECLS


73 #ifde‡
__USE_MISC


75 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

76 
__Êags
, *
__¨g
, ...Ë
__THROW
;

79 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

82 
	$sched_gë˝u
 (Ë
__THROW
;

85 
__END_DECLS


89 #i‡!
deföed
 
__deföed_sched∑øm
 \

90 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

91 
	#__deföed_sched∑øm
 1

	)

93 
	s__sched_∑øm


95 
__sched_¥i‹ôy
;

97 #unde‡
__√ed_sched∑øm


101 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


102 
	#__˝u_£t_t_deföed


	)

104 
	#__CPU_SETSIZE
 1024

	)

105 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

108 
	t__˝u_mask
;

111 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

112 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

117 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

118 } 
	t˝u_£t_t
;

121 #i‡
	`__GNUC_PREREQ
 (2, 91)

122 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

123 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

125 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

127 
size_t
 
__i
; \

128 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

129 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

130 
__i
 = 0; __ò< 
__imax
; ++__i) \

131 
__¨r
->
__bôs
[
__i
] = 0; \

132 
	}
} 0)

	)

134 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

135 (
__exãnsi⁄__
 \

136 ({ 
size_t
 
__˝u
 = (
˝u
); \

137 
__˝u
 < 8 * (
£tsize
) \

138 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] |
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

139 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] &~
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

144 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 < 8 * (
£tsize
) \

148 ? (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] & 
	`__CPUMASK
 (__cpu))) != 0 \

149 : 0; }))

	)

151 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

152 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

154 #i‡
__GNUC_PREREQ
 (2, 91)

155 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

156 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

158 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

159 (
__exãnsi⁄__
 \

160 ({ 
˝u_£t_t
 *
__¨r1
 = (
˝u£ç1
); \

161 
˝u_£t_t
 *
__¨r2
 = (
˝u£ç2
); \

162 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

163 
size_t
 
__i
; \

164 
__i
 = 0; __ò< 
__imax
; ++__i) \

165 i‡(
__¨r1
->
__bôs
[
__i
] !
__¨r2
->__bits[__i]) \

167 
__i
 =
__imax
; }))

	)

170 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

171 (
__exãnsi⁄__
 \

172 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

173 
˝u_£t_t
 *
__¨r1
 = (
§c£t1
); \

174 
˝u_£t_t
 *
__¨r2
 = (
§c£t2
); \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 
__de°
->
__bôs
[
__i
] = 
__¨r1
->__bôs[__i] 
›
 
__¨r2
->__bits[__i]; \

179 
__de°
; }))

	)

181 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

182 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË* 8)

	)

183 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

184 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

186 
__BEGIN_DECLS


188 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

189 
__THROW
;

190 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

191 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

193 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/google/sparsetable

56 #i‚de‡
_SPARSETABLE_H_


57 
	#_SPARSETABLE_H_


	)

59 
	~<googÀ/•¨£hash/c⁄fig.h
>

60 
	~<°dlib.h
>

61 
	~<°dio.h
>

62 #ifde‡
HAVE_SYS_TYPES_H


63 
	~<sys/ty≥s.h
>

65 #ifde‡
HAVE_STDINT_H


66 
	~<°döt.h
>

68 #ifde‡
HAVE_INTTYPES_H


69 
	~<öây≥s.h
>

71 
	~<as£π.h
>

72 
	~<ôî©‹
>

73 
	~<Æg‹ôhm
>

74 
	~<mem‹y
>

75 
	~<ve˘‹
>

76 
	~<googÀ/ty≥_åaôs.h
>

78 #i‡
STDC_HEADERS


79 
	~<°rög.h
>

81 #i‡!
HAVE_MEMCPY


82 
	#mem˝y
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

83 
	#memmove
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

87 #i‡!
deföed
 
HAVE_U_INT16_T
 && deföed 
HAVE___UINT16


88 
__uöt16
 
	tu_öt16_t


91 
	t_START_GOOGLE_NAMESPACE_


93 
	tusög
 
	tSTL_NAMESPACE
::
	tve˘‹
;

94 
usög
 
	gSTL_NAMESPACE
::
unöôülized_c›y
;

100 c⁄° 
u_öt16_t
 
	gDEFAULT_SPARSEGROUP_SIZE
 = 48;

115 
	gãm∂©e
 <
˛ass
 
	gèbÀty≥
>

116 ˛as†
	cèbÀ_ñemít_ad≠t‹
 {

117 
	mpublic
:

118 
ty≥«me
 
	tèbÀty≥
::
	tvÆue_ty≥
 value_type;

119 
ty≥«me
 
	tèbÀty≥
::
	tsize_ty≥
 size_type;

120 
ty≥«me
 
	tèbÀty≥
::
	tª„ªn˚
Ñeference;

121 
ty≥«me
 
	tèbÀty≥
::
	tpoöãr
Öointer;

123 
	$èbÀ_ñemít_ad≠t‹
(
èbÀty≥
 *
tbl
, 
size_ty≥
 
p
)

124 : 
	`èbÀ
(
tbl
), 
	$pos
(
p
) { }

125 
èbÀ_ñemít_ad≠t‹
& 
›î©‹
(c⁄° 
vÆue_ty≥
 &
vÆ
) {

126 
èbÀ
->
	`£t
(
pos
, 
vÆ
);

127  *
this
;

128 
	}
}

129 
›î©‹
 
	$vÆue_ty≥
(Ë{  
èbÀ
->
	`gë
(
pos
); 
	}
}

130 
poöãr
 
	g›î©‹
& (Ë{  &
	gèbÀ
->
muètög_gë
(
pos
); }

132 
	g¥iv©e
:

133 
èbÀty≥
* 
èbÀ
;

134 
size_ty≥
 
	gpos
;

147 
	gãm∂©e
 <
˛ass
 
	gèbÀty≥
>

148 ˛as†
	cèbÀ_ôî©‹
 {

149 
	mpublic
:

150 
èbÀ_ôî©‹
 
	tôî©‹
;

152 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


153 
	mSTL_NAMESPACE
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

155 
ty≥«me
 
	tèbÀty≥
::
	tvÆue_ty≥
 value_type;

156 
ty≥«me
 
	tèbÀty≥
::
	tdif„ªn˚_ty≥
 difference_type;

157 
ty≥«me
 
	tèbÀty≥
::
	tsize_ty≥
 size_type;

158 
	mèbÀ_ñemít_ad≠t‹
<
	tèbÀty≥
> 
	tª„ªn˚
;

159 
	mèbÀ_ñemít_ad≠t‹
<
	tèbÀty≥
>* 
	tpoöãr
;

162 
	$èbÀ_ôî©‹
(
èbÀty≥
 *
tbl
, 
size_ty≥
 
p
)

163 : 
	`èbÀ
(
tbl
), 
	$pos
(
p
) { }

165 
	$èbÀ_ôî©‹
(Ë: 
	`èbÀ
(
NULL
), 
	$pos
(0Ë{ 
	}
}

173 
ª„ªn˚
 
	g›î©‹
*() {

174  
	gèbÀ_ñemít_ad≠t‹
<
	gèbÀty≥
>(
	gèbÀ
, 
	gpos
);

176 
poöãr
 
	g›î©‹
->() {  &(operator*()); }

179 
	$check
() const {

180 
	`as£π
(
èbÀ
);

181 
	`as£π
(
pos
 <
èbÀ
->
	`size
());

182 
	}
}

186 
	gôî©‹
& 
	g›î©‹
+=(
size_ty≥
 
t
Ë{ 
pos
 +t; 
check
();  *
	gthis
; }

187 
	gôî©‹
& 
	g›î©‹
-=(
size_ty≥
 
t
Ë{ 
pos
 -t; 
check
();  *
	gthis
; }

188 
	gôî©‹
& 
	g›î©‹
++(Ë{ ++
	gpos
; 
check
();  *
	gthis
; }

189 
	gôî©‹
& 
	g›î©‹
--(Ë{ --
	gpos
; 
check
();  *
	gthis
; }

190 
ôî©‹
 
	g›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
);

191 ++
	gpos
; 
check
();  
	gtmp
; }

192 
ôî©‹
 
	g›î©‹
--(Ë{ iãøt‹ 
tmp
(*
this
);

193 --
	gpos
; 
check
();  
	gtmp
; }

194 
ôî©‹
 
	g›î©‹
+(
dif„ªn˚_ty≥
 
	gi
Ëc⁄° { iãøt‹ 
tmp
(*
this
);

195 
	gtmp
 +
i
; Åmp; }

196 
ôî©‹
 
	g›î©‹
-(
dif„ªn˚_ty≥
 
	gi
Ëc⁄° { iãøt‹ 
tmp
(*
this
);

197 
	gtmp
 -
i
; Åmp; }

198 
dif„ªn˚_ty≥
 
	g›î©‹
-(
ôî©‹
 
	gô
) const {

199 
as£π
(
èbÀ
 =
ô
.table);

200  
	gpos
 - 
	gô
.pos;

202 
ª„ªn˚
 
	g›î©‹
[](
dif„ªn˚_ty≥
 
	gn
) const {

203  *(*
	gthis
 + 
	gn
);

207 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
ô
) const {

208  
èbÀ
 =
ô
.èbÀ && 
pos
 == it.pos;

210 
boﬁ
 
	g›î©‹
<(c⁄° 
	gôî©‹
& 
	gô
) const {

211 
as£π
(
èbÀ
 =
ô
.table);

212  
	gpos
 < 
	gô
.pos;

214 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 == it); }

215 
boﬁ
 
	g›î©‹
<=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(ô < *
this
); }

216 
boﬁ
 
	g›î©‹
>(c⁄° 
	gôî©‹
& 
	gô
Ëc⁄° {  ià< *
	gthis
; }

217 
boﬁ
 
	g›î©‹
>=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 < it); }

220 
èbÀty≥
 *
	gèbÀ
;

221 
size_ty≥
 
	gpos
;

225 
	gãm∂©e
<
˛ass
 
	gT
>

226 
	gèbÀ_ôî©‹
<
	gT
> 
	g›î©‹
+(
ty≥«me
ÅabÀ_ôî©‹<T>::
dif„ªn˚_ty≥
 
i
,

227 
	gèbÀ_ôî©‹
<
	gT
> 
	gô
) {

228  
	gô
 + 
	gi
;

231 
	gãm∂©e
 <
˛ass
 
	gèbÀty≥
>

232 ˛as†
	cc⁄°_èbÀ_ôî©‹
 {

233 
	mpublic
:

234 
èbÀ_ôî©‹
<
	tèbÀty≥
> 
	tôî©‹
;

235 
c⁄°_èbÀ_ôî©‹
 
	tc⁄°_ôî©‹
;

237 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


238 
	mSTL_NAMESPACE
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

240 
ty≥«me
 
	tèbÀty≥
::
	tvÆue_ty≥
 value_type;

241 
ty≥«me
 
	tèbÀty≥
::
	tdif„ªn˚_ty≥
 difference_type;

242 
ty≥«me
 
	tèbÀty≥
::
	tsize_ty≥
 size_type;

243 
ty≥«me
 
	tèbÀty≥
::
	tc⁄°_ª„ªn˚
 
	tª„ªn˚
;

244 
ty≥«me
 
	tèbÀty≥
::
	tc⁄°_poöãr
 
	tpoöãr
;

247 
	$c⁄°_èbÀ_ôî©‹
(c⁄° 
èbÀty≥
 *
tbl
, 
size_ty≥
 
p
)

248 : 
	`èbÀ
(
tbl
), 
	$pos
(
p
) { }

250 
	$c⁄°_èbÀ_ôî©‹
(Ë: 
	`èbÀ
(
NULL
), 
	$pos
(0Ë{ 
	}
}

253 
	$c⁄°_èbÀ_ôî©‹
(c⁄° 
ôî©‹
 &
‰om
)

254 : 
	`èbÀ
(
‰om
.
èbÀ
), 
	$pos
(
‰om
.
pos
Ë{ 
	}
}

260 
ª„ªn˚
 
	g›î©‹
*(Ëc⁄° {  (*
	gèbÀ
)[
pos
]; }

261 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

264 
	$check
() const {

265 
	`as£π
(
èbÀ
);

266 
	`as£π
(
pos
 <
èbÀ
->
	`size
());

267 
	}
}

271 
	gc⁄°_ôî©‹
& 
	g›î©‹
+=(
size_ty≥
 
t
Ë{ 
pos
 +t; 
check
();  *
	gthis
; }

272 
	gc⁄°_ôî©‹
& 
	g›î©‹
-=(
size_ty≥
 
t
Ë{ 
pos
 -t; 
check
();  *
	gthis
; }

273 
	gc⁄°_ôî©‹
& 
	g›î©‹
++(Ë{ ++
	gpos
; 
check
();  *
	gthis
; }

274 
	gc⁄°_ôî©‹
& 
	g›î©‹
--(Ë{ --
	gpos
; 
check
();  *
	gthis
; }

275 
c⁄°_ôî©‹
 
	g›î©‹
++(Ë{ c⁄°_ôî©‹ 
tmp
(*
this
);

276 ++
	gpos
; 
check
();  
	gtmp
; }

277 
c⁄°_ôî©‹
 
	g›î©‹
--(Ë{ c⁄°_ôî©‹ 
tmp
(*
this
);

278 --
	gpos
; 
check
();  
	gtmp
; }

279 
c⁄°_ôî©‹
 
	g›î©‹
+(
dif„ªn˚_ty≥
 
	gi
Ëc⁄° { c⁄°_ôî©‹ 
tmp
(*
this
);

280 
	gtmp
 +
i
; Åmp; }

281 
c⁄°_ôî©‹
 
	g›î©‹
-(
dif„ªn˚_ty≥
 
	gi
Ëc⁄° { c⁄°_ôî©‹ 
tmp
(*
this
);

282 
	gtmp
 -
i
; Åmp; }

283 
dif„ªn˚_ty≥
 
	g›î©‹
-(
c⁄°_ôî©‹
 
	gô
) const {

284 
as£π
(
èbÀ
 =
ô
.table);

285  
	gpos
 - 
	gô
.pos;

287 
ª„ªn˚
 
	g›î©‹
[](
dif„ªn˚_ty≥
 
	gn
) const {

288  *(*
	gthis
 + 
	gn
);

292 
boﬁ
 
	g›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
ô
) const {

293  
èbÀ
 =
ô
.èbÀ && 
pos
 == it.pos;

295 
boﬁ
 
	g›î©‹
<(c⁄° 
	gc⁄°_ôî©‹
& 
	gô
) const {

296 
as£π
(
èbÀ
 =
ô
.table);

297  
	gpos
 < 
	gô
.pos;

299 
boﬁ
 
	g›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 == it); }

300 
boﬁ
 
	g›î©‹
<=(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  !(ô < *
this
); }

301 
boﬁ
 
	g›î©‹
>(c⁄° 
	gc⁄°_ôî©‹
& 
	gô
Ëc⁄° {  ià< *
	gthis
; }

302 
boﬁ
 
	g›î©‹
>=(c⁄° 
c⁄°_ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 < it); }

305 c⁄° 
èbÀty≥
 *
	gèbÀ
;

306 
size_ty≥
 
	gpos
;

310 
	gãm∂©e
<
˛ass
 
	gT
>

311 
	gc⁄°_èbÀ_ôî©‹
<
	gT
> 
	g›î©‹
+(
ty≥«me


312 
	gc⁄°_èbÀ_ôî©‹
<
	gT
>::
dif„ªn˚_ty≥
 
i
,

313 
	gc⁄°_èbÀ_ôî©‹
<
	gT
> 
	gô
) {

314  
	gô
 + 
	gi
;

340 
	#TWOD_BEGIN_
 
n⁄em±y_begö


	)

341 
	#TWOD_END_
 
n⁄em±y_íd


	)

342 
	#TWOD_ITER_
 
n⁄em±y_ôî©‹


	)

343 
	#TWOD_CONST_ITER_
 
c⁄°_n⁄em±y_ôî©‹


	)

345 
	gãm∂©e
 <
˛ass
 
	gc⁄èöîty≥
>

346 ˛as†
	ctwo_d_ôî©‹
 {

347 
	mpublic
:

348 
two_d_ôî©‹
 
	tôî©‹
;

350 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


351 
	mSTL_NAMESPACE
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

354 
ty≥«me
 
	tc⁄èöîty≥
::
	tvÆue_ty≥
 
	t_tmp_vt
;

355 
ty≥«me
 
	t_tmp_vt
::
	tvÆue_ty≥
 value_type;

356 
ty≥«me
 
	t_tmp_vt
::
	tdif„ªn˚_ty≥
 difference_type;

357 
ty≥«me
 
	t_tmp_vt
::
	tª„ªn˚
Ñeference;

358 
ty≥«me
 
	t_tmp_vt
::
	tpoöãr
Öointer;

362 
two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
begö
,

363 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
íd
,

364 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
cuº
)

365 : 
row_begö
(
begö
), 
row_íd
(
íd
), 
row_cuºít
(
cuº
), 
	$cﬁ_cuºít
() {

366 i‡–
row_cuºít
 !
row_íd
 ) {

367 
cﬁ_cuºít
 = 
row_cuºít
->
	`TWOD_BEGIN_
();

368 
	`adv™˚_∑°_íd
();

372 
	`two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
begö
,

373 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
íd
,

374 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
cuº
,

375 
ty≥«me
 
c⁄èöîty≥
::
vÆue_ty≥
::
TWOD_ITER_
 
cﬁ
)

376 : 
	`row_begö
(
begö
), 
	`row_íd
(
íd
), 
	`row_cuºít
(
cuº
), 
	$cﬁ_cuºít
(
cﬁ
) {

377 
	`adv™˚_∑°_íd
();

378 
	}
}

380 
	$two_d_ôî©‹
(Ë: 
	`row_begö
(), 
	`row_íd
(), 
	`row_cuºít
(), 
	$cﬁ_cuºít
(Ë{ 
	}
}

385 
ª„ªn˚
 
	g›î©‹
*(Ëc⁄° {  *
	gcﬁ_cuºít
; }

386 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

391 
	$adv™˚_∑°_íd
() {

392  
cﬁ_cuºít
 =
row_cuºít
->
	`TWOD_END_
() ) {

393 ++
row_cuºít
;

394 i‡–
row_cuºít
 !
row_íd
 )

395 
cﬁ_cuºít
 = 
row_cuºít
->
	`TWOD_BEGIN_
();

399 
	}
}

401 
	gôî©‹
& 
	g›î©‹
++() {

402 
as£π
(
row_cuºít
 !
row_íd
);

403 ++
	gcﬁ_cuºít
;

404 
adv™˚_∑°_íd
();

405  *
	gthis
;

407 
	gôî©‹
& 
	g›î©‹
--() {

408  
	grow_cuºít
 =
row_íd
 ||

409 
cﬁ_cuºít
 =
row_cuºít
->
TWOD_BEGIN_
() ) {

410 
as£π
(
row_cuºít
 !
row_begö
);

411 --
	grow_cuºít
;

412 
	gcﬁ_cuºít
 = 
row_cuºít
->
TWOD_END_
();

414 --
	gcﬁ_cuºít
;

415  *
	gthis
;

417 
ôî©‹
 
	g›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	gthis
;  
	gtmp
; }

418 
ôî©‹
 
	g›î©‹
--(Ë{ iãøt‹ 
tmp
(*
this
); --*
	gthis
;  
	gtmp
; }

422 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
ô
) const {

423  ( 
row_begö
 =
ô
.row_begin &&

424 
row_íd
 =
ô
.row_end &&

425 
row_cuºít
 =
ô
.row_current &&

426 (
row_cuºít
 =
row_íd
 || 
cﬁ_cuºít
 =
ô
.col_current) );

428 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 == it); }

433 
ty≥«me
 
	gc⁄èöîty≥
::
ôî©‹
 
row_begö
, 
	grow_íd
, 
	grow_cuºít
;

434 
ty≥«me
 
	gc⁄èöîty≥
::
vÆue_ty≥
::
TWOD_ITER_
 
cﬁ_cuºít
;

438 
	gãm∂©e
 <
˛ass
 
	gc⁄èöîty≥
>

439 ˛as†
	cc⁄°_two_d_ôî©‹
 {

440 
	mpublic
:

441 
c⁄°_two_d_ôî©‹
 
	tôî©‹
;

443 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


444 
	mSTL_NAMESPACE
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

447 
ty≥«me
 
	tc⁄èöîty≥
::
	tvÆue_ty≥
 
	t_tmp_vt
;

448 
ty≥«me
 
	t_tmp_vt
::
	tvÆue_ty≥
 value_type;

449 
ty≥«me
 
	t_tmp_vt
::
	tdif„ªn˚_ty≥
 difference_type;

450 
ty≥«me
 
	t_tmp_vt
::
	tc⁄°_ª„ªn˚
 
	tª„ªn˚
;

451 
ty≥«me
 
	t_tmp_vt
::
	tc⁄°_poöãr
 
	tpoöãr
;

453 
c⁄°_two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
begö
,

454 
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
íd
,

455 
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
cuº
)

456 : 
row_begö
(
begö
), 
row_íd
(
íd
), 
row_cuºít
(
cuº
), 
	$cﬁ_cuºít
() {

457 i‡–
cuº
 !
íd
 ) {

458 
cﬁ_cuºít
 = 
cuº
->
	`TWOD_BEGIN_
();

459 
	`adv™˚_∑°_íd
();

462 
	`c⁄°_two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
begö
,

463 
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
íd
,

464 
ty≥«me
 
c⁄èöîty≥
::
c⁄°_ôî©‹
 
cuº
,

465 
ty≥«me
 
c⁄èöîty≥
::
vÆue_ty≥
::
TWOD_CONST_ITER_
 
cﬁ
)

466 : 
	`row_begö
(
begö
), 
	`row_íd
(
íd
), 
	`row_cuºít
(
cuº
), 
	$cﬁ_cuºít
(
cﬁ
) {

467 
	`adv™˚_∑°_íd
();

468 
	}
}

469 
	$c⁄°_two_d_ôî©‹
()

470 : 
	`row_begö
(), 
	`row_íd
(), 
	`row_cuºít
(), 
	$cﬁ_cuºít
() {

471 
	}
}

473 
c⁄°_two_d_ôî©‹
(c⁄° 
two_d_ôî©‹
<
c⁄èöîty≥
>& 
ô
) :

474 
row_begö
(
ô
.row_begö), 
row_íd
(ô.row_íd), 
row_cuºít
(it.row_current),

475 
	$cﬁ_cuºít
(
ô
.
cﬁ_cuºít
Ë{ 
	}
}

477 
ty≥«me
 
	gc⁄èöîty≥
::
c⁄°_ôî©‹
 
row_begö
, 
	grow_íd
, 
	grow_cuºít
;

478 
ty≥«me
 
	gc⁄èöîty≥
::
vÆue_ty≥
::
TWOD_CONST_ITER_
 
cﬁ_cuºít
;

482 
ª„ªn˚
 
	g›î©‹
*(Ëc⁄° {  *
	gcﬁ_cuºít
; }

483 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

485 
	$adv™˚_∑°_íd
() {

486  
cﬁ_cuºít
 =
row_cuºít
->
	`TWOD_END_
() ) {

487 ++
row_cuºít
;

488 i‡–
row_cuºít
 !
row_íd
 )

489 
cﬁ_cuºít
 = 
row_cuºít
->
	`TWOD_BEGIN_
();

493 
	}
}

494 
	gôî©‹
& 
	g›î©‹
++() {

495 
as£π
(
row_cuºít
 !
row_íd
);

496 ++
	gcﬁ_cuºít
;

497 
adv™˚_∑°_íd
();

498  *
	gthis
;

500 
	gôî©‹
& 
	g›î©‹
--() {

501  
	grow_cuºít
 =
row_íd
 ||

502 
cﬁ_cuºít
 =
row_cuºít
->
TWOD_BEGIN_
() ) {

503 
as£π
(
row_cuºít
 !
row_begö
);

504 --
	grow_cuºít
;

505 
	gcﬁ_cuºít
 = 
row_cuºít
->
TWOD_END_
();

507 --
	gcﬁ_cuºít
;

508  *
	gthis
;

510 
ôî©‹
 
	g›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	gthis
;  
	gtmp
; }

511 
ôî©‹
 
	g›î©‹
--(Ë{ iãøt‹ 
tmp
(*
this
); --*
	gthis
;  
	gtmp
; }

513 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
ô
) const {

514  ( 
row_begö
 =
ô
.row_begin &&

515 
row_íd
 =
ô
.row_end &&

516 
row_cuºít
 =
ô
.row_current &&

517 (
row_cuºít
 =
row_íd
 || 
cﬁ_cuºít
 =
ô
.col_current) );

519 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 == it); }

527 
	gãm∂©e
 <
˛ass
 
	gc⁄èöîty≥
>

528 ˛as†
	cde°ru˘ive_two_d_ôî©‹
 {

529 
	mpublic
:

530 
de°ru˘ive_two_d_ôî©‹
 
	tôî©‹
;

532 #ifde‡
UNDERSTANDS_ITERATOR_TAGS


533 
	mSTL_NAMESPACE
::
	töput_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

536 
ty≥«me
 
	tc⁄èöîty≥
::
	tvÆue_ty≥
 
	t_tmp_vt
;

537 
ty≥«me
 
	t_tmp_vt
::
	tvÆue_ty≥
 value_type;

538 
ty≥«me
 
	t_tmp_vt
::
	tdif„ªn˚_ty≥
 difference_type;

539 
ty≥«me
 
	t_tmp_vt
::
	tª„ªn˚
Ñeference;

540 
ty≥«me
 
	t_tmp_vt
::
	tpoöãr
Öointer;

542 
de°ru˘ive_two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
begö
,

543 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
íd
,

544 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
cuº
)

545 : 
row_begö
(
begö
), 
row_íd
(
íd
), 
row_cuºít
(
cuº
), 
	$cﬁ_cuºít
() {

546 i‡–
cuº
 !
íd
 ) {

547 
cﬁ_cuºít
 = 
cuº
->
	`TWOD_BEGIN_
();

548 
	`adv™˚_∑°_íd
();

551 
	`de°ru˘ive_two_d_ôî©‹
(
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
begö
,

552 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
íd
,

553 
ty≥«me
 
c⁄èöîty≥
::
ôî©‹
 
cuº
,

554 
ty≥«me
 
c⁄èöîty≥
::
vÆue_ty≥
::
TWOD_ITER_
 
cﬁ
)

555 : 
	`row_begö
(
begö
), 
	`row_íd
(
íd
), 
	`row_cuºít
(
cuº
), 
	$cﬁ_cuºít
(
cﬁ
) {

556 
	`adv™˚_∑°_íd
();

557 
	}
}

558 
	$de°ru˘ive_two_d_ôî©‹
()

559 : 
	`row_begö
(), 
	`row_íd
(), 
	`row_cuºít
(), 
	$cﬁ_cuºít
() {

560 
	}
}

562 
ty≥«me
 
	gc⁄èöîty≥
::
ôî©‹
 
row_begö
, 
	grow_íd
, 
	grow_cuºít
;

563 
ty≥«me
 
	gc⁄èöîty≥
::
vÆue_ty≥
::
TWOD_ITER_
 
cﬁ_cuºít
;

566 
	$adv™˚_∑°_íd
() {

567  
cﬁ_cuºít
 =
row_cuºít
->
	`TWOD_END_
() ) {

568 
row_cuºít
->
	`˛ór
();

570 ++
row_cuºít
;

571 i‡–
row_cuºít
 !
row_íd
 )

572 
cﬁ_cuºít
 = 
row_cuºít
->
	`TWOD_BEGIN_
();

576 
	}
}

579 
ª„ªn˚
 
	g›î©‹
*(Ëc⁄° {  *
	gcﬁ_cuºít
; }

580 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

582 
	gôî©‹
& 
	g›î©‹
++() {

583 
as£π
(
row_cuºít
 !
row_íd
);

584 ++
	gcﬁ_cuºít
;

585 
adv™˚_∑°_íd
();

586  *
	gthis
;

588 
ôî©‹
 
	g›î©‹
++(Ë{ iãøt‹ 
tmp
(*
this
); ++*
	gthis
;  
	gtmp
; }

590 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
ô
) const {

591  ( 
row_begö
 =
ô
.row_begin &&

592 
row_íd
 =
ô
.row_end &&

593 
row_cuºít
 =
ô
.row_current &&

594 (
row_cuºít
 =
row_íd
 || 
cﬁ_cuºít
 =
ô
.col_current) );

596 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
ô
Ëc⁄° {  !(*
this
 == it); }

599 #unde‡
TWOD_BEGIN_


600 #unde‡
TWOD_END_


601 #unde‡
TWOD_ITER_


602 #unde‡
TWOD_CONST_ITER_


629 
	#PUT_
(
èke_‰om
, 
off£t
) \

630 i‡–
	`putc
(((
èke_‰om
Ë>> ((
off£t
Ë% (—ake_‰om)*8))Ë% 256, 
Â
) \

631 =
EOF
 ) \

632  
Ál£


	)

634 
	#GET_
(
add_to
, 
off£t
) \

635 i‡((
x
=
	`gëc
(
Â
)Ë=
EOF
) \

636  
Ál£
; \

638 
add_to
 |(
°©ic_ˇ°
<
size_ty≥
>(
x
Ë<< ((
off£t
Ë% (◊dd_to)*8)))

	)

641 
	gãm∂©e
 <
˛ass
 
	gT
, 
u_öt16_t
 
	gGROUP_SIZE
>

642 ˛as†
	c•¨£group
 {

643 
	mpublic
:

645 
T
 
	tvÆue_ty≥
;

646 
vÆue_ty≥
* 
	tpoöãr
;

647 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

648 
	mèbÀ_ôî©‹
<
	t•¨£group
<
	tT
, 
	tGROUP_SIZE
> > 
	tôî©‹
;

649 
	mc⁄°_èbÀ_ôî©‹
<
	t•¨£group
<
	tT
, 
	tGROUP_SIZE
> > 
	tc⁄°_ôî©‹
;

650 
	mèbÀ_ñemít_ad≠t‹
<
	t•¨£group
<
	tT
, 
	tGROUP_SIZE
> > 
	tñemít_ad≠t‹
;

651 
	mvÆue_ty≥
 &
	tª„ªn˚
;

652 c⁄° 
	tvÆue_ty≥
 &
	tc⁄°_ª„ªn˚
;

653 
u_öt16_t
 
	tsize_ty≥
;

654 
öt16_t
 
	tdif„ªn˚_ty≥
;

655 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

656 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

660 
poöãr
 
	tn⁄em±y_ôî©‹
;

661 
c⁄°_poöãr
 
	tc⁄°_n⁄em±y_ôî©‹
;

662 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tn⁄em±y_ôî©‹
> 
	tªvî£_n⁄em±y_ôî©‹
;

663 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tc⁄°_n⁄em±y_ôî©‹
> 
	tc⁄°_ªvî£_n⁄em±y_ôî©‹
;

666 
ôî©‹
 
	$begö
(Ë{  
	`ôî©‹
(
this
, 0); }

667 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 0); 
	}
}

668 
ôî©‹
 
	$íd
(Ë{  
	`ôî©‹
(
this
, 
	`size
()); 
	}
}

669 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 
	`size
()); 
	}
}

670 
ªvî£_ôî©‹
 
	$rbegö
(Ë{  
	`ªvî£_ôî©‹
(
	`íd
()); 
	}
}

671 
c⁄°_ªvî£_ôî©‹
 
	$rbegö
(Ëc⁄° {  
	`c⁄°_ªvî£_ôî©‹
(
	`íd
()); 
	}
}

672 
ªvî£_ôî©‹
 
	$ªnd
(Ë{  
	`ªvî£_ôî©‹
(
	`begö
()); 
	}
}

673 
c⁄°_ªvî£_ôî©‹
 
	$ªnd
(Ëc⁄° {  
	`c⁄°_ªvî£_ôî©‹
(
	`begö
()); 
	}
}

676 
n⁄em±y_ôî©‹
 
	$n⁄em±y_begö
(Ë{  
group
; 
	}
}

677 
c⁄°_n⁄em±y_ôî©‹
 
	$n⁄em±y_begö
(Ëc⁄° {  
group
; 
	}
}

678 
n⁄em±y_ôî©‹
 
	$n⁄em±y_íd
(Ë{  
group
 + 
num_buckës
; 
	}
}

679 
c⁄°_n⁄em±y_ôî©‹
 
	$n⁄em±y_íd
(Ëc⁄° {  
group
 + 
num_buckës
; 
	}
}

680 
ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_rbegö
() {

681  
	`ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_íd
());

682 
	}
}

683 
c⁄°_ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_rbegö
() const {

684  
	`c⁄°_ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_íd
());

685 
	}
}

686 
ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_ªnd
() {

687  
	`ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_begö
());

688 
	}
}

689 
c⁄°_ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_ªnd
() const {

690  
	`c⁄°_ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_begö
());

691 
	}
}

696 
c⁄°_ª„ªn˚
 
	$deÁu…_vÆue
() const {

697 
vÆue_ty≥
 
deÁu…vÆ
 = 
	`vÆue_ty≥
();

698  
deÁu…vÆ
;

699 
	}
}

702 
	g¥iv©e
:

704 
size_ty≥
 
	$ch¨bô
(
size_ty≥
 
i
Ë{  i >> 3; 
	}
}

705 
size_ty≥
 
	$modbô
(
size_ty≥
 
i
Ë{  1 << (i&7); 
	}
}

706 
boﬁ
 
	$bmã°
(
size_ty≥
 
i
Ëc⁄° {  
bôm≠
[
	`ch¨bô
(i)] & 
	`modbô
(i); 
	}
}

707 
	$bm£t
(
size_ty≥
 
i
Ë{ 
bôm≠
[
	`ch¨bô
(i)] |
	`modbô
(i); 
	}
}

708 
	$bm˛ór
(
size_ty≥
 
i
Ë{ 
bôm≠
[
	`ch¨bô
(i)] &~
	`modbô
(i); 
	}
}

710 * 
	$ªÆloc_‹_dõ
(* 
±r
, 
size_t
 
num_byãs
) {

711 * 
ªtvÆ
 = 
	`ªÆloc
(
±r
, 
num_byãs
);

712 i‡(
ªtvÆ
 =
NULL
) {

713 
	`Ârötf
(
°dîr
, "FATAL ERROR: failedÅoállocate %d bytes forÖtr %p",

714 
num_byãs
, 
±r
);

715 
	`exô
(1);

717  
ªtvÆ
;

718 
	}
}

720 
vÆue_ty≥
* 
	$Æloˇã_group
(
size_t
 
n
) {

721  
°©ic_ˇ°
<
vÆue_ty≥
*>(
	`ªÆloc_‹_dõ
(
NULL
,

722 
n
 * (
vÆue_ty≥
)));

723 
	}
}

725 
	$‰ì_group
() {

727 
vÆue_ty≥
* 
íd
 = 
group
 + 
num_buckës
;

728 
vÆue_ty≥
* 
p
 = 
group
;Ö !
íd
; ++p)

729 
p
->
vÆue_ty≥
::~
	`vÆue_ty≥
();

730 
	`‰ì
(
group
);

731 
group
 = 
NULL
;

732 
	}
}

734 
	gpublic
:

738 
size_ty≥
 
	$pos_to_off£t
(c⁄° *
bm
, 
size_ty≥
 
pos
) {

741 c⁄° 
bôs_ö
[256] = {

759 
size_ty≥
 
ªtvÆ
 = 0;

763  ; 
pos
 > 8;Öos -= 8 )

764 
ªtvÆ
 +
bôs_ö
[*
bm
++];

765  
ªtvÆ
 + 
bôs_ö
[*
bm
 & ((1 << 
pos
)-1)];

766 
	}
}

768 
size_ty≥
 
	$pos_to_off£t
(
size_ty≥
 
pos
) const {

769  
	`pos_to_off£t
(
bôm≠
, 
pos
);

770 
	}
}

773 
	gpublic
:

775 
	$•¨£group
(Ë: 
	`group
(0), 
	$num_buckës
(0Ë{ 
	`mem£t
(
bôm≠
, 0, (bôm≠)); 
	}
}

776 
	$•¨£group
(c⁄° 
•¨£group
& 
x
Ë: 
	`group
(0), 
	$num_buckës
(
x
.
num_buckës
) {

777 i‡–
num_buckës
 ) {

778 
group
 = 
	`Æloˇã_group
(
x
.
num_buckës
);

779 
	`unöôülized_c›y
(
x
.
group
, x.grou∞+ x.
num_buckës
, group);

781 
	`mem˝y
(
bôm≠
, 
x
.bitmap, (bitmap));

782 
	}
}

783 ~
	$•¨£group
(Ë{ 
	`‰ì_group
(); 
	}
}

788 
	g•¨£group
 &
	g›î©‹
=(c⁄° 
•¨£group
& 
x
) {

789 i‡–&
x
 =
this
 )  *this;

790 i‡–
	gx
.
	gnum_buckës
 == 0 ) {

791 
‰ì_group
();

793 
vÆue_ty≥
* 
	gp
 = 
Æloˇã_group
(
x
.
num_buckës
);

794 
unöôülized_c›y
(
x
.
group
, x.grou∞+ x.
num_buckës
, 
p
);

795 
‰ì_group
();

796 
	ggroup
 = 
p
;

798 
mem˝y
(
bôm≠
, 
x
.bitmap, (bitmap));

799 
	gnum_buckës
 = 
x
.
num_buckës
;

800  *
	gthis
;

804 
	$sw≠
(
•¨£group
& 
x
) {

805 
STL_NAMESPACE
::
	`sw≠
(
group
, 
x
.group);

806  
i
 = 0; i < (
bôm≠
) / (*bitmap); ++i )

807 
STL_NAMESPACE
::
	`sw≠
(
bôm≠
[
i
], 
x
.bitmap[i]);

808 
STL_NAMESPACE
::
	`sw≠
(
num_buckës
, 
x
.num_buckets);

809 
	}
}

812 
	$˛ór
() {

813 
	`‰ì_group
();

814 
	`mem£t
(
bôm≠
, 0, (bitmap));

815 
num_buckës
 = 0;

816 
	}
}

820 
size_ty≥
 
	$size
(Ëc⁄° {  
GROUP_SIZE
; 
	}
}

821 
size_ty≥
 
	$max_size
(Ëc⁄° {  
GROUP_SIZE
; 
	}
}

822 
boﬁ
 
	$em±y
(Ëc⁄° {  
Ál£
; 
	}
}

824 
size_ty≥
 
	$num_n⁄em±y
(Ëc⁄° {  
num_buckës
; 
	}
}

829 
c⁄°_ª„ªn˚
 
	$gë
(
size_ty≥
 
i
) const {

830 i‡–
	`bmã°
(
i
) )

831  
group
[
	`pos_to_off£t
(
bôm≠
, 
i
)];

833  
	`deÁu…_vÆue
();

834 
	}
}

837 
ª„ªn˚
 
	$muètög_gë
(
size_ty≥
 
i
) {

838 i‡–!
	`bmã°
(
i
) )

839 
	`£t
(
i
, 
	`deÁu…_vÆue
());

840  
group
[
	`pos_to_off£t
(
bôm≠
, 
i
)];

841 
	}
}

845 
c⁄°_ª„ªn˚
 
	g›î©‹
[](
size_ty≥
 
	gi
) const {

846  
gë
(
i
);

849 
ñemít_ad≠t‹
 
	g›î©‹
[](
size_ty≥
 
	gi
) {

850  
ñemít_ad≠t‹
(
this
, 
i
);

853 
	g¥iv©e
:

856 
	$£t_aux
(
size_ty≥
 
off£t
, 
åue_ty≥
) {

857 
group
 = (
vÆue_ty≥
 *)

858 
	`ªÆloc_‹_dõ
(
group
, (*groupË* (
num_buckës
+1));

859 
	`memmove
(
group
 + 
off£t
+1, group + offset,

860 (
num_buckës
 - 
off£t
Ë* (*
group
));

861 
	}
}

864 
	$£t_aux
(
size_ty≥
 
off£t
, 
Ál£_ty≥
) {

866 
vÆue_ty≥
* 
p
 = 
	`Æloˇã_group
(
num_buckës
 + 1);

867 
	`unöôülized_c›y
(
group
, grou∞+ 
off£t
, 
p
);

868 
	`unöôülized_c›y
(
group
 + 
off£t
, grou∞+ 
num_buckës
, 
p
 + offset + 1);

869 
	`‰ì_group
();

870 
group
 = 
p
;

871 
	}
}

873 
	gpublic
:

877 
ª„ªn˚
 
	$£t
(
size_ty≥
 
i
, 
c⁄°_ª„ªn˚
 
vÆ
) {

878 
size_ty≥
 
off£t
 = 
	`pos_to_off£t
(
bôm≠
, 
i
);

879 i‡–
	`bmã°
(
i
) ) {

881 
group
[
off£t
].
vÆue_ty≥
::~
	`vÆue_ty≥
();

883 
öãgøl_c⁄°™t
<
	tboﬁ
,

884 (
	thas_åivül_c›y
<
	tvÆue_ty≥
>::
	tvÆue
 &&

885 
	thas_åivül_assign
<
	tvÆue_ty≥
>::
	tvÆue
)>

886 
	tis_sim∂e_ty≥
;

887 
	`£t_aux
(
off£t
, 
	`is_sim∂e_ty≥
());

888 ++
num_buckës
;

889 
	`bm£t
(
i
);

893 
	`√w
(&
group
[
off£t
]Ë
	`vÆue_ty≥
(
vÆ
);

894  
group
[
off£t
];

895 
	}
}

898 
boﬁ
 
	$ã°
(
size_ty≥
 
i
) const {

899  
	`bmã°
(
i
);

900 
	}
}

901 
boﬁ
 
	$ã°
(
ôî©‹
 
pos
) const {

902  
	`bmã°
(
pos
.pos);

903 
	}
}

905 
	g¥iv©e
:

907 
	$îa£_aux
(
size_ty≥
 
off£t
, 
åue_ty≥
) {

908 
group
[
off£t
].
vÆue_ty≥
::~
	`vÆue_ty≥
();

909 
	`memmove
(
group
 + 
off£t
, group + offset+1,

910 ((
num_buckës
-1Ë- 
off£t
Ë* (*
group
));

911 
group
 = (
vÆue_ty≥
 *)

912 
	`ªÆloc_‹_dõ
(
group
, (*groupË* (
num_buckës
-1));

913 
	}
}

916 
	$îa£_aux
(
size_ty≥
 
off£t
, 
Ál£_ty≥
) {

918 
vÆue_ty≥
* 
p
 = 
	`Æloˇã_group
(
num_buckës
 - 1);

919 
	`unöôülized_c›y
(
group
, grou∞+ 
off£t
, 
p
);

920 
	`unöôülized_c›y
(
group
 + 
off£t
 + 1, grou∞+ 
num_buckës
, 
p
 + offset);

921 
	`‰ì_group
();

922 
group
 = 
p
;

923 
	}
}

925 
	gpublic
:

930 
	$îa£
(
size_ty≥
 
i
) {

931 i‡–
	`bmã°
(
i
) ) {

932 
size_ty≥
 
off£t
 = 
	`pos_to_off£t
(
bôm≠
,
i
);

933 i‡–
num_buckës
 == 1 ) {

934 
	`‰ì_group
();

935 
group
 = 
NULL
;

937 
öãgøl_c⁄°™t
<
	tboﬁ
,

938 (
	thas_åivül_c›y
<
	tvÆue_ty≥
>::
	tvÆue
 &&

939 
	thas_åivül_assign
<
	tvÆue_ty≥
>::
	tvÆue
)>

940 
	tis_sim∂e_ty≥
;

941 
	`îa£_aux
(
off£t
, 
	`is_sim∂e_ty≥
());

943 --
num_buckës
;

944 
	`bm˛ór
(
i
);

946 
	}
}

948 
	$îa£
(
ôî©‹
 
pos
) {

949 
	`îa£
(
pos
.pos);

950 
	}
}

952 
	$îa£
(
ôî©‹
 
°¨t
, iãøt‹ 
íd
) {

955  ; 
°¨t
 !
íd
; ++start )

956 
	`îa£
(
°¨t
);

957 
	}
}

965 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
) const {

966 
	`as£π
((
num_buckës
) == 2);

967 
	`PUT_
(
num_buckës
, 8);

968 
	`PUT_
(
num_buckës
, 0);

969 i‡–!
	`fwrôe
(
bôm≠
, (bôm≠), 1, 
Â
ËË 
Ál£
;

970  
åue
;

971 
	}
}

974 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
) {

975 
	`˛ór
();

977 
x
;

978 
	`GET_
(
num_buckës
, 8);

979 
	`GET_
(
num_buckës
, 0);

981 i‡–!
	`‰ód
(
bôm≠
, (bôm≠), 1, 
Â
ËË 
Ál£
;

985 
group
 = 
	`Æloˇã_group
(
num_buckës
);

986  
åue
;

987 
	}
}

992 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
) const {

993  
c⁄°_n⁄em±y_ôî©‹
 
ô
 = 
	`n⁄em±y_begö
();

994 
ô
 !
	`n⁄em±y_íd
(); ++it ) {

995 i‡–!
	`fwrôe
(&*
ô
, (*ô), 1, 
Â
ËË 
Ál£
;

997  
åue
;

998 
	}
}

1002 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
) {

1003  
n⁄em±y_ôî©‹
 
ô
 = 
	`n⁄em±y_begö
();

1004 
ô
 !
	`n⁄em±y_íd
(); ++it ) {

1005 i‡–!
	`‰ód
(
ªöãΩªt_ˇ°
<*>(&(*
ô
)), (*ô), 1, 
Â
) )

1006  
Ál£
;

1008  
åue
;

1009 
	}
}

1014 
boﬁ
 
	g›î©‹
==(c⁄° 
•¨£group
& 
x
) const {

1015  ( 
num_buckës
 =
x
.num_buckets &&

1016 
memcmp
(
bôm≠
, 
x
.bitmap, (bitmap)) == 0 &&

1017 
STL_NAMESPACE
::
equÆ
(
begö
(), 
íd
(), 
x
.begin()) );

1019 
boﬁ
 
	g›î©‹
<(c⁄° 
	g•¨£group
& 
	gx
) const {

1020  
	gSTL_NAMESPACE
::
Àxicogøphiˇl_com∑ª
(
begö
(), 
íd
(),

1021 
x
.
begö
(), x.
íd
());

1023 
boﬁ
 
	g›î©‹
!=(c⁄° 
•¨£group
& 
x
Ëc⁄° {  !(*
this
 == x); }

1024 
boﬁ
 
	g›î©‹
<=(c⁄° 
•¨£group
& 
x
Ëc⁄° {  !(x < *
this
); }

1025 
boﬁ
 
	g›î©‹
>(c⁄° 
	g•¨£group
& 
	gx
Ëc⁄° {  x < *
	gthis
; }

1026 
boﬁ
 
	g›î©‹
>=(c⁄° 
•¨£group
& 
x
Ëc⁄° {  !(*
this
 < x); }

1028 
	g¥iv©e
:

1030 
vÆue_ty≥
 *
group
;

1031 
	gbôm≠
[(
GROUP_SIZE
-1)/8 + 1];

1032 
size_ty≥
 
	gnum_buckës
;

1036 
	gãm∂©e
 <
˛ass
 
	gT
, 
u_öt16_t
 
	gGROUP_SIZE
>

1037 
ölöe
 
sw≠
(
•¨£group
<
T
,
GROUP_SIZE
> &
x
, s∑r£group<T,GROUP_SIZE> &
y
) {

1038 
	gx
.
sw≠
(
y
);

1044 
	gãm∂©e
 <
˛ass
 
	gT
, 
u_öt16_t
 
	gGROUP_SIZE
 = 
DEFAULT_SPARSEGROUP_SIZE
>

1045 ˛as†
	c•¨£èbÀ
 {

1046 
public
:

1048 
T
 
	tvÆue_ty≥
;

1049 
vÆue_ty≥
* 
	tpoöãr
;

1050 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

1051 
	mèbÀ_ôî©‹
<
	t•¨£èbÀ
<
	tT
, 
	tGROUP_SIZE
> > 
	tôî©‹
;

1052 
	mc⁄°_èbÀ_ôî©‹
<
	t•¨£èbÀ
<
	tT
, 
	tGROUP_SIZE
> > 
	tc⁄°_ôî©‹
;

1053 
	mèbÀ_ñemít_ad≠t‹
<
	t•¨£èbÀ
<
	tT
, 
	tGROUP_SIZE
> > 
	tñemít_ad≠t‹
;

1054 
	mvÆue_ty≥
 &
	tª„ªn˚
;

1055 c⁄° 
	tvÆue_ty≥
 &
	tc⁄°_ª„ªn˚
;

1056 
size_t
 
	tsize_ty≥
;

1057 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

1058 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

1059 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

1063 
	mtwo_d_ôî©‹
< 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> > >

1064 
	tn⁄em±y_ôî©‹
;

1065 
	mc⁄°_two_d_ôî©‹
< 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> > >

1066 
	tc⁄°_n⁄em±y_ôî©‹
;

1067 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tn⁄em±y_ôî©‹
> 
	tªvî£_n⁄em±y_ôî©‹
;

1068 
	mSTL_NAMESPACE
::
	tªvî£_ôî©‹
<
	tc⁄°_n⁄em±y_ôî©‹
> 
	tc⁄°_ªvî£_n⁄em±y_ôî©‹
;

1070 
	mde°ru˘ive_two_d_ôî©‹
< 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> > >

1071 
	tde°ru˘ive_ôî©‹
;

1074 
ôî©‹
 
	$begö
(Ë{  
	`ôî©‹
(
this
, 0); }

1075 
c⁄°_ôî©‹
 
	$begö
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 0); 
	}
}

1076 
ôî©‹
 
	$íd
(Ë{  
	`ôî©‹
(
this
, 
	`size
()); 
	}
}

1077 
c⁄°_ôî©‹
 
	$íd
(Ëc⁄° {  
	`c⁄°_ôî©‹
(
this
, 
	`size
()); 
	}
}

1078 
ªvî£_ôî©‹
 
	$rbegö
(Ë{  
	`ªvî£_ôî©‹
(
	`íd
()); 
	}
}

1079 
c⁄°_ªvî£_ôî©‹
 
	$rbegö
(Ëc⁄° {  
	`c⁄°_ªvî£_ôî©‹
(
	`íd
()); 
	}
}

1080 
ªvî£_ôî©‹
 
	$ªnd
(Ë{  
	`ªvî£_ôî©‹
(
	`begö
()); 
	}
}

1081 
c⁄°_ªvî£_ôî©‹
 
	$ªnd
(Ëc⁄° {  
	`c⁄°_ªvî£_ôî©‹
(
	`begö
()); 
	}
}

1084 
n⁄em±y_ôî©‹
 
	$n⁄em±y_begö
() {

1085  
	`n⁄em±y_ôî©‹
(
groups
.
	`begö
(), groups.
	`íd
(), groups.begin());

1086 
	}
}

1087 
c⁄°_n⁄em±y_ôî©‹
 
	$n⁄em±y_begö
() const {

1088  
	`c⁄°_n⁄em±y_ôî©‹
(
groups
.
	`begö
(),groups.
	`íd
(), groups.begin());

1089 
	}
}

1090 
n⁄em±y_ôî©‹
 
	$n⁄em±y_íd
() {

1091  
	`n⁄em±y_ôî©‹
(
groups
.
	`begö
(), groups.
	`íd
(), groups.end());

1092 
	}
}

1093 
c⁄°_n⁄em±y_ôî©‹
 
	$n⁄em±y_íd
() const {

1094  
	`c⁄°_n⁄em±y_ôî©‹
(
groups
.
	`begö
(), groups.
	`íd
(), groups.end());

1095 
	}
}

1096 
ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_rbegö
() {

1097  
	`ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_íd
());

1098 
	}
}

1099 
c⁄°_ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_rbegö
() const {

1100  
	`c⁄°_ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_íd
());

1101 
	}
}

1102 
ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_ªnd
() {

1103  
	`ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_begö
());

1104 
	}
}

1105 
c⁄°_ªvî£_n⁄em±y_ôî©‹
 
	$n⁄em±y_ªnd
() const {

1106  
	`c⁄°_ªvî£_n⁄em±y_ôî©‹
(
	`n⁄em±y_begö
());

1107 
	}
}

1108 
de°ru˘ive_ôî©‹
 
	$de°ru˘ive_begö
() {

1109  
	`de°ru˘ive_ôî©‹
(
groups
.
	`begö
(), groups.
	`íd
(), groups.begin());

1110 
	}
}

1111 
de°ru˘ive_ôî©‹
 
	$de°ru˘ive_íd
() {

1112  
	`de°ru˘ive_ôî©‹
(
groups
.
	`begö
(), groups.
	`íd
(), groups.end());

1113 
	}
}

1115 
	g¥iv©e
:

1116 
ty≥«me
 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> >::
	tª„ªn˚


1117 
	tGroupsRe„ªn˚
;

1118 
ty≥«me


1119 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> >::
	tc⁄°_ª„ªn˚


1120 
	tGroupsC⁄°Re„ªn˚
;

1121 
ty≥«me
 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> >::
	tôî©‹


1122 
	tGroupsIãøt‹
;

1123 
ty≥«me
 
	tve˘‹
< 
	t•¨£group
<
	tvÆue_ty≥
, 
	tGROUP_SIZE
> >::
	tc⁄°_ôî©‹


1124 
	tGroupsC⁄°Iãøt‹
;

1127 
size_ty≥
 
	$num_groups
(
size_ty≥
 
num
) {

1128  
num
 =0 ? 0 : (“um-1Ë/ 
GROUP_SIZE
) + 1;

1129 
	}
}

1131 
size_ty≥
 
	$pos_ö_group
(
size_ty≥
 
i
Ëc⁄° {  i % 
GROUP_SIZE
; 
	}
}

1132 
size_ty≥
 
	$group_num
(
size_ty≥
 
i
Ëc⁄° {  i / 
GROUP_SIZE
; 
	}
}

1133 
GroupsRe„ªn˚
 
	$which_group
(
size_ty≥
 
i
Ë{  
groups
[
	`group_num
(i)]; 
	}
}

1134 
GroupsC⁄°Re„ªn˚
 
	$which_group
(
size_ty≥
 
i
) const

1135 {  
groups
[
	`group_num
(
i
)]; 
	}
}

1138 
	gpublic
:

1140 
	$•¨£èbÀ
(
size_ty≥
 
size
 = 0)

1141 : 
	`groups
(
	`num_groups
(
size
)), 
	`èbÀ_size
(size), 
	$num_buckës
(0Ë{ 
	}
}

1146 
	$sw≠
(
•¨£èbÀ
& 
x
) {

1147 
STL_NAMESPACE
::
	`sw≠
(
groups
, 
x
.groups);

1148 
STL_NAMESPACE
::
	`sw≠
(
èbÀ_size
, 
x
.table_size);

1149 
STL_NAMESPACE
::
	`sw≠
(
num_buckës
, 
x
.num_buckets);

1150 
	}
}

1153 
	$˛ór
() {

1154 
GroupsIãøt‹
 
group
;

1155  
group
 = 
groups
.
	`begö
(); grou∞!groups.
	`íd
(); ++group ) {

1156 
group
->
	`˛ór
();

1158 
num_buckës
 = 0;

1159 
	}
}

1165 
size_ty≥
 
	$size
(Ëc⁄° {  
èbÀ_size
; 
	}
}

1166 
size_ty≥
 
	$max_size
(Ëc⁄° {  
	`size_ty≥
(-1); 
	}
}

1167 
boﬁ
 
	$em±y
(Ëc⁄° {  
èbÀ_size
 =0; 
	}
}

1169 
size_ty≥
 
	$num_n⁄em±y
(Ëc⁄° {  
num_buckës
; 
	}
}

1172 
	$ªsize
(
size_ty≥
 
√w_size
) {

1173 
groups
.
	`ªsize
(
	`num_groups
(
√w_size
));

1174 i‡–
√w_size
 < 
èbÀ_size
) {

1175 i‡–
√w_size
 % 
GROUP_SIZE
 > 0 )

1176 
groups
.
	`back
().
	`îa£
(groups.back().
	`begö
(Ë+ (
√w_size
 % 
GROUP_SIZE
),

1177 
groups
.
	`back
().
	`íd
());

1178 
num_buckës
 = 0;

1179 
GroupsC⁄°Iãøt‹
 
group
;

1180  
group
 = 
groups
.
	`begö
(); grou∞!groups.
	`íd
(); ++group )

1181 
num_buckës
 +
group
->
	`num_n⁄em±y
();

1183 
èbÀ_size
 = 
√w_size
;

1184 
	}
}

1188 
boﬁ
 
	$ã°
(
size_ty≥
 
i
) const {

1189  
	`which_group
(
i
).
	`ã°
(
	`pos_ö_group
(i));

1190 
	}
}

1191 
boﬁ
 
	$ã°
(
ôî©‹
 
pos
) const {

1192  
	`which_group
(
pos
.pos).
	`ã°
(
	`pos_ö_group
(pos.pos));

1193 
	}
}

1194 
boﬁ
 
	$ã°
(
c⁄°_ôî©‹
 
pos
) const {

1195  
	`which_group
(
pos
.pos).
	`ã°
(
	`pos_ö_group
(pos.pos));

1196 
	}
}

1200 
c⁄°_ª„ªn˚
 
	$gë
(
size_ty≥
 
i
) const {

1201 
	`as£π
(
i
 < 
èbÀ_size
);

1202  
	`which_group
(
i
).
	`gë
(
	`pos_ö_group
(i));

1203 
	}
}

1206 
ª„ªn˚
 
	$muètög_gë
(
size_ty≥
 
i
) {

1207 
	`as£π
(
i
 < 
èbÀ_size
);

1208 
size_ty≥
 
ﬁd_numbuckës
 = 
	`which_group
(
i
).
	`num_n⁄em±y
();

1209 
ª„ªn˚
 
ªtvÆ
 = 
	`which_group
(
i
).
	`muètög_gë
(
	`pos_ö_group
(i));

1210 
num_buckës
 +
	`which_group
(
i
).
	`num_n⁄em±y
(Ë- 
ﬁd_numbuckës
;

1211  
ªtvÆ
;

1212 
	}
}

1215 
c⁄°_ª„ªn˚
 
	g›î©‹
[](
size_ty≥
 
	gi
) const {

1216  
gë
(
i
);

1219 
ñemít_ad≠t‹
 
	g›î©‹
[](
size_ty≥
 
	gi
) {

1220  
ñemít_ad≠t‹
(
this
, 
i
);

1224 
c⁄°_n⁄em±y_ôî©‹
 
	$gë_ôî
(
size_ty≥
 
i
) const {

1225 
	`as£π
(
	`ã°
(
i
));

1226  
	`c⁄°_n⁄em±y_ôî©‹
(

1227 
groups
.
	`begö
(), groups.
	`íd
(),

1228 
groups
.
	`begö
(Ë+ 
	`group_num
(
i
),

1229 (
groups
[
	`group_num
(
i
)].
	`n⁄em±y_begö
() +

1230 
groups
[
	`group_num
(
i
)].
	`pos_to_off£t
(
	`pos_ö_group
(i))));

1231 
	}
}

1233 
n⁄em±y_ôî©‹
 
	$gë_ôî
(
size_ty≥
 
i
) {

1234 
	`as£π
(
	`ã°
(
i
));

1235  
	`n⁄em±y_ôî©‹
(

1236 
groups
.
	`begö
(), groups.
	`íd
(),

1237 
groups
.
	`begö
(Ë+ 
	`group_num
(
i
),

1238 (
groups
[
	`group_num
(
i
)].
	`n⁄em±y_begö
() +

1239 
groups
[
	`group_num
(
i
)].
	`pos_to_off£t
(
	`pos_ö_group
(i))));

1240 
	}
}

1245 
ª„ªn˚
 
	$£t
(
size_ty≥
 
i
, 
c⁄°_ª„ªn˚
 
vÆ
) {

1246 
	`as£π
(
i
 < 
èbÀ_size
);

1247 
size_ty≥
 
ﬁd_numbuckës
 = 
	`which_group
(
i
).
	`num_n⁄em±y
();

1248 
ª„ªn˚
 
ªtvÆ
 = 
	`which_group
(
i
).
	`£t
(
	`pos_ö_group
(i), 
vÆ
);

1249 
num_buckës
 +
	`which_group
(
i
).
	`num_n⁄em±y
(Ë- 
ﬁd_numbuckës
;

1250  
ªtvÆ
;

1251 
	}
}

1255 
	$îa£
(
size_ty≥
 
i
) {

1256 
	`as£π
(
i
 < 
èbÀ_size
);

1257 
size_ty≥
 
ﬁd_numbuckës
 = 
	`which_group
(
i
).
	`num_n⁄em±y
();

1258 
	`which_group
(
i
).
	`îa£
(
	`pos_ö_group
(i));

1259 
num_buckës
 +
	`which_group
(
i
).
	`num_n⁄em±y
(Ë- 
ﬁd_numbuckës
;

1260 
	}
}

1262 
	$îa£
(
ôî©‹
 
pos
) {

1263 
	`îa£
(
pos
.pos);

1264 
	}
}

1266 
	$îa£
(
ôî©‹
 
°¨t
, iãøt‹ 
íd
) {

1269  ; 
°¨t
 !
íd
; ++start )

1270 
	`îa£
(
°¨t
);

1271 
	}
}

1278 
	g¥iv©e
:

1280 c⁄° 
MAGIC_NUMBER
 = 0x24687531;

1290 
boﬁ
 
	$wrôe_32_‹_64
(
FILE
* 
Â
, 
size_ty≥
 
vÆue
) {

1291 i‡–
vÆue
 < 0xFFFFFFFFULL ) {

1292 
	`PUT_
(
vÆue
, 24);

1293 
	`PUT_
(
vÆue
, 16);

1294 
	`PUT_
(
vÆue
, 8);

1295 
	`PUT_
(
vÆue
, 0);

1296 } i‡–
vÆue
 == 0xFFFFFFFFUL ) {

1297 
	`PUT_
(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0);

1298 
	`PUT_
(0, 0); PUT_(0, 0); PUT_(0, 0); PUT_(0, 0);

1299 
	`PUT_
(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0);

1301 
	`PUT_
(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0); PUT_(0xFF, 0);

1302 
	`PUT_
(
vÆue
, 56);

1303 
	`PUT_
(
vÆue
, 48);

1304 
	`PUT_
(
vÆue
, 40);

1305 
	`PUT_
(
vÆue
, 32);

1306 
	`PUT_
(
vÆue
, 24);

1307 
	`PUT_
(
vÆue
, 16);

1308 
	`PUT_
(
vÆue
, 8);

1309 
	`PUT_
(
vÆue
, 0);

1311  
åue
;

1312 
	}
}

1314 
boﬁ
 
	$ªad_32_‹_64
(
FILE
* 
Â
, 
size_ty≥
 *
vÆue
) {

1315 
size_ty≥
 
fú°4
 = 0;

1316 
x
;

1317 
	`GET_
(
fú°4
, 24);

1318 
	`GET_
(
fú°4
, 16);

1319 
	`GET_
(
fú°4
, 8);

1320 
	`GET_
(
fú°4
, 0);

1321 i‡–
fú°4
 < 0xFFFFFFFFULL ) {

1322 *
vÆue
 = 
fú°4
;

1324 
	`GET_
(*
vÆue
, 56);

1325 
	`GET_
(*
vÆue
, 48);

1326 
	`GET_
(*
vÆue
, 40);

1327 
	`GET_
(*
vÆue
, 32);

1328 
	`GET_
(*
vÆue
, 24);

1329 
	`GET_
(*
vÆue
, 16);

1330 
	`GET_
(*
vÆue
, 8);

1331 
	`GET_
(*
vÆue
, 0);

1333  
åue
;

1334 
	}
}

1336 
	gpublic
:

1337 
boﬁ
 
	$wrôe_mëad©a
(
FILE
 *
Â
) const {

1338 i‡–!
	`wrôe_32_‹_64
(
Â
, 
MAGIC_NUMBER
ËË 
Ál£
;

1339 i‡–!
	`wrôe_32_‹_64
(
Â
, 
èbÀ_size
ËË 
Ál£
;

1340 i‡–!
	`wrôe_32_‹_64
(
Â
, 
num_buckës
ËË 
Ál£
;

1342 
GroupsC⁄°Iãøt‹
 
group
;

1343  
group
 = 
groups
.
	`begö
(); grou∞!groups.
	`íd
(); ++group )

1344 i‡–
group
->
	`wrôe_mëad©a
(
Â
Ë=
Ál£
 )  false;

1345  
åue
;

1346 
	}
}

1349 
boﬁ
 
	$ªad_mëad©a
(
FILE
 *
Â
) {

1350 
size_ty≥
 
magic_ªad
 = 0;

1351 i‡–!
	`ªad_32_‹_64
(
Â
, &
magic_ªad
ËË 
Ál£
;

1352 i‡–
magic_ªad
 !
MAGIC_NUMBER
 ) {

1353 
	`˛ór
();

1354  
Ál£
;

1357 i‡–!
	`ªad_32_‹_64
(
Â
, &
èbÀ_size
ËË 
Ál£
;

1358 i‡–!
	`ªad_32_‹_64
(
Â
, &
num_buckës
ËË 
Ál£
;

1360 
	`ªsize
(
èbÀ_size
);

1361 
GroupsIãøt‹
 
group
;

1362  
group
 = 
groups
.
	`begö
(); grou∞!groups.
	`íd
(); ++group )

1363 i‡–
group
->
	`ªad_mëad©a
(
Â
Ë=
Ál£
 )  false;

1364  
åue
;

1365 
	}
}

1371 
boﬁ
 
	$wrôe_n›oöãr_d©a
(
FILE
 *
Â
) const {

1372  
c⁄°_n⁄em±y_ôî©‹
 
ô
 = 
	`n⁄em±y_begö
();

1373 
ô
 !
	`n⁄em±y_íd
(); ++it ) {

1374 i‡–!
	`fwrôe
(&*
ô
, (*ô), 1, 
Â
ËË 
Ál£
;

1376  
åue
;

1377 
	}
}

1380 
boﬁ
 
	$ªad_n›oöãr_d©a
(
FILE
 *
Â
) {

1381  
n⁄em±y_ôî©‹
 
ô
 = 
	`n⁄em±y_begö
();

1382 
ô
 !
	`n⁄em±y_íd
(); ++it ) {

1383 i‡–!
	`‰ód
(
ªöãΩªt_ˇ°
<*>(&(*
ô
)), (*ô), 1, 
Â
) )

1384  
Ál£
;

1386  
åue
;

1387 
	}
}

1392 
boﬁ
 
	g›î©‹
==(c⁄° 
•¨£èbÀ
& 
x
) const {

1393  ( 
èbÀ_size
 =
x
.table_size &&

1394 
num_buckës
 =
x
.num_buckets &&

1395 
groups
 =
x
.groups );

1397 
boﬁ
 
	g›î©‹
<(c⁄° 
	g•¨£èbÀ
& 
	gx
) const {

1398  
	gSTL_NAMESPACE
::
Àxicogøphiˇl_com∑ª
(
begö
(), 
íd
(),

1399 
x
.
begö
(), x.
íd
());

1401 
boﬁ
 
	g›î©‹
!=(c⁄° 
•¨£èbÀ
& 
x
Ëc⁄° {  !(*
this
 == x); }

1402 
boﬁ
 
	g›î©‹
<=(c⁄° 
•¨£èbÀ
& 
x
Ëc⁄° {  !(x < *
this
); }

1403 
boﬁ
 
	g›î©‹
>(c⁄° 
	g•¨£èbÀ
& 
	gx
Ëc⁄° {  x < *
	gthis
; }

1404 
boﬁ
 
	g›î©‹
>=(c⁄° 
•¨£èbÀ
& 
x
Ëc⁄° {  !(*
this
 < x); }

1407 
	g¥iv©e
:

1409 
ve˘‹
< 
•¨£group
<
vÆue_ty≥
, 
	gGROUP_SIZE
> > 
	ggroups
;

1410 
size_ty≥
 
	gèbÀ_size
;

1411 
size_ty≥
 
	gnum_buckës
;

1415 
	gãm∂©e
 <
˛ass
 
	gT
, 
u_öt16_t
 
	gGROUP_SIZE
>

1416 
ölöe
 
sw≠
(
•¨£èbÀ
<
T
,
GROUP_SIZE
> &
x
, s∑r£èbÀ<T,GROUP_SIZE> &
y
) {

1417 
	gx
.
sw≠
(
y
);

1420 #unde‡
GET_


1421 #unde‡
PUT_


1423 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/google/type_traits.h

42 #i‚de‡
BASE_TYPE_TRAITS_H__


43 
	#BASE_TYPE_TRAITS_H__


	)

45 
	~<googÀ/•¨£hash/c⁄fig.h
>

46 
	~<utûôy
>

48 
_START_GOOGLE_NAMESPACE_


55 
	gãm∂©e
<
˛ass
 
	gT
, 
T
 
	gv
>

56 
	söãgøl_c⁄°™t
 {

57 c⁄° 
T
 
	mvÆue
 = 
v
;

58 
T
 
	tvÆue_ty≥
;

59 
	möãgøl_c⁄°™t
<
	tT
, 
	tv
> 
	tty≥
;

62 
	gãm∂©e
 <
˛ass
 
	gT
, 
T
 
	gv
> c⁄° T 
	göãgøl_c⁄°™t
<T, v>::
vÆue
;

66 
	göãgøl_c⁄°™t
<
	tboﬁ
, 
	tåue
> 
	tåue_ty≥
;

67 
	göãgøl_c⁄°™t
<
	tboﬁ
, 
	tÁl£
> 
	tÁl£_ty≥
;

70 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
 : 
Ál£_ty≥
 { };

71 
	gãm∂©e
<> 
	gis_öãgøl
<
	gboﬁ
> : 
åue_ty≥
 { };

72 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

73 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

74 
	gãm∂©e
<> 
	gis_öãgøl
<sig√d > : 
åue_ty≥
 { };

75 #i‡
deföed
(
_MSC_VER
)

79 
	gãm∂©e
<> 
	gis_öãgøl
<
	g__wch¨_t
> : 
åue_ty≥
 { };

81 
	gãm∂©e
<> 
	gis_öãgøl
<
	gwch¨_t
> : 
åue_ty≥
 { };

83 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

84 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

85 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

86 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

87 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

88 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

89 #ifde‡
HAVE_LONG_LONG


90 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

91 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

96 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
 : 
Ál£_ty≥
 { };

97 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

98 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

99 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

103 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
 : 
Ál£_ty≥
 { };

104 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
<T*> : 
åue_ty≥
 { };

110 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod


111 : 
öãgøl_c⁄°™t
<
boﬁ
, (
	gis_öãgøl
<
	gT
>::
vÆue
 ||

112 
is_Êﬂtög_poöt
<
T
>::
vÆue
 ||

113 
is_poöãr
<
T
>::
vÆue
)> { };

114 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod
<c⁄° T> : 
is_pod
<
T
> { };

121 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c›y
 : 
is_pod
<
T
> { };

122 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_c›y
<
	g°d
::
∑ú
<
T
, U> >

123 : 
öãgøl_c⁄°™t
<
boﬁ
,

124 (
	ghas_åivül_c›y
<
	gT
>::
vÆue
 &&

125 
has_åivül_c›y
<
U
>::
vÆue
)> { };

126 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_c›y
<A[
N
]>

127 : 
has_åivül_c›y
<
A
> { };

134 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_assign
 : 
is_pod
<
T
> { };

135 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_assign
<
	g°d
::
∑ú
<
T
, U> >

136 : 
öãgøl_c⁄°™t
<
boﬁ
,

137 (
	ghas_åivül_assign
<
	gT
>::
vÆue
 &&

138 
has_åivül_assign
<
U
>::
vÆue
)> { };

139 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_assign
<A[
N
]>

140 : 
has_åivül_assign
<
A
> { };

143 
	g_END_GOOGLE_NAMESPACE_


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/sockios.h

1 #i‚de‡
_ASM_X86_SOCKIOS_H


2 
	#_ASM_X86_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
 (
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


844 #unde‡
__√ed_mb°©e_t


845 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
2
.
.
1
/usr/include
136
3285
R_ACK.cc
R_ACK.h
R_Checkpoint.cc
R_Checkpoint.h
R_Client.cc
R_Client.h
R_Cryptography.h
R_Deliver.cc
R_Deliver.h
R_Mes_queue.cc
R_Mes_queue.h
R_Message.cc
R_Message.h
R_Message_tags.h
R_Node.cc
R_Node.h
R_Principal.cc
R_Principal.h
R_Rep_info.cc
R_Rep_info.h
R_Replica.cc
R_Replica.h
R_Reply.cc
R_Reply.h
R_Request.cc
R_Request.h
SuperFastHash.cc
SuperFastHash.h
ring_libbyz.cc
ring_libbyz.h
/usr/include/arpa/inet.h
/usr/include/crypt.h
/usr/include/google/dense_hash_map
/usr/include/google/sparse_hash_map
/usr/include/limits.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/in.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/google/sparsehash/config.h
/usr/include/google/sparsehash/densehashtable.h
/usr/include/google/sparsehash/hash_fun.h
/usr/include/google/sparsehash/sparsehashtable.h
/usr/include/libio.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/param.h
/usr/include/asm/socket.h
/usr/include/assert.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/google/sparsetable
/usr/include/google/type_traits.h
/usr/include/sys/cdefs.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/inttypes.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
